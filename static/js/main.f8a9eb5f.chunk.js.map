{"version":3,"sources":["model.ts","Components/Select/SelectFilter.tsx","store/actions/Actions.tsx","store/actions/actionTypes.tsx","history.ts","Components/Buttons/OpenButton.tsx","Components/Buttons/SaveButton.tsx","Components/Buttons/UndoButton.tsx","Components/Buttons/RedoButton.tsx","Intentions.tsx","actions.ts","Components/Toolbar/Toolbar.tsx","Components/Video/Video.tsx","Components/Select/SelectFontSize.tsx","Components/SelectedObject/SelectedArea.tsx","Components/Select/SelectFontFamily.tsx","Components/SelectedObject/slyderType.tsx","Components/SelectedObject/Slider.tsx","Components/SelectedObject/TextObject.tsx","Components/SelectedObject/ShapeObject.tsx","Components/Canvas/Canvas.tsx","Components/SelectedObject/CoordinateTransformer.tsx","Components/SelectedObject/SelectingSA.tsx","Components/SelectedObject/SelectingTextObject.tsx","Components/Gallery/PreviewImg.tsx","Components/Gallery/Gallery.tsx","Components/EditorComponent/EditorComponent.tsx","App.tsx","serviceWorker.js","store/reducers/editorReducer.tsx","store/reducers/rootReducer.tsx","index.tsx"],"names":["Figure","SelectFilter","props","htmlFor","label","Math","random","className","id","value","onChange","options","map","option","index","key","text","addFigure","payload","type","addImage","resizeEditorObj","rollEditor","undoStack","redoStack","undo","editor","pop","push","redo","addToHistory","connect","state","editorReducer","dispatch","onAddImage","canvas","useContext","CanvasContext","title","name","e","file","target","files","image","Image","binaryData","url","window","URL","createObjectURL","Blob","src","context","getContext","onload","imageWidth","width","imageHeight","height","confirm","drawImage","newImgData","getImageData","console","log","newImage","SaveButton","saveButtonProps","useState","ext","setExt","onSubmit","event","preventDefault","dataURL","toDataURL","link","document","createElement","href","download","click","onRollBack","onClick","length","newEditor","Intention","onRollOn","cleanCanvas","pixelArrayLength","bufferArray","Uint8Array","i","ImageData","Uint8ClampedArray","buffer","createCanvas","selectedObject","position","newPoint","w","newWidth","h","newHeight","putImgDataOnCanvas","arrayOfIndexesToChange","getIndexes","newPxArray","data","slice","isSelectedArea","pixelArray","joinSelectionWithCanvas","arr","startX","x","startY","y","endY","selectionWidth","k","startRowIndex","getPxArrIndex","j","selectArea","getImageDataByCoords","startPoint","endPoint","min","abs","selectTextArea","fontFamily","fontSize","color","fontWeight","fontStyle","textDecoration","backgroundColor","deSelectArea","isTextObject","editorObj","isShapeObject","triangle","rectangle","circle","dropSelection","where","dropTextObj","p","selectionHeight","makeSelectionBeTransparent","makeSelectionBeWhite","whitenAllExceptSelection","blankImgDataPxArray","canvasPxArray","cut","whitenArea","crop","filter","filterColor","average","applyFilter","borderColor","setFigureBackgroundColor","newColor","setFigureBorderColor","onDeselectArea","onApplyFilter","onCut","onCrop","onCreateCanvas","onAddFigure","toolbarRef","useRef","showTextBtnRef","setFilter","onFigureClicked","newFigure","onSetFigure","onSetIntention","HandleSelectedObject","figureType","select","useLayoutEffect","current","style","ref","BrowseRemoteGallery","SelectArea","TakePhoto","SelectTextObj","video","cancelPhotoButtonRef","takePhotoButtonRef","stopWebCam","srcObject","getVideoTracks","stop","useEffect","navigator","mediaDevices","getUserMedia","audio","then","stream","querySelector","onloadedmetadata","play","catch","err0r","setTimeout","cancelPhotoButton","takePhotoButton","display","controls","autoPlay","onDropSelection","onJoinSelectionWithCanvas","canvasCoords","getBoundingClientRect","isMousePressed","setIsMousePressed","offset","setOffset","top","calculateInitPos","setPosition","selCanvasRef","onMouseDownSAHandler","clientX","clientY","adjustCoords","left","selCanv","right","bottom","max","onMouseMoveSAHandler","adjustedCoords","onMouseUpSAHandler","selCanvas","addEventListener","removeEventListener","selContext","setAttribute","toString","selAreaImgData","putImageData","SelectFontFamily","sizes","SliderType","SelectFontSize","Slider","sliderRef","cursorStyle","onMouseDownSliderHandler","onMouseMoveSliderHandler","initPoints","leftTop","pos","leftBottom","rightTop","rightBottom","sliderType","adjastedCoords","LeftTop","LeftBottom","RightTop","RightBottom","getNewTextAreaParams","changeSize","onMouseUpSliderHandler","showNewFigure","sliderElem","cursor","fonts","textAreaCoords","onResizeEditorObj","onDropTextObj","textbarRef","setText","textColor","setTextColor","setFontWeight","setFontStyle","setFontFamily","setFontSize","resetFigure","textAreaRef","selectFontFamily","selectFontSize","Number","onChangeSize","onMouseDownTextObjHandler","defaultPrevented","onMouseMoveTextObjHandler","onMouseUpTextObjHandler","textAreaElem","textbar","margin","lineHeight","ctx","fillStyle","font","maxWidth","words","split","line","n","measureText","symbols","symbolsLine","testSymbolsLine","fillText","testLine","wrapText","autoFocus","borderWidth","strokeWidth","drawFigure","figure","start","beginPath","lineWidth","strokeStyle","ellipse","PI","moveTo","lineTo","closePath","stroke","fill","onDropShapeObj","dropShapeObj","onSetFigureBackgroundColor","onSetFigureBorderColor","shapebarRef","canvasRef","onMouseDownShapeObjHandler","onMouseMoveShapeObjHandler","selCanvasCoords","onMouseUpShapeObjHandler","resetFigureCoords","onShowNewFigure","canvasElem","shapebar","setCanv","transform","end","bounds","endX","onSelectArea","onWhitenArea","svgRef","down","mouseState","setMouseState","onMouseDownSVGHandler","onMouseMoveSVGHandler","onMouseUpSVGHandler","selectionCoords","adjustedSVGcoords","svg","onSelectTextArea","onMouseDownHandler","onMouseMoveHandler","onMouseUpHandler","mediumSrc","crossOrigin","photo","tiny","client","createClient","Gallery","Format","jpeg","prewievsArray","query","setQuery","page","setPage","previewsArr","fillPreviewsArr","showPreviews","photos","search","per_page","medium","getPhotos","placeholder","React","createContext","setFigure","setShowNewFigure","intention","setIntention","setCanvas","intent","Provider","should","onRoll","onKeyPressed","ctrlKey","which","keyCode","Boolean","location","hostname","match","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","next","app","StrictMode","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f8a9eb5f.chunk.js","sourcesContent":["export enum Figure {\r\n\ttriangle,\r\n\trectangle,\r\n\tcircle\r\n}\r\n\r\nexport type Point = {\r\n\tx: number,\r\n\ty: number,\r\n}\r\n\r\nexport type EditorObject = {\r\n\tposition: Point,\r\n\tw: number,\r\n\th: number,\r\n}\r\n\r\nexport type SelectedArea = EditorObject & {\r\n\ttype: 'selectedArea',\r\n\tpixelArray: ImageData\r\n}\r\n\r\nexport type TextObject = EditorObject & {\r\n\ttype: 'text',\r\n\ttext: string,\r\n\tfontFamily: string,\r\n\tfontSize: number,\r\n\tcolor: string,\r\n\tfontWeight: number,\r\n\tfontStyle: string,\r\n\ttextDecoration: string,\r\n\tbackgroundColor: string\r\n}\r\n\r\nexport type ShapeObject = EditorObject & {\r\n\ttype: Figure,\r\n\tbackgroundColor: string,\r\n\tborderColor: string,\r\n}\r\n\r\nexport type Editor = {\r\n\tcanvas: ImageData,\r\n\tselectedObject: TextObject | ShapeObject | SelectedArea | null,\r\n}\r\n\r\n\r\n//export {FilterType, Point, EditorObject, SelectedArea, TextObject, ShapeObject, Editor}","import React from 'react';\r\nimport './SelectFilter.css';\r\n\r\ninterface SelectProps {\r\n    label: string,\r\n    value: string,\r\n    onChange: (event: any) => void,\r\n    options: Array<Object>;\r\n}\r\n\r\nconst SelectFilter = (props: SelectProps) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className=\"filterBtn__selectWrapper\" >\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                className=\"filterBtn__select\"\r\n            >\r\n                {props.options.map((option: any, index: any) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}    \r\n            </select>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectFilter;","//это функции, которые выдают определенный action\r\nimport { SELECT_AREA, WHITEN_AREA, JOIN_SA_WITH_CANVAS, DROP_SA, DESELECT_AREA, ADD_FIGURE, APPLY_FILTER, CUT,\r\nCROP, CREATE_CANVAS, ADD_IMAGE, RESIZE_EDITOR_OBJ, DROP_TEXT_OBJ, SELECT_TEXT_AREA, DROP_SHAPE_OBJ, SET_FIGURE_BACKGROUND_COLOR,\r\nSET_FIGURE_BORDER_COLOR, ROLL } from './actionTypes';\r\nimport { Editor, Point, Figure } from '../../model';\r\n\r\n\r\nexport function selectArea(payload: {startPoint: Point, endPoint: Point}) {\r\n    return {\r\n        type: SELECT_AREA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function whitenArea() {\r\n    return {\r\n        type: WHITEN_AREA,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function joinSelectionWithCanvas() {\r\n    return {\r\n        type: JOIN_SA_WITH_CANVAS,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function dropSelection(payload: {where: Point}) {\r\n    return {\r\n        type: DROP_SA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function deselectArea() {\r\n    return {\r\n        type: DESELECT_AREA,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function addFigure(payload: {figureType: Figure}) {\r\n    return {\r\n        type: ADD_FIGURE,\r\n        payload: payload\r\n    }\r\n}\r\nexport function applyFilter(payload: {filterColor: string}) {\r\n    return {\r\n        type: APPLY_FILTER,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function crop() {\r\n    return {\r\n        type: CROP,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function cut() {\r\n    return {\r\n        type: CUT,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function createCanvas(payload: {width: number, height: number}) {\r\n    return {\r\n        type: CREATE_CANVAS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function addImage(payload: {newImage: ImageData}) {\r\n    return {\r\n        type: ADD_IMAGE,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function resizeEditorObj(payload: {newPoint: Point, newWidth: number, newHeight: number}) {\r\n    return {\r\n        type: RESIZE_EDITOR_OBJ,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function dropTextObj(payload: {where: Point}) {\r\n    return {\r\n        type: DROP_TEXT_OBJ,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function selectTextArea(payload: {startPoint: Point, endPoint: Point}) {\r\n    return {\r\n        type: SELECT_TEXT_AREA,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function dropShapeObj(payload: {where: Point}) {\r\n    return {\r\n        type: DROP_SHAPE_OBJ,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function setFigureBorderColor(payload: {newColor: string}) {\r\n    return {\r\n        type: SET_FIGURE_BORDER_COLOR,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function setFigureBackgroundColor(payload: {newColor: string}) {\r\n    return {\r\n        type: SET_FIGURE_BACKGROUND_COLOR,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function rollEditor(payload: {newEditor: Editor}) {\r\n    return {\r\n        type: ROLL,\r\n        payload: payload\r\n    }\r\n}    ","export const SELECT_AREA = 'SELECT_AREA';\r\nexport const WHITEN_AREA = 'WHITEN_AREA';\r\nexport const JOIN_SA_WITH_CANVAS = 'JOIN_SA_WITH_CANVAS';\r\nexport const DROP_SA = 'DROP_SA';\r\nexport const DESELECT_AREA = 'DESELECT_AREA';\r\nexport const ADD_FIGURE = 'ADD_FIGURE';\r\nexport const APPLY_FILTER = 'APPLY_FILTER';\r\nexport const CUT = 'CUT';\r\nexport const CROP = 'CROP';\r\nexport const CREATE_CANVAS = 'CREATE_CANVAS';\r\nexport const ADD_IMAGE = 'ADD_IMAGE';\r\nexport const RESIZE_EDITOR_OBJ = 'RESIZE_EDITOR_OBJ';\r\nexport const DROP_TEXT_OBJ = 'DROP_TEXT_OBJ';\r\nexport const SELECT_TEXT_AREA = 'SELECT_TEXT_AREA';\r\nexport const DROP_SHAPE_OBJ = 'DROP_SHAPE_OBJ';\r\nexport const SET_FIGURE_BORDER_COLOR = 'SET_FIGURE_BORDER_COLOR';\r\nexport const SET_FIGURE_BACKGROUND_COLOR = 'SET_FIGURE_BACKGROUND_COLOR';\r\nexport const ROLL = 'ROLL';","import { Editor } from './model';\r\n\r\nexport const undoStack: Array<Editor> = []\r\nexport const redoStack: Array<Editor> = []\r\n\r\nexport function undo() {\r\n\tconst editor: Editor = undoStack.pop()!;\r\n\tredoStack.push(editor);\r\n\treturn editor;\r\n}\r\n\r\nexport function redo() {\r\n\treturn redoStack.pop();\r\n}\r\n\r\nexport function addToHistory(editor:Editor) {\r\n\tundoStack.push(editor);\r\n}","import React, {useContext}  from 'react';\r\nimport {Editor} from '../../model';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport { addImage } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\nimport './buttons.css';\r\n\r\ninterface OpenButtonProps {\r\n    editor: Editor,\r\n    onAddImage: (payload: {newImage: ImageData}) => void\r\n}\r\n\r\nfunction OpenButton(props: OpenButtonProps) {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    \r\n    function onImageChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        let file: any = e!.target!.files![0];\r\n        const image = new Image();\r\n        var binaryData = [];\r\n        binaryData.push(file);\r\n        let url = window.URL.createObjectURL(new Blob(binaryData, {type: \"originalFile.type\"}));\r\n        image.src = url;\r\n        e.target.value = '';\r\n        let context = canvas!.getContext('2d');\r\n        image.onload = () => {\r\n            let imageWidth = image.width;\r\n            let imageHeight = image.height;\r\n            if (imageWidth > props.editor.canvas.width || imageHeight > props.editor.canvas.height) {\r\n                let shouldEnlarge = window.confirm(\"импортируемая фотография больше по размеру холста. Увеличить полотно до размера фотографии?\");\r\n                if (shouldEnlarge) {\r\n                    canvas!.width = imageWidth;\r\n                    canvas!.height = imageHeight;\r\n                    context!.drawImage(image, 0, 0);\r\n                } \r\n            } else\r\n                context!.drawImage(image, 0, 0);\r\n            let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n            console.log('openButton addImage dispatch');\r\n            addToHistory(props.editor);\r\n            props.onAddImage({newImage: newImgData});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"openBtn\">\r\n            <label htmlFor=\"myImage\" className=\"openBtn__label\" title=\"Открыть\">\r\n                </label>\r\n            <input type=\"file\" id=\"myImage\" name=\"myImage\" onChange={onImageChange} className=\"openBtn__input\"/>\r\n        </div>\r\n    );\r\n}    \r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenButton);","import React, { useContext, useState, useEffect }  from 'react';\r\n//import {Editor} from '../../model';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport { setTextColor } from '../../actions';\r\n//import { connect } from 'react-redux';\r\n\r\ninterface SaveButtonProps {\r\n    //editor: Editor,\r\n}\r\n\r\nfunction SaveButton(saveButtonProps: SaveButtonProps) {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);      \r\n    const [ext, setExt] = useState('jpeg')\r\n\r\n    function onChangeExt(event: any) {\r\n        setExt(event.target.value);\r\n    }\r\n        \r\n    function handleSubmit(event: React.FormEvent) {\r\n        event.preventDefault();\r\n          let dataURL = canvas!.toDataURL(`image/${ext}`);\r\n            let link = document.createElement(\"a\");\r\n            link.href = dataURL;\r\n            link.download = `my-image.${ext}`;\r\n            link.click();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"saveBtn__form\">\r\n          <div className=\"saveBtn__wrapper\">\r\n            <div >\r\n              <label className=\"saveBtn__label\">\r\n                <select className=\"saveBtn__select\" onChange={onChangeExt}>\r\n                  <option value=\"jpeg\">jpeg</option>\r\n                  <option value=\"png\">png</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" value=\"Сохранить\" className=\"saveBtn\" title=\"Сохранить\"/>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n}\r\n\r\n// function mapStateToProps(state: any) {\r\n//   return {\r\n//       editor: state.editorReducer.editor\r\n//   }\r\n// }\r\n\r\n//export default connect(mapStateToProps)(SaveButton);\r\nexport default SaveButton;","import React from 'react';\r\nimport { Editor } from '../../model';\r\nimport './buttons.css';\r\nimport { undo, undoStack } from '../../history';\r\nimport { rollEditor } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface UndoButtonProps {\r\n   onRollBack: (payload: {newEditor: Editor}) => void,\r\n}\r\n\r\nfunction UndoButton(props: UndoButtonProps) {\r\n    \r\n    function onUndo() {\r\n        if (undoStack.length) {\r\n            const editor: Editor = undo();\r\n            console.log('editor from undoStack', editor);\r\n            props.onRollBack({newEditor: editor});\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <button onClick={onUndo} className=\"undoBtn\" title=\"Отменить\"></button>\r\n    );\r\n}    \r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onRollBack: (payload: {newEditor: Editor}) => dispatch(rollEditor(payload)),\r\n    }\r\n  }\r\n  \r\nexport default connect(null, mapDispatchToProps)(UndoButton);","import React from 'react';\r\nimport { Editor } from '../../model'\r\nimport './buttons.css';\r\nimport { redo, redoStack } from '../../history';\r\nimport { rollEditor } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface RedoButtonProps {\r\n    onRollOn: (payload: {newEditor: Editor}) => void,\r\n}\r\n\r\nfunction RedoButton(props: RedoButtonProps) {\r\n    \r\n    function onRedo() {\r\n        if (redoStack.length) {\r\n            const editor: Editor = redo()!;\r\n            props.onRollOn({newEditor: editor});\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <button onClick={onRedo} className=\"redoBtn\" title=\"Повторить\"></button>\r\n    );\r\n}    \r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onRollOn: (payload: {newEditor: Editor}) => dispatch(rollEditor(payload)),\r\n    }\r\n  }\r\n  \r\nexport default connect(null, mapDispatchToProps)(RedoButton);","export enum Intention {\r\n    HandleSelectedObject, //0\r\n    SelectArea,\r\n    SelectTextObj,\r\n    BrowseRemoteGallery,\r\n    TakePhoto\r\n}","import {Figure, Point, EditorObject, SelectedArea, TextObject, ShapeObject, Editor} from './model';\r\nimport EditorComponent from './Components/EditorComponent/EditorComponent';\r\nconst defaultCanvasWidth = 800;\r\nconst defaultCanvasHeight = 600;\r\n//const defaultPxArrLength = 1920000;\r\n\r\nexport function cleanCanvas(width: number = defaultCanvasWidth, height: number = defaultCanvasHeight): ImageData {\r\n\tlet pixelArrayLength: number = width * height * 4;\r\n\tlet bufferArray = new Uint8Array(pixelArrayLength);\r\n\t//crypto.getRandomValues(buffer);\r\n\tfor (let i: number = 0; i < pixelArrayLength; i += 4) {\r\n\t\tbufferArray[i] = 255; \r\n\t\tbufferArray[i + 1] = 255;\r\n\t\tbufferArray[i + 2] = 255;\r\n\t\tbufferArray[i + 3] = 255;\r\n\t}\r\n\treturn new ImageData(new Uint8ClampedArray(bufferArray.buffer), width, height);\r\n}\r\n\r\nexport function createCanvas(editor: Editor, payload: {width: number, height: number}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: cleanCanvas(payload.width, payload.height),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\nexport function resizeCanvas(editor: Editor, payload: {newWidth: number, newHeight: number}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: {\r\n\t\t\t...editor.canvas,\r\n\t\t\twidth: payload.newWidth,\r\n\t\t\theight: payload.newHeight\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function resizeEditorObj(editor: Editor, payload: {newPoint: Point, newWidth: number, newHeight: number}): Editor {\r\n\tif(editor.selectedObject) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.newPoint,\t\r\n\t\t\t\tw: payload.newWidth,\r\n\t\t\t\th: payload.newHeight\r\n\t\t\t}\r\n\t\t} \r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nfunction putImgDataOnCanvas (editor: Editor): ImageData {\r\n\tlet arrayOfIndexesToChange = getIndexes(editor);\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tif (isSelectedArea(editor.selectedObject)) {\r\n\t\tfor (let i: number = 0; i < arrayOfIndexesToChange.length; i++) {\r\n\t\t\tnewPxArray[arrayOfIndexesToChange[i]] = editor.selectedObject.pixelArray.data[i]; \r\n\t\t}\r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\nexport function joinSelectionWithCanvas(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: putImgDataOnCanvas(editor),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\n\r\n// export function resizeCanvas(editor: Editor, newWidth: number, newHeight: number): Editor {\r\n// \treturn {\r\n// \t\t...editor,\r\n// \t\tcanvas: {\r\n// \t\t\t...editor.canvas,\r\n// \t\t\twidth: newWidth,\r\n// \t\t\theight: newHeight\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport function addImage(editor: Editor, payload: {newImage: ImageData}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: payload.newImage,\r\n\t\t//selectedObject: null,\r\n\t}\r\n}\r\n\r\n\r\n\r\n// проверка, картинка больше канваса или нет\r\n// export function isImageNotBiggerThenCanvas(editor: Editor, image: HTMLImageElement): boolean {\r\n// \treturn (image.width <= editor.canvas.width && image.height <= editor.canvas.height)\r\n// }\r\n\r\n// вставка картинки на канвас\r\n// export function pasteImage(editor: Editor, newImage: HTMLImageElement, ctx: CanvasRenderingContext2D): ImageData {\r\n// \tctx.drawImage(newImage, 0, 0);\r\n// \treturn ctx.getImageData(0, 0, editor.canvas.width, editor.canvas.height);\r\n// }\r\n\r\n// export function addImage(editor: Editor, newImage: HTMLImageElement, ctx: CanvasRenderingContext2D): Editor {\r\n// \treturn {\r\n// \t\t...editor,\r\n// \t\tcanvas: pasteImage(editor, newImage, ctx)\r\n// \t}\r\n// }\r\n\r\n//удалить холст\r\nexport function removeCanvas(editor: Editor): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: cleanCanvas(editor.canvas.width, editor.canvas.height),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\n//получить массив индексов элементов в массиве Unit8ClampedArray канваса для пикселей, попавших в выделенную область\r\nexport function getIndexes(editor: Editor): Array<number> {\r\n\tlet arr: Array<number> = [];\r\n\tif (editor.selectedObject !== null) {\r\n\t\tlet startX: number = editor.selectedObject!.position.x;\r\n\t\tlet startY: number = editor.selectedObject!.position.y;\r\n\t\tlet endY: number = startY + editor.selectedObject!.h;\r\n\t\tlet selectionWidth: number = editor.selectedObject!.w; \r\n\t\tlet k: number = 0;\r\n\t\tfor (let i: number = startY; i < endY; i++) {\r\n\t\t\tlet startRowIndex: number = getPxArrIndex(editor, {x: startX, y: i});\r\n\t\t\tfor (let j: number = startRowIndex; j < startRowIndex + selectionWidth * 4; j++) {\r\n\t\t\t\tarr[k] = j;\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\nexport function selectArea(editor: Editor, payload: {startPoint: Point, endPoint: Point}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: {\r\n\t\t\ttype: 'selectedArea',\r\n\t\t\tpixelArray: getImageDataByCoords(editor, payload.startPoint, payload.endPoint), \r\n\t\t\tposition: {\r\n\t\t\t\tx: Math.min(payload.startPoint.x, payload.endPoint.x),\r\n\t\t\t\ty: Math.min(payload.startPoint.y, payload.endPoint.y)\r\n\t\t\t},\r\n\t\t\tw: Math.abs(payload.startPoint.x - payload.endPoint.x), \r\n\t\t\th: Math.abs(payload.startPoint.y - payload.endPoint.y),\r\n\t\t\t\r\n\t\t},\r\n\t\t//canvas: makeSelectionBeTransparent(editor, getIndexes(editor))\r\n\t}\r\n}\r\n\r\nexport function rollEditor(editor: Editor, payload: {newEditor: Editor}): Editor { \r\n\treturn {...payload.newEditor};\r\n}\r\n\r\nexport function selectTextArea(editor: Editor, payload: {startPoint: Point, endPoint: Point}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: {\r\n\t\t\ttype: 'text',\r\n\t\t\tposition: {\r\n\t\t\t\tx: Math.min(payload.startPoint.x, payload.endPoint.x),\r\n\t\t\t\ty: Math.min(payload.startPoint.y, payload.endPoint.y)\r\n\t\t\t},\r\n\t\t\tw: Math.abs(payload.startPoint.x - payload.endPoint.x), \r\n\t\t\th: Math.abs(payload.startPoint.y - payload.endPoint.y),\r\n\t\t\ttext: '',\r\n\t\t\tfontFamily: 'Roboto',\r\n\t\t\tfontSize: 20,\r\n\t\t\tcolor: '#000000',\r\n\t\t\tfontWeight: 400,\r\n\t\t\tfontStyle: 'normal',\r\n\t\t\ttextDecoration: 'none',\r\n\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.8)'\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//снять выделение\r\nexport function deSelectArea(editor: Editor, payload: {}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: null\r\n\t}\r\n}\r\n\r\nexport function addText(editor: Editor, newText: TextObject): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: newText,\r\n\t}\r\n}\r\n\r\n/**User defined Type Guards */\r\nexport function isTextObject(editorObj: any): editorObj is TextObject {\r\n\treturn (editorObj.type == 'text')\r\n}\r\n\r\nexport function isShapeObject(editorObj: any): editorObj is ShapeObject {\r\n\treturn (editorObj.type == Figure.triangle || editorObj.type == Figure.rectangle || editorObj.type == Figure.circle)\r\n} \r\n\r\nexport function isSelectedArea(editorObj: any): editorObj is SelectedArea {\r\n\treturn (editorObj.type == 'selectedArea')\r\n}\r\n\r\nexport function setTextColor(editor: Editor, newTextColor: string): Editor {\r\n\tif (isTextObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\t  color: newTextColor,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor\r\n\t}\r\n}\r\n\r\nexport function setTextSize(editor: Editor, newTextSize: number): Editor {\r\n\tif (isTextObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\t  fontSize: newTextSize,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\n//переместить выделенную область\r\nexport function dropSelection(editor: Editor, payload: {where: Point}): Editor {\r\n\tif (isSelectedArea(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.where,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\n//переместить выделенную область\r\nexport function dropTextObj(editor: Editor, payload: {where: Point}): Editor {\r\n\tif (isTextObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.where,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nexport function dropShapeObj(editor: Editor, payload: {where: Point}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.where,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\n//получить индекс элемента в массиве Unit8ClampedArray, зная его координаты на канвасе\r\nexport function getPxArrIndex(editor: Editor, p: Point): number {\r\n\tlet x: number = p.x;\r\n\tlet y: number = p.y;\r\n\tlet canvasWidth: number = editor.canvas.width;\r\n\tlet index: number = y * 4 * canvasWidth + x * 4; \r\n\treturn index;\r\n}\r\n\r\nexport function getImageDataByCoords(editor: Editor, startPoint: Point, endPoint: Point): ImageData  {\r\n\tlet selectionWidth: number = endPoint.x - startPoint.x;\r\n\tlet selectionHeight: number = endPoint.y - startPoint.y;\r\n\tlet pixelArrayLength: number = selectionWidth * selectionHeight * 4;\r\n\tlet bufferArray = new Uint8Array(pixelArrayLength);\r\n\tlet k: number = 0; \r\n\tfor (let y: number = startPoint.y; y < endPoint.y; y++) {\r\n\t\tfor (let x: number = startPoint.x; x < endPoint.x; x++) {\r\n\t\t\tlet index: number = getPxArrIndex(editor, {x, y})\r\n\t\t\tfor (let i = index; i < index + 4; i++) {\r\n\t\t\t\tbufferArray[k] = editor.canvas.data[i];\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(new Uint8ClampedArray(bufferArray.buffer), selectionWidth, selectionHeight);\r\n}\r\n\r\n\r\n//получить выделенную область канваса в виде ImageData\r\nexport function getImageDataOfSelectedArea(editor: Editor): ImageData  {\r\n\tlet selectedObj: EditorObject = editor.selectedObject!;\r\n\tlet startX: number = selectedObj.position.x - 1;\r\n\tlet startY: number = selectedObj.position.y - 1;\r\n\tlet endY: number = startY + selectedObj.h;\r\n\tlet endX: number = startX + selectedObj.w;\r\n\tlet selectionWidth: number = selectedObj.w;\r\n\tlet selectionHeight: number = selectedObj.h;\r\n\tlet pixelArrayLength: number = selectionWidth * selectionHeight * 4;\r\n\tlet bufferArray = new Uint8Array(pixelArrayLength);\r\n\t\r\n\tlet k: number = 0; \r\n\tfor (let y: number = startY; y < endY; y++) {\r\n\t\tfor (let x: number = startX; x < endX; x++) {\r\n\t\t\tlet index: number = getPxArrIndex(editor, {x, y})\r\n\t\t\tfor (let i = index; i < index + 4; i++) {\r\n\t\t\t\tbufferArray[k] = editor.canvas.data[i];\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(new Uint8ClampedArray(bufferArray.buffer), selectionWidth, selectionHeight);\r\n\t//} \r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//сделать прозрачной выделенную область канваса\r\nexport function makeSelectionBeTransparent(editor: Editor, arr: Array<number>): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tfor (let i: number = 0; i < arr.length; i += 4) {\r\n\t\tnewPxArray[arr[i] + 3] = 0; \r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\nexport function makeSelectionBeWhite(editor: Editor, arr: Array<number>): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tfor (let i: number = 0; i < arr.length; i ++) {\r\n\t\tnewPxArray[arr[i]] = 255; \r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\n//перекрасить в белый цвет все, кроме выделенной области\r\nexport function whitenAllExceptSelection(editor: Editor, arr: Array<number>): ImageData {\r\n\tlet blankImgDataPxArray: Uint8ClampedArray = cleanCanvas(editor.canvas.width, editor.canvas.height).data;\r\n\tif (isSelectedArea(editor.selectedObject)) {\r\n\t\tlet canvasPxArray = editor.selectedObject.pixelArray.data;\t\r\n\t\tfor (let i: number = 0; i < arr.length; i++) {\r\n\t\t\tblankImgDataPxArray[arr[i]] = canvasPxArray[i];\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(blankImgDataPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\n//вырезать выделенную область\r\nexport function cut(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: makeSelectionBeTransparent(editor, getIndexes(editor)),\r\n\t\tselectedObject: null\r\n\t}\r\n}\r\n\r\nexport function whitenArea(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: makeSelectionBeWhite(editor, getIndexes(editor)),\r\n\t}\r\n}\r\n\r\n//обрезать изображение по выделенной области\r\nexport function crop(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: whitenAllExceptSelection(editor, getIndexes(editor)),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\nexport function turnImgDataToGrey(editor: Editor): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tfor (let i = 0; i < newPxArray.length; i += 4) {\r\n\t\tconst average = (newPxArray[i] + newPxArray[i + 1] + newPxArray[i + 2]) / 3\r\n\t\tnewPxArray[i] = average\r\n\t\tnewPxArray[i + 1] = average\r\n\t\tnewPxArray[i + 2] = average\r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\nfunction filter(editor: Editor, filterColor: string): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tif (filterColor === \"grey\") {\r\n\t\tfor (let i = 0; i < newPxArray.length; i += 4) {\r\n\t\t\tconst average = (newPxArray[i] + newPxArray[i + 1] + newPxArray[i + 2]) / 3\r\n\t\t\tnewPxArray[i] = average\r\n\t\t\tnewPxArray[i + 1] = average\r\n\t\t\tnewPxArray[i + 2] = average\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = 0; i < newPxArray.length; i += 4) {\r\n\t\t\tnewPxArray[i] = filterColor === \"red\" ? newPxArray[i] : 0;\r\n\t\t\tnewPxArray[i + 1] = filterColor === \"green\" ? newPxArray[i + 1] : 0;\r\n\t\t\tnewPxArray[i + 2] = filterColor === \"blue\" ? newPxArray[i + 2] : 0;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// newPxArray[i + 1] = 0;\r\n\t\t\t// newPxArray[i + 2] = 0;\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\n//применить серый фильтр\r\nexport function applyGreyFilter(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: turnImgDataToGrey(editor),\r\n\t}\t\r\n}\t\r\n\r\nexport function applyFilter(editor: Editor, payload: {filterColor: string}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: filter(editor, payload.filterColor),\r\n\t}\t\r\n}\r\n\r\n\r\nexport function addFigure(editor: Editor, payload: {figureType: Figure}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: {\r\n\t\t\tposition: {x: editor.canvas.width / 2 - 50, y: editor.canvas.height / 2 - 50}, \r\n\t\t\tw: 100,\r\n\t\t\th: 100,\r\n\t\t\ttype: Figure.circle,\r\n\t\t\tbackgroundColor: '#ffffff00',\r\n\t\t\tborderColor: '#FF0000',\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport function setFigureBackgroundColor(editor: Editor, payload: {newColor: string}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tbackgroundColor: payload.newColor,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nexport function setFigureBorderColor(editor: Editor, payload: {newColor: string}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tborderColor: payload.newColor,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nexport function resizeFigure (editor: Editor, payload: {newPosition: Point, newWidth: number, newHeight: number}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.newPosition,\t\r\n\t\t\t\tw: payload.newWidth,\r\n\t\t\t\th: payload.newHeight,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor\r\n\t}\r\n}\r\n\r\n// export function saveImage(editor: Editor): void {\r\n\r\n// }","import React, { useState, useLayoutEffect, useRef } from 'react'\r\nimport { Editor, Figure } from '../../model'\r\nimport './Toolbar.css';\r\nimport SelectFilter from '../Select/SelectFilter';\r\nimport OpenButton from '../Buttons/OpenButton';\r\nimport SaveButton from '../Buttons/SaveButton';\r\nimport UndoButton from '../Buttons/UndoButton';\r\nimport RedoButton from '../Buttons/RedoButton';\r\nimport { isSelectedArea, isShapeObject } from '../../actions';\r\nimport { deselectArea, crop, cut, createCanvas, applyFilter, addFigure } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface ToolbarProps {\r\n    editor: Editor,\r\n    //onShowFigureClickHandler: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void,\r\n    //onShowNewFigure: (should: boolean) => void,\r\n    onDeselectArea: () => void,\r\n    onApplyFilter: (payload: {filterColor: string}) => void,\r\n    onCut: () => void,\r\n    onCrop: () => void,\r\n    onCreateCanvas: (payload: {width: number, height: number}) => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n    onSetFigure: (figure: Figure) => void,\r\n    onAddFigure: (payload: {figureType: Figure}) => void\r\n}\r\n\r\nfunction Toolbar(props: ToolbarProps) {\r\n    let toolbarRef = useRef(null);\r\n    let showTextBtnRef = useRef(null);\r\n    const [filter, setFilter] = useState(\"grey\");\r\n        \r\n    function selectFilterHandler(event: any): void {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    function filterButtonHandler(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        console.log('dispatch Toolbar onApplyFilter');\r\n        addToHistory(props.editor);\r\n        props.onApplyFilter({filterColor: filter});\r\n    }\r\n    \r\n    function onClearSelectionHandler() {\r\n        console.log('dispatch Toolbar cut');\r\n        addToHistory(props.editor);\r\n        props.onCut();\r\n    }\r\n\r\n    function onSelectionCropHandler() {\r\n        console.log('dispatch Toolbar crop');\r\n        addToHistory(props.editor);\r\n        props.onCrop();\r\n    }\r\n\r\n    function onClearAllHandler() {\r\n        let shouldremoveCanvas = window.confirm(\"Текущий холст будет удален. Вы подтверждаете удаление холста?\");\r\n        if (shouldremoveCanvas) {\r\n            console.log('dispatch Toolbar createCanvas');\r\n            addToHistory(props.editor);\r\n            props.onCreateCanvas({width: 800, height: 600});\r\n            props.onSetIntention(Intention.SelectArea);\r\n        } \r\n    }\r\n\r\n    const onFigureClicked = (event: any) => {\r\n        const newFigure: Figure = event.target.id;\r\n        props.onSetFigure(newFigure);\r\n        props.onSetIntention(Intention.HandleSelectedObject);\r\n        console.log('dispatch EditorComponent addFigure');\r\n        addToHistory(props.editor);\r\n        props.onAddFigure({figureType: newFigure});\r\n    }\r\n\r\n    const select = <SelectFilter\r\n        label=\"Выберите фильтр\"\r\n        value={filter}\r\n        onChange={selectFilterHandler}\r\n        options={[\r\n            {text: \"серый\", value: \"grey\"},\r\n            {text: \"красный\", value: \"red\"},\r\n            {text: \"зеленый\", value: \"green\"},\r\n            {text: \"синий\", value: \"blue\"},\r\n        ]}\r\n    />\r\n    //let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n\r\n    useLayoutEffect(() => {\r\n        const toolbar: HTMLCanvasElement = toolbarRef.current!;\r\n        toolbar.style.width = props.editor.canvas.width + 'px';\r\n    })\r\n\r\n    return (\r\n        <div className='toolbar' ref={toolbarRef}>\r\n            <OpenButton />\r\n            <button onClick={e => {props.onSetIntention(Intention.BrowseRemoteGallery); props.onDeselectArea();}} title=\"Поиск изображений\" className=\"remoteImgBtn\" />\r\n            <SaveButton />\r\n            <UndoButton />\r\n            <RedoButton />\r\n            <button onClick={onClearAllHandler} title=\"Новый холст\" className=\"newCanvas_btn\"/>\r\n            {select}\r\n            <button onClick={filterButtonHandler} title=\"Применить фильтр\" className=\"filterBtn\"/>\r\n            <button onClick={e => props.onSetIntention(Intention.TakePhoto)} className=\"webCamBtn\" title=\"Снимок с веб-камеры\"/>\r\n            <button \r\n                ref={showTextBtnRef}\r\n                title=\"Текст\"\r\n                onClick={e => props.onSetIntention(Intention.SelectTextObj)}\r\n                className=\"textBtn\"\r\n            />\r\n            {!(props.editor.selectedObject && isShapeObject(props.editor.selectedObject)) &&\r\n            <div className=\"ShapeBar\">\r\n                <button \r\n                    className=\"circleBtn\"\r\n                    title=\"Круг\"\r\n                    id=\"circle\"\r\n                    onClick={onFigureClicked}\r\n                ></button>\r\n                <button \r\n                    className=\"rectangleBtn\"\r\n                    title=\"Прямоугольник\"\r\n                    id=\"rectangle\"\r\n                    onClick={onFigureClicked}\r\n                ></button>\r\n                <button \r\n                    className=\"triangleBtn\"\r\n                    title=\"Треугольник\"\r\n                    id=\"triangle\"\r\n                    onClick={onFigureClicked}\r\n                ></button>\r\n            </div>  \r\n            }\r\n            {props.editor.selectedObject && isSelectedArea(props.editor.selectedObject) &&\r\n            <div>\r\n            <button onClick={onClearSelectionHandler} className=\"cutBtn\" />\r\n            <button onClick={onSelectionCropHandler} className=\"cropBtn\" />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onApplyFilter: (payload: {filterColor: string}) => dispatch(applyFilter(payload)),\r\n      onCut: () => dispatch(cut()),\r\n      onCrop: () => dispatch(crop()),\r\n      onCreateCanvas: (payload: {width: number, height: number}) => dispatch(createCanvas(payload)),\r\n      onAddFigure: (payload: {figureType: Figure}) => dispatch(addFigure(payload)),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","import React, {useEffect, useRef, useContext}  from 'react';\r\nimport {Editor} from '../../model';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport { addImage } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface VideoProps {\r\n    editor: Editor,\r\n    //onShowCamera: () => void,\r\n    onAddImage: (payload: {newImage: ImageData}) => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction Video (props: VideoProps) {\r\n    let video: any;\r\n    let cancelPhotoButtonRef = useRef(null);\r\n    let takePhotoButtonRef = useRef(null);\r\n\r\n    function startWebcam() {\r\n        if (navigator.mediaDevices.getUserMedia) {\r\n            //метод  MediaDevices.getUserMedia() запрашивая медиапоток\r\n            //Успешное выполнение промиса передает объект потока( stream ) в качестве параметра функции метода then()\r\n              navigator.mediaDevices.getUserMedia({audio: false, video: true }).then(function (stream) {\r\n              video = document.querySelector(\"#video\");\r\n              if (video) {\r\n                  //stream присваевается свойству srcObject элемента <video>, направляя поток в него\r\n                video.srcObject = stream;\r\n                video.onloadedmetadata = function() {\r\n                  video!.play();\r\n                };\r\n              }\r\n            }).catch(function (err0r) {\r\n                console.log(\"!!!!!\"+err0r);\r\n            });\r\n        }\r\n    }\r\n\r\n    function stopWebCam() {\r\n        video.srcObject.getVideoTracks()[0].stop();\r\n        props.onSetIntention(Intention.SelectArea);\r\n    } \r\n\r\n    function snapshot() {\r\n        if (!canvas) return;\r\n        let context = canvas!.getContext('2d');\r\n        context!.drawImage(video, 0, 0);\r\n        let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n        console.log('dispatch Video addImage');\r\n        addToHistory(props.editor);\r\n        props.onAddImage({newImage: newImgData});\r\n        stopWebCam();\r\n    }\r\n    \r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    \r\n    useEffect(() => {\r\n        startWebcam();\r\n        setTimeout(function() {\r\n            const cancelPhotoButton: HTMLCanvasElement = cancelPhotoButtonRef.current!;\r\n            const takePhotoButton: HTMLCanvasElement = takePhotoButtonRef.current!;\r\n            cancelPhotoButton.style.display = 'block';\r\n            takePhotoButton.style.display = 'block';\r\n        }, 2500);\r\n    })\r\n\r\n    return (\r\n        <div style={{position: 'absolute'}}>\r\n            <video id=\"video\" controls autoPlay></video>\r\n            <button onClick={stopWebCam} style={{display: 'none'}} ref={cancelPhotoButtonRef}>cancel</button>\r\n            <button onClick={snapshot} style={{display: 'none'}} ref={takePhotoButtonRef}>take photo</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);","import React from 'react';\r\nimport './SelectFontFamily.css';\r\n\r\ninterface SelectFontSizeProps {\r\n    label: string,\r\n    value: number,\r\n    onChange: (event: any) => void\r\n}\r\n\r\nconst sizes: Array<number> = [];\r\nfor (let i=6; i < 100; i++) {\r\n    sizes[i] = i;\r\n}\r\n\r\nconst SelectFontSize = (props: SelectFontSizeProps) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <label htmlFor={htmlFor} className=\"textbar__fontLabel\">{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                className=\"textbar__fontSelect\"\r\n            >\r\n                {sizes.map((option: any, index: any) => {\r\n                    return (\r\n                        <option\r\n                            value={option}\r\n                            key={index}\r\n                        >\r\n                            {option}\r\n                        </option>\r\n                    )\r\n                })}    \r\n            </select>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectFontSize;","import React, {useRef, useEffect, useState, useContext}  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport './SelectedObject.css';\r\nimport {dispatch} from '../../reducer';\r\nimport { isSelectedArea } from '../../actions';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\n//import { resolve, intention, Intent, setIntention } from '../../intentResolver';\r\nimport { joinSelectionWithCanvas, dropSelection } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\n//import { Intention } from '../../Intentions';\r\n\r\ninterface SelectedAreaProps {\r\n  editor: Editor,\r\n  //onShowSelArea: (should: boolean) => void,\r\n  onDropSelection: (payload: {where: Point}) => void,\r\n  onJoinSelectionWithCanvas: () => void,\r\n  //onSetIntention: (intent: Intention) => void\r\n}\r\n\r\nfunction calculateInitPos (props: SelectedAreaProps, canvasCoords: DOMRect) {\r\n    return {\r\n        x: props.editor.selectedObject!.position.x,\r\n        y: canvasCoords.top + props.editor.selectedObject!.position.y\r\n    }\r\n}\r\n\r\nconst SelectedArea = (props: SelectedAreaProps) => {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    const canvasCoords = canvas!.getBoundingClientRect();\r\n\r\n    const [isMousePressed, setIsMousePressed] = useState(false);\r\n    const [offset, setOffset] = useState({x: 0, y: 0});\r\n    const [position, setPosition] = useState(() => {return calculateInitPos(props, canvasCoords)});\r\n    let selCanvasRef = useRef(null);\r\n    \r\n    // function onMouseDownHandler(event: any) {\r\n    //     if (event.clientY < canvasCoords.top) return;\r\n    //     if (event.defaultPrevented) return;\r\n    //     console.log('SA in onMouseDownHandler function');\r\n    //     if (isSelectedArea(props.editor.selectedObject)) {\r\n    //         console.log('dispatch SelectedArea joinSelectionWithCanvas');\r\n    //         addToHistory(props.editor);\r\n    //         props.onJoinSelectionWithCanvas();\r\n    //     }\r\n    //     props.onSetIntention(Intention.SelectArea);\r\n    // }\r\n    \r\n    function onMouseDownSAHandler(event: any) {\r\n        console.log('SA in onMouseDownSAHandler function');\r\n        setOffset({x: event.clientX - position.x!, y: event.clientY - position.y!});\r\n        setIsMousePressed(true);\r\n        event.preventDefault();\r\n        \r\n    }\r\n    \r\n    const adjustCoords = function (left: number, top: number): {left: number, top: number} {\r\n        const selCanv: HTMLCanvasElement = selCanvasRef.current!;\r\n        \r\n        if (left < canvasCoords.left) {\r\n            left = canvasCoords.left;\r\n        }\r\n        if (left + selCanv.width > canvasCoords.right) {\r\n            left = canvasCoords.right - selCanv.width;\r\n        }\r\n        if (top < canvasCoords.top) {\r\n            top = canvasCoords.top;\r\n        }\r\n        if (top + selCanv.height > canvasCoords.bottom) {\r\n            top = Math.max(canvasCoords.bottom - selCanv.height, canvasCoords.top);\r\n        }\r\n        return {left, top}\r\n    }\r\n    \r\n    const onMouseMoveSAHandler = function (event: any) {\r\n        if (isMousePressed) {\r\n            const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y)\r\n            setPosition({x: adjustedCoords.left, y: adjustedCoords.top});\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    const onMouseUpSAHandler = function (event: any) {\r\n        \r\n        if (!isMousePressed) return;\r\n        console.log('SA in onMouseUpSAHandler function');\r\n        const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y);\r\n        setPosition({x: adjustedCoords.left, y: adjustedCoords.top});\r\n        console.log('dispatch SelectedArea onDropSelection');\r\n        //addToHistory(props.editor);\r\n        props.onDropSelection({where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        setIsMousePressed(false);\r\n        \r\n    }\r\n\r\n    useEffect(() => { \r\n        const selCanvas: HTMLCanvasElement = selCanvasRef.current!;\r\n        selCanvas.addEventListener('mousedown', onMouseDownSAHandler);\r\n        //document.addEventListener('mousedown', onMouseDownHandler);\r\n        document.addEventListener('mousemove', onMouseMoveSAHandler);\r\n        document.addEventListener('mouseup', onMouseUpSAHandler);\r\n        return () => {\r\n            selCanvas.removeEventListener('mousedown', onMouseDownSAHandler);\r\n            //document.removeEventListener('mousedown', onMouseDownHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveSAHandler);\r\n            document.removeEventListener('mouseup', onMouseUpSAHandler);\r\n        };\r\n    });  \r\n    \r\n    useEffect(() => {\r\n        const selCanvas: HTMLCanvasElement = selCanvasRef.current!;\r\n        let selContext = selCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n        selCanvas.style.top = position.y! + 'px';\r\n        selCanvas.style.left = position.x! + 'px';\r\n        selCanvas.setAttribute('width', props.editor.selectedObject!.w.toString());\r\n        selCanvas.setAttribute('height', props.editor.selectedObject!.h.toString());\r\n        if (isSelectedArea(props.editor.selectedObject)) {\r\n            let selAreaImgData: ImageData = props.editor.selectedObject!.pixelArray;\r\n            selContext.putImageData(\r\n                selAreaImgData, \r\n                -1,\r\n                -1,\r\n                0,\r\n                0,\r\n                props.editor.selectedObject.w,\r\n                props.editor.selectedObject.h\r\n            );\r\n        }\r\n    }, []);\r\n \r\n    return (\r\n        <canvas \r\n            ref={selCanvasRef}    \r\n            className=\"selCanvas\"\r\n            style={{\r\n                top: `${position.y}px`,\r\n                left: `${position.x}px`,\r\n            }}\r\n        />\r\n    ) \r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDropSelection: (payload: {where: Point}) => dispatch(dropSelection(payload)),\r\n      onJoinSelectionWithCanvas: () => dispatch(joinSelectionWithCanvas())\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedArea);","import React from 'react';\r\nimport './SelectFontFamily.css';\r\n\r\ninterface SelectFontFamilyProps {\r\n    label: string,\r\n    value: string,\r\n    onChange: (event: any) => void,\r\n    options: Array<string>;\r\n}\r\n\r\nconst SelectFontFamily = (props: SelectFontFamilyProps) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <label htmlFor={htmlFor} className=\"textbar__fontLabel\">{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                className=\"textbar__fontSelect\"\r\n            >\r\n                {props.options.map((option: any, index: any) => {\r\n                    return (\r\n                        <option\r\n                            value={option}\r\n                            key={index}\r\n                            style={{\r\n                                fontFamily: `${option}`\r\n                            }}\r\n                        >\r\n                            {option}\r\n                        </option>\r\n                    )\r\n                })}    \r\n            </select>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectFontFamily;","enum SliderType {\r\n    LeftTop,\r\n    RightTop,\r\n    LeftBottom,\r\n    RightBottom\r\n}\r\n\r\nexport default SliderType; ","import React, { useContext, useEffect, useRef } from 'react'\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport SliderType from './slyderType';\r\nimport './SelectedObject.css';\r\n\r\nconst halfSizeOfSlider: number = 3;\r\nconst borderWidth: number = 2;\r\n\r\ninterface SliderProps {\r\n    pos: {x: number, y: number, width: number, height: number},\r\n    changeSize: (x: number, y: number, width: number, height: number) => void,\r\n    type: SliderType,\r\n    showNewFigure: Boolean,\r\n    // onResetSlidersHandler: () => void,\r\n    // resetSliders: Boolean,\r\n}\r\n\r\nconst adjustCoords = function (x: number, y: number, canvasCoords: DOMRect): {x: number, y: number} {\r\n\r\n    if (x < canvasCoords.left) {\r\n        x = canvasCoords.left;\r\n    }\r\n    if (x > canvasCoords.right - halfSizeOfSlider - borderWidth) {\r\n        x = canvasCoords.right - halfSizeOfSlider - borderWidth;\r\n    }\r\n    if (y < canvasCoords.top) {\r\n        y = canvasCoords.top;\r\n    }\r\n    if (y > canvasCoords.bottom - halfSizeOfSlider - borderWidth) {\r\n        y = canvasCoords.bottom - halfSizeOfSlider - borderWidth;\r\n    }\r\n    return {x, y}\r\n}\r\n\r\nconst getNewTextAreaParams = function(clientX: number, clientY: number, initPoints: any, canvasCoords: DOMRect, sliderType: SliderType) :\r\n{x: number, y: number, width: number, height: number}\r\n{\r\n    let x: number = 0;\r\n    let y: number = 0;\r\n    let width: number = 0;\r\n    let height: number = 0;\r\n    let adjastedCoords;\r\n    switch (sliderType) {\r\n    case SliderType.LeftTop:\r\n        if (clientX > initPoints.rightTop.x)\r\n            clientX = initPoints.rightTop.x;\r\n        if (clientY > initPoints.leftBottom.y)\r\n            clientY = initPoints.rightTop.y;      \r\n        adjastedCoords = adjustCoords(clientX, clientY, canvasCoords);\r\n        x = adjastedCoords.x;\r\n        y = adjastedCoords.y;\r\n        width = initPoints.rightTop.x - x;\r\n        height = initPoints.leftBottom.y - y;\r\n        break;\r\n    case SliderType.LeftBottom:\r\n        if (clientX > initPoints.rightBottom.x)\r\n            clientX = initPoints.rightBottom.x;\r\n        if (clientY < initPoints.leftTop.y)\r\n            clientY = initPoints.leftTop.y;      \r\n        adjastedCoords =  adjustCoords(clientX, clientY, canvasCoords);\r\n        x = adjastedCoords.x;\r\n        y = initPoints.leftTop.y;\r\n        width = initPoints.rightBottom.x - x;\r\n        height = adjastedCoords.y - y;\r\n        break;\r\n    case SliderType.RightTop:\r\n        if (clientX < initPoints.leftTop.x)\r\n            clientX = initPoints.leftTop.x;\r\n        if (clientY > initPoints.rightBottom.y)\r\n            clientY = initPoints.rightBottom.y;     \r\n        adjastedCoords =  adjustCoords(clientX, clientY, canvasCoords);\r\n        x = initPoints.leftTop.x;\r\n        y = adjastedCoords.y;\r\n        width = adjastedCoords.x - x;\r\n        height = initPoints.rightBottom.y - y;\r\n        break;   \r\n    case SliderType.RightBottom:\r\n        if (clientX < initPoints.leftTop.x)\r\n            clientX = initPoints.leftTop.x;\r\n        if (clientY < initPoints.leftTop.y)\r\n            clientY = initPoints.leftTop.y;  \r\n        adjastedCoords =  adjustCoords(clientX, clientY, canvasCoords);\r\n        x = initPoints.leftTop.x;\r\n        y = initPoints.leftTop.y;\r\n        width = adjastedCoords.x - x;\r\n        height = adjastedCoords.y - y;\r\n        break; \r\n    }\r\n    return {x, y, width, height};\r\n}\r\n\r\nfunction Slider(props: SliderProps) {\r\n    let sliderRef = useRef(null);\r\n    let offset = useRef({x: 0, y: 0});\r\n    let cursorStyle = useRef('');\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n\r\n    let isMousePressed = useRef(false);\r\n\r\n    function onMouseDownSliderHandler(event: any) {\r\n        isMousePressed.current = true;\r\n        event.preventDefault();\r\n    }\r\n        \r\n    const onMouseMoveSliderHandler = function (event: any) {\r\n        if (isMousePressed.current) {\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const initPoints = {\r\n                leftTop: {x: props.pos.x, y: props.pos.y},\r\n                leftBottom: {x: props.pos.x, y: props.pos.y + props.pos.height},\r\n                rightTop: {x: props.pos.x + props.pos.width, y: props.pos.y},\r\n                rightBottom: {x: props.pos.x + props.pos.width, y: props.pos.y + props.pos.height}\r\n            };\r\n            const {x, y, width, height} = getNewTextAreaParams(event.clientX, event.clientY, {...initPoints}, canvasCoords, props.type);\r\n            props.changeSize(x, y, width, height);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    const onMouseUpSliderHandler = function (event: any) {\r\n        if (!isMousePressed.current) return;\r\n        isMousePressed.current = false;\r\n        event.preventDefault();\r\n    }\r\n\r\n    useEffect(() => { \r\n        switch (props.type) {\r\n        case SliderType.LeftTop:\r\n            offset.current = {x: -halfSizeOfSlider, y: -halfSizeOfSlider};\r\n            cursorStyle.current = 'se-resize';\r\n            break;\r\n        case SliderType.LeftBottom:\r\n            offset.current = {x: -halfSizeOfSlider, y: props.pos.height};\r\n            cursorStyle.current = 'ne-resize';\r\n            break;\r\n        case SliderType.RightTop:\r\n            offset.current = {x: props.pos.width, y: -halfSizeOfSlider};\r\n            cursorStyle.current = 'sw-resize';\r\n            break;   \r\n        case SliderType.RightBottom:\r\n            offset.current = {x: props.pos.width, y: props.pos.height};\r\n            cursorStyle.current = 'nw-resize';\r\n            break;     \r\n        }\r\n        if (props.showNewFigure) {\r\n            switch (props.type) {\r\n                case SliderType.LeftTop:\r\n                    offset.current = {x: -halfSizeOfSlider, y: -halfSizeOfSlider};\r\n                    break;\r\n                case SliderType.LeftBottom:\r\n                    offset.current = {x: -halfSizeOfSlider, y: 100};\r\n                    break;\r\n                case SliderType.RightTop:\r\n                    offset.current = {x: 100, y: -halfSizeOfSlider};\r\n                    break;   \r\n                case SliderType.RightBottom:\r\n                    offset.current = {x: 100, y: 100};\r\n                    break;     \r\n            }\r\n            \r\n        }   \r\n        const sliderElem: HTMLCanvasElement = sliderRef.current!;\r\n        sliderElem.addEventListener('mousedown', onMouseDownSliderHandler);\r\n        document.addEventListener('mousemove', onMouseMoveSliderHandler);\r\n        document.addEventListener('mouseup', onMouseUpSliderHandler);\r\n        \r\n        return () => {\r\n            sliderElem.removeEventListener('mousedown', onMouseDownSliderHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveSliderHandler);\r\n            document.removeEventListener('mouseup', onMouseUpSliderHandler);\r\n        };\r\n    });  \r\n   \r\n    return (\r\n        <div \r\n            ref={sliderRef}\r\n            className='slider'\r\n            style={{\r\n                left: `${props.pos.x + offset.current.x}px`,\r\n                top: `${props.pos.y + offset.current.y}px`,\r\n                cursor: `${cursorStyle.current}`\r\n            }} \r\n        >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;","import React, { useRef, useEffect, useState, useContext, useLayoutEffect }  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport './SelectedObject.css';\r\nimport { isTextObject } from '../../actions';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\n//import { resolve, intention, Intent, setIntention } from '../../intentResolver';\r\nimport SelectFontFamily from '../Select/SelectFontFamily';\r\nimport SelectFontSize from '../Select/SelectFontSize';\r\nimport Slider from './Slider';\r\nimport SliderType from './slyderType';\r\nimport { connect } from 'react-redux';\r\nimport { deselectArea, addImage, resizeEditorObj, dropTextObj } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\nconst fonts = ['Roboto', 'Open Sans', 'Montserrat', 'Roboto Condensed', 'Source Sans Pro',\r\n'Oswald', 'Merriweather', 'Noto Sans', 'Yanone Kaffeesatz', 'Caveat'];\r\n\r\ninterface TextObjProps {\r\n    editor: Editor,\r\n    //onShowTextArea: () => void,\r\n    onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => void,\r\n    onDropTextObj: (payload: {where: Point}) => void,\r\n    onAddImage: (payload: {newImage: ImageData}) => void,\r\n    onDeselectArea: () => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction getInitColor (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.color : '#000000';\r\n}\r\n\r\nfunction getInitFontWeight (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontWeight : 400;\r\n}\r\n\r\nfunction getInitFontStyle (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontStyle : 'normal';\r\n}\r\n\r\nfunction getInitFontFamily (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontFamily : 'Times New Roman';\r\n}\r\n\r\nfunction getInitFontSize (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontSize : 20;\r\n}\r\n\r\nfunction getInitbackgroundColor (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.backgroundColor : 'rgba(255, 255, 255, 0.8)';\r\n}\r\n\r\nfunction wrapText(context: CanvasRenderingContext2D, text: string, x: number, y: number, maxWidth: number, lineHeight: number) {\r\n    var words = text.split(' ');\r\n    var line = '';\r\n    for(var n = 0; n < words.length; n++) {\r\n        let wordMetrics = context.measureText(words[n]);\r\n        let wordLength = wordMetrics.width;\r\n        if (wordLength > maxWidth) \r\n        {\r\n            if (line !== '')\r\n                words[n] = line + ' ' + words[n];\r\n            let symbols = words[n].split(\"\");  \r\n            let symbolsLine = '';\r\n            for(let i = 0; i < symbols.length; i++) {\r\n                let testSymbolsLine = symbolsLine + symbols[i];\r\n                let symblosMetrics = context.measureText(testSymbolsLine);\r\n                let testSymbolsWidth = symblosMetrics.width; \r\n                if (testSymbolsWidth > maxWidth && i > 0) {\r\n                    context.fillText(symbolsLine, x, y);\r\n                    symbolsLine = symbols[i];\r\n                    y += lineHeight;\r\n                }\r\n                else {\r\n                    symbolsLine = testSymbolsLine;\r\n                }\r\n            }\r\n            line = symbolsLine + ' ';    \r\n        }\r\n        else {\r\n            let testLine = line + words[n] + ' ';\r\n            let metrics = context.measureText(testLine);\r\n            let testWordWidth = metrics.width;\r\n            if (testWordWidth > maxWidth && n > 0) {\r\n                context.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n    context.fillText(line, x, y);\r\n    }\r\n}\r\n\r\nconst adjustCoords = function (left: number, top: number, textAreaCoords: DOMRect, canvasCoords: DOMRect): {left: number, top: number} {\r\n\r\n    if (left < canvasCoords.left) {\r\n        left = canvasCoords.left;\r\n    }\r\n    if (left + textAreaCoords.width > canvasCoords.right) {\r\n        left = canvasCoords.right - textAreaCoords.width;\r\n    }\r\n    if (top < canvasCoords.top) {\r\n        top = canvasCoords.top;\r\n    }\r\n    if (top + textAreaCoords.height > canvasCoords.bottom) {\r\n        top = Math.max(canvasCoords.bottom - textAreaCoords.height, canvasCoords.top);\r\n    }\r\n    return {left, top}\r\n}\r\n\r\nconst TextObject = (props: TextObjProps) => {\r\n    let textbarRef = useRef(null);   \r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    const [isMousePressed, setIsMousePressed] = useState(false);\r\n    const [offset, setOffset] = useState({x: 0, y: 0});\r\n    const [position, setPosition] = useState(() => calculateInitPos(props.editor));\r\n    const [text, setText] = useState('');\r\n    const [textColor, setTextColor] = useState(() => getInitColor(props.editor));\r\n    const [fontWeight, setFontWeight] = useState(() => getInitFontWeight(props.editor));\r\n    const [fontStyle, setFontStyle] = useState(() => getInitFontStyle(props.editor));\r\n    const [fontFamily, setFontFamily] = useState(() => getInitFontFamily(props.editor));\r\n    const [fontSize, setFontSize] = useState(() => getInitFontSize(props.editor));\r\n    const [backgroundColor, setBackgroundColor] = useState(() => getInitbackgroundColor(props.editor));\r\n    const [resetFigure, setResetFigure] = useState(false);\r\n      \r\n    let textAreaRef = useRef(null);\r\n    \r\n    function calculateInitPos (editor: Editor) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        return {\r\n            x: editor.selectedObject!.position.x,\r\n            y: canvasCoords.top + editor.selectedObject!.position.y,\r\n            width: editor.selectedObject!.w,\r\n            height: editor.selectedObject!.h,\r\n        }\r\n    }\r\n\r\n    const selectFontFamily = <SelectFontFamily\r\n        label=\"Шрифт\"\r\n        value={fontFamily}\r\n        onChange={onFontFamilyChangeHandler}\r\n        options={fonts}\r\n    />\r\n\r\n    const selectFontSize = <SelectFontSize\r\n        label=\"Размер шрифта\"\r\n        value={fontSize}\r\n        onChange={onFontSizeChangeHandler}\r\n    />\r\n\r\n    function onChangeSize(x: number, y: number, width: number, height: number) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({x, y, width, height});\r\n        console.log('dispatch TextObject resizeEditorObj');\r\n        addToHistory(props.editor);\r\n        props.onResizeEditorObj({newPoint: {x: x, y: y - canvasCoords.top}, newWidth: width, newHeight: height});\r\n    }\r\n\r\n    function onFontFamilyChangeHandler(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setFontFamily(event.target.value);\r\n    }\r\n\r\n    function onFontSizeChangeHandler(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setFontSize(Number(event.target.value));\r\n    }\r\n \r\n    function onTextAreaChangeHandler(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    function onChangeTextColorHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setTextColor(event.target.value);\r\n    }\r\n\r\n    function onBoldFontButttonHandler(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        fontWeight == 400 ? setFontWeight(700) : setFontWeight(400);\r\n    }\r\n\r\n    function onItalicsFontButttonHandler(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        fontStyle == 'normal' ? setFontStyle('italic') : setFontStyle('normal');\r\n    }\r\n\r\n    function onApplyTextSelectionClicked(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        var lineHeight = 1.2 * fontSize;\r\n        var ctx = canvas!.getContext(\"2d\");\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        ctx!.fillStyle = textColor;\r\n        ctx!.font = fontWeight + \" \" + fontStyle + \" \" + fontSize + \"px \" + fontFamily;\r\n        wrapText(ctx!, text, position.x, position.y - canvasCoords.top + fontSize, props.editor.selectedObject!.w, lineHeight);\r\n        let newImgData = ctx!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n        console.log('dispatch TextObject addImage');\r\n        addToHistory(props.editor);\r\n        props.onAddImage({newImage: newImgData});\r\n        props.onSetIntention(Intention.SelectArea);\r\n        props.onDeselectArea();\r\n    }\r\n    \r\n    function onCancelTextSelectionClicked(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        props.onDeselectArea();\r\n        props.onSetIntention(Intention.SelectArea);\r\n    }\r\n\r\n    function onMouseDownTextObjHandler(event: any) {\r\n        //const canvasCoords = canvas!.getBoundingClientRect();\r\n        // resolve(props.editor, {x: event.clientX, y: event.clientY}, canvasCoords);\r\n        // if (intention !== Intent.DraggingTextObj) return;\r\n        if (event.defaultPrevented) return;\r\n        console.log('TEXT in onMouseDownTextObjHandler function');\r\n        setOffset({x: event.clientX - position.x!, y: event.clientY - position.y!});\r\n        setIsMousePressed(true);\r\n    }\r\n        \r\n    const onMouseMoveTextObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (isMousePressed) {\r\n            const textAreaElem: HTMLTextAreaElement = textAreaRef.current!;\r\n            const textAreaCoords = textAreaElem.getBoundingClientRect();\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, textAreaCoords, canvasCoords);\r\n            setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        }\r\n    }\r\n\r\n    const onMouseUpTextObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (!isMousePressed) return;\r\n        //setIntention(Intent.WorkWithTextObj);\r\n        //console.log('TEXT in onMouseUpTextObjHandler function');\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        const textAreaElem: HTMLTextAreaElement = textAreaRef.current!;\r\n        const textAreaCoords = textAreaElem.getBoundingClientRect();\r\n        const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, textAreaCoords, canvasCoords);\r\n        setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        console.log('dispatch TextObject dropTextObj');\r\n        addToHistory(props.editor);\r\n        props.onDropTextObj({where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        //dispatch(dropTextObj, {where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        setIsMousePressed(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        const textAreaElem: HTMLCanvasElement = textAreaRef.current!;\r\n        textAreaElem.addEventListener('mousedown', onMouseDownTextObjHandler);\r\n        document.addEventListener('mousemove', onMouseMoveTextObjHandler);\r\n        document.addEventListener('mouseup', onMouseUpTextObjHandler);\r\n        return () => {\r\n            textAreaElem.removeEventListener('mousedown', onMouseDownTextObjHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveTextObjHandler);\r\n            document.removeEventListener('mouseup', onMouseUpTextObjHandler);\r\n\r\n        };\r\n    });  \r\n\r\n    useEffect(() => { \r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({\r\n            x: props.editor.selectedObject!.position.x,\r\n            y: props.editor.selectedObject!.position.y + canvasCoords.top,\r\n            width: props.editor.selectedObject!.w,\r\n            height: props.editor.selectedObject!.h,\r\n        });\r\n    }, []);\r\n \r\n    useLayoutEffect(() => {\r\n        const canvasCoords: DOMRect = canvas!.getBoundingClientRect();\r\n        const textbar: HTMLCanvasElement = textbarRef.current!;\r\n        textbar.style.top = canvasCoords.top + 'px';\r\n        textbar.style.left = canvasCoords.width + 'px';\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"textbar\" ref={textbarRef}>\r\n                <div style={{margin: '5px'}}>\r\n                    <label className=\"textbar__colorLabel\">Цвет</label>\r\n                    <input\r\n                        type='color'\r\n                        onChange={onChangeTextColorHandler}\r\n                    ></input>\r\n                    <button\r\n                        className=\"boldFontButtton\"\r\n                        onClick={onBoldFontButttonHandler}\r\n                        title=\"Толщина текста\"\r\n                    >B</button>\r\n                    <button\r\n                        className=\"italicsFontButtton\"\r\n                        onClick={onItalicsFontButttonHandler}\r\n                        title=\"Стиль текста\"\r\n                    >I</button>\r\n                </div>\r\n                <div>\r\n                    {selectFontFamily}\r\n                </div>\r\n                <div>\r\n                    {selectFontSize}\r\n                </div>\r\n                <div className=\"textBar__buttons\">\r\n                    <button \r\n                        className=\"applyBtn\"\r\n                        onClick={onApplyTextSelectionClicked}\r\n                        title=\"Добавить текст\"\r\n                    >    \r\n                    </button>\r\n                    <button \r\n                        className=\"abolishBtn\"\r\n                        onClick={onCancelTextSelectionClicked}\r\n                        title=\"Отмена\"></button>\r\n                </div>\r\n            </div>\r\n            \r\n            <textarea\r\n                ref={textAreaRef}\r\n                onChange={onTextAreaChangeHandler}\r\n                value={text}\r\n                className=\"textField\"    \r\n                autoFocus\r\n                style={{\r\n                    top: `${position.y}px`,\r\n                    left: `${position.x}px`,\r\n                    height: `${position.height}px`,\r\n                    width: `${position.width}px`,\r\n                    color: `${textColor}`,\r\n                    fontStyle: `${fontStyle}`,\r\n                    fontWeight: fontWeight == 400 ? 400 : 700,\r\n                    fontFamily: `${fontFamily}, sans-serif`,\r\n                    fontSize: `${fontSize}`+'px',\r\n                    backgroundColor: `${backgroundColor}`\r\n                }}\r\n            />\r\n\r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftTop}\r\n                showNewFigure={resetFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightTop}\r\n                showNewFigure={resetFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftBottom}\r\n                showNewFigure={resetFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightBottom}\r\n                showNewFigure={resetFigure}\r\n            />       \r\n        </div>\r\n    ) \r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => dispatch(resizeEditorObj(payload)),\r\n      onDropTextObj: (payload: {where: Point}) => dispatch(dropTextObj(payload)),\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload)),\r\n      onDeselectArea: () => dispatch(deselectArea())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextObject);","import React, { useRef, useEffect, useState, useContext, useLayoutEffect }  from 'react';\r\nimport { Editor, Figure, Point } from '../../model';\r\nimport './SelectedObject.css';\r\nimport { isShapeObject } from '../../actions';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\nimport Slider from './Slider';\r\nimport SliderType from './slyderType';\r\nimport { connect } from 'react-redux';\r\nimport { addImage, resizeEditorObj, deselectArea, dropShapeObj, setFigureBackgroundColor, setFigureBorderColor } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\nconst borderWidth = 2;\r\nconst strokeWidth = 2;\r\n\r\ninterface ShapeObjProps {\r\n    editor: Editor,\r\n    figure: Figure,\r\n    //onShowFigureClickHandler: (event: any) => void,\r\n    showNewFigure: boolean,\r\n    onShowNewFigure: (should: boolean) => void,\r\n    onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => void,\r\n    onDropShapeObj: (payload: {where: Point}) => void,\r\n    onAddImage: (payload: {newImage: ImageData}) => void,\r\n    onDeselectArea: () => void,\r\n    onSetFigureBackgroundColor: (payload: {newColor: string}) => void,\r\n    onSetFigureBorderColor: (payload: {newColor: string}) => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\nconst adjustCoords = function (left: number, top: number, textAreaCoords: DOMRect, canvasCoords: DOMRect): {left: number, top: number} {\r\n    if (left < canvasCoords.left) {\r\n        left = canvasCoords.left;\r\n    }\r\n    if (left + textAreaCoords.width > canvasCoords.right + borderWidth * 2 - strokeWidth) { \r\n        left = canvasCoords.right - textAreaCoords.width + borderWidth * 2 - strokeWidth;\r\n    }\r\n    if (top < canvasCoords.top) {\r\n        top = canvasCoords.top;\r\n    }\r\n    if (top + textAreaCoords.height > canvasCoords.bottom + borderWidth * 2 - strokeWidth * 2) {\r\n        top = Math.max(canvasCoords.bottom - textAreaCoords.height + borderWidth * 2 - strokeWidth * 2, canvasCoords.top);\r\n    }\r\n    return {left, top}\r\n}\r\n\r\nfunction calculateInitPos(editor: Editor, canvasCoords: DOMRect) {\r\n    return {\r\n        x: editor.selectedObject!.position.x,\r\n        y: editor.selectedObject!.position.y + canvasCoords.top,\r\n        width: editor.selectedObject!.w,\r\n        height: editor.selectedObject!.h\r\n    }\r\n}\r\n\r\nfunction drawFigure(figure: Figure,\r\n                    context: CanvasRenderingContext2D,\r\n                    position: any,\r\n                    borderColor: string,\r\n                    backgroundColor: string,\r\n                    start: Point\r\n                ){\r\n    context.beginPath();\r\n    context.lineWidth = strokeWidth;\r\n    context.fillStyle = backgroundColor;\r\n    context.strokeStyle = borderColor;\r\n    switch (figure.toString()) {\r\n    case 'circle':\r\n        context.ellipse(position.width / 2 + start.x, position.height / 2 + start.y, position.width / 2, position.height / 2 , 0, 0, Math.PI*2);\r\n        break;\r\n    case 'triangle':\r\n\r\n        context.moveTo(start.x, start.y + position.height);\r\n        context.lineTo(start.x + position.width, start.y + position.height);\r\n        context.lineTo(start.x + position.width / 2, start.y);\r\n        break;  \r\n    case 'rectangle':\r\n        context.moveTo(start.x, start.y + position.height);\r\n        context.lineTo(start.x + position.width, start.y + position.height);\r\n        context.lineTo(start.x + position.width, start.y);\r\n        context.lineTo(start.x, start.y);\r\n        break;\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.fill();\r\n}\r\n\r\nconst ShapeObject = (props: ShapeObjProps) => {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    const canvasCoords = canvas!.getBoundingClientRect();\r\n    const [isMousePressed, setIsMousePressed] = useState(false);\r\n    const [offset, setOffset] = useState({x: 0, y: 0});\r\n    const [position, setPosition] = useState(() => calculateInitPos(props.editor, canvasCoords));\r\n    let shapebarRef = useRef(null);   \r\n    let canvasRef = useRef(null);\r\n  \r\n    function onChangeSize(x: number, y: number, width: number, height: number) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({x, y, width, height});\r\n        console.log('dispatch ShapeObject ResizeEditorObj');\r\n        addToHistory(props.editor);\r\n        props.onResizeEditorObj({newPoint: {x: x, y: y - canvasCoords.top}, newWidth: width, newHeight: height});\r\n    }\r\n\r\n    function resetFigureCoords() {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({\r\n            x: props.editor.canvas.width / 2 - 50,\r\n            y: props.editor.canvas.height / 2 - 50 + canvasCoords.top,\r\n            width: 100,\r\n            height: 100});\r\n    }\r\n\r\n    function onApplyShapeSelectionClicked(event: any) {\r\n        const context = canvas!.getContext(\"2d\")!;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n\r\n        if (isShapeObject(props.editor.selectedObject)) {\r\n            drawFigure(props.figure, context, position, props.editor.selectedObject.borderColor, props.editor.selectedObject.backgroundColor, {x: position.x + strokeWidth / 2, y: position.y - canvasCoords.top + strokeWidth});\r\n            let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n            console.log('dispatch ShapeObject addImage');\r\n            addToHistory(props.editor);\r\n            props.onAddImage({newImage: newImgData});\r\n            props.onDeselectArea();\r\n        }\r\n        props.onSetIntention(Intention.SelectArea);\r\n    }\r\n\r\n    const onCancelFigureClicked = () => {\r\n        addToHistory(props.editor);\r\n        props.onDeselectArea();\r\n        props.onSetIntention(Intention.SelectArea);\r\n    }\r\n\r\n    function onChangeBorderColorHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        console.log('dispatch ShapeObject setFigureBorderColor');\r\n        addToHistory(props.editor);\r\n        props.onSetFigureBorderColor({newColor: event.target.value});\r\n    }\r\n\r\n    function onChangeBackgroundColorHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        console.log('dispatch ShapeObject setFigureBackgroundColor');\r\n        addToHistory(props.editor);\r\n        props.onSetFigureBackgroundColor({newColor: event.target.value});\r\n    }\r\n \r\n    function onMouseDownShapeObjHandler(event: any) {\r\n        if (event.defaultPrevented) return;\r\n        setOffset({x: event.clientX - position.x!, y: event.clientY - position.y!});\r\n        setIsMousePressed(true);\r\n    }\r\n        \r\n    const onMouseMoveShapeObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (isMousePressed) {\r\n            const canvasElem: HTMLTextAreaElement = canvasRef.current!;\r\n            const selCanvasCoords = canvasElem.getBoundingClientRect();\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, selCanvasCoords, canvasCoords);\r\n            setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        }\r\n    }\r\n\r\n    const onMouseUpShapeObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (!isMousePressed) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        const selCanvasElem: HTMLCanvasElement = canvasRef.current!;\r\n        const selCanvasCoords = selCanvasElem.getBoundingClientRect();\r\n        const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, selCanvasCoords, canvasCoords);\r\n        setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        console.log('dispatch ShapeObject dropShapeObj');\r\n        addToHistory(props.editor);\r\n        props.onDropShapeObj({where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        setIsMousePressed(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        if (props.showNewFigure) {\r\n            resetFigureCoords();\r\n            props.onShowNewFigure(false);\r\n        }    \r\n        const canvasElem: HTMLCanvasElement = canvasRef.current!;\r\n        const context = canvasElem.getContext(\"2d\")!;\r\n        canvasElem.setAttribute('width', props.editor.selectedObject!.w.toString());\r\n        canvasElem.setAttribute('height', props.editor.selectedObject!.h.toString());\r\n        if (isShapeObject(props.editor.selectedObject)) {\r\n            drawFigure(props.figure, context, {...position}, props.editor.selectedObject.borderColor, props.editor.selectedObject.backgroundColor, {x: 0, y: 0});\r\n        }\r\n        canvasElem.addEventListener('mousedown', onMouseDownShapeObjHandler);\r\n        document.addEventListener('mousemove', onMouseMoveShapeObjHandler);\r\n        document.addEventListener('mouseup', onMouseUpShapeObjHandler);\r\n        return () => {\r\n            canvasElem.removeEventListener('mousedown', onMouseDownShapeObjHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveShapeObjHandler);\r\n            document.removeEventListener('mouseup', onMouseUpShapeObjHandler);\r\n        };\r\n    });  \r\n\r\n    useEffect(() => { \r\n        const canvasCoords: DOMRect = canvas!.getBoundingClientRect();\r\n        setPosition({\r\n            x: props.editor.selectedObject!.position.x,\r\n            y: props.editor.selectedObject!.position.y + canvasCoords.top,\r\n            width: props.editor.selectedObject!.w,\r\n            height: props.editor.selectedObject!.h,\r\n        });\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        const canvasCoords: DOMRect = canvas!.getBoundingClientRect();\r\n        const shapebar: HTMLCanvasElement = shapebarRef.current!;\r\n        shapebar.style.top = canvasCoords.top + 'px';\r\n        shapebar.style.left = canvasCoords.width + 'px';\r\n    })\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"shapeBar\" ref={shapebarRef}>\r\n                <div>\r\n                    <label className=\"shapebar__borderLabel\">Граница</label>\r\n                    <input className=\"shapebar__input\"\r\n                        type='color'\r\n                        onChange={onChangeBorderColorHandler}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label className=\"shapebar__fillLabel\">Фон</label>\r\n                    <input\r\n                        type='color'\r\n                        onChange={onChangeBackgroundColorHandler}\r\n                        className=\"shapebar__input\"\r\n                    ></input>\r\n                </div>\r\n                <div className=\"shapeBar__buttons\">\r\n                    <button \r\n                        className=\"applyBtn\"\r\n                        onClick={onApplyShapeSelectionClicked}\r\n                        title=\"Применить\"\r\n                    >    \r\n                    </button>\r\n                    <button \r\n                        className=\"abolishBtn\"\r\n                        onClick={onCancelFigureClicked}\r\n                        title=\"Отмена\"></button>\r\n                </div>\r\n            </div>    \r\n\r\n            <canvas \r\n                className=\"shapeObjcanvasSel\"\r\n                ref={canvasRef}\r\n                style={{\r\n                    top: `${position.y}px`,\r\n                    left: `${position.x}px`,\r\n                    width: `${position.width}px`,\r\n                    height: `${position.height}px`\r\n                }}\r\n\r\n            ></canvas>\r\n            \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftTop}\r\n                showNewFigure={props.showNewFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightTop}\r\n                showNewFigure={props.showNewFigure}\r\n            />\r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftBottom}\r\n                showNewFigure={props.showNewFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightBottom}\r\n                showNewFigure={props.showNewFigure}\r\n            /> \r\n        </div>\r\n    ) \r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => dispatch(resizeEditorObj(payload)),\r\n      onDropShapeObj: (payload: {where: Point}) => dispatch(dropShapeObj(payload)),\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload)),\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onSetFigureBackgroundColor: (payload: {newColor: string}) => dispatch(setFigureBackgroundColor(payload)),\r\n      onSetFigureBorderColor: (payload: {newColor: string}) => dispatch(setFigureBorderColor(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShapeObject);","import React, { useRef, useEffect}  from 'react';\r\nimport {Editor} from '../../model';\r\nimport './Canvas.css';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface CanvasProps {\r\n    editor: Editor,\r\n    setCanv: (ref: any) => void,\r\n}\r\n\r\nconst Canvas = (props: CanvasProps) => {\r\n    let canvasRef = useRef(null);\r\n    useEffect(() => {\r\n        const canvas: HTMLCanvasElement = canvasRef.current!;\r\n        let context = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        context.putImageData(props.editor.canvas, 0, 0, 0, 0, props.editor.canvas.width, props.editor.canvas.height);\r\n        props.setCanv(canvasRef);\r\n    }); \r\n\r\n    return (\r\n        <div>\r\n            <canvas \r\n                ref={canvasRef}    \r\n                width={props.editor.canvas.width}\r\n                height={props.editor.canvas.height}\r\n                className=\"canvas\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps)(Canvas);","export default function transform(start: {x: number, y: number}, end: {x: number, y: number}, bounds: DOMRect)\r\n{\r\n    let startX = Math.min(start.x, end.x, bounds.width);\r\n    let startY = Math.max(bounds.y, Math.min(bounds.y + bounds.height, end.y, start.y));\r\n    let endX = Math.min(Math.max(end.x, start.x), bounds.width);\r\n    let endY = Math.min(startY + Math.abs(end.y - start.y), bounds.y + bounds.height);\r\n\r\n    return ({\r\n        startX: startX,\r\n        startY: startY,\r\n        endX: endX,\r\n        endY: endY,\r\n        width: endX - startX,\r\n        height: endY - startY,\r\n    })\r\n}","import React, { useState, useRef, useEffect, useContext }  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport { isSelectedArea } from '../../actions';\r\nimport transform from './CoordinateTransformer';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\n//import { resolve, intention, Intent } from '../../intentResolver';\r\nimport { connect } from 'react-redux';\r\nimport { selectArea, whitenArea, joinSelectionWithCanvas } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\n//import { Intention } from '../../Intentions';\r\n\r\ninterface SelectingSAProps {\r\n    editor: Editor,\r\n    onSelectArea: (payload: {startPoint: Point, endPoint: Point}) => void,\r\n    onWhitenArea: () => void,\r\n    //onSetIntention: (intent: Intention) => void,\r\n    onJoinSelectionWithCanvas: () => void,\r\n}\r\n\r\n\r\nconst SelectingSelectedArea = (props: SelectingSAProps) => {\r\n       \r\n    let svgRef = useRef(null);\r\n    \r\n    const [mouseState, setMouseState] = useState({\r\n        down: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        isMousePressed: false,\r\n        current: {\r\n            x: 0,\r\n            y: 0,\r\n        }, \r\n    });\r\n        \r\n    function onMouseDownSVGHandler(event: any) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        if (event.clientY < canvasCoords.top) return;\r\n        if (event.defaultPrevented) return;\r\n        console.log('SA in onMouseDownHandler function');\r\n        if (props.editor.selectedObject && isSelectedArea(props.editor.selectedObject)) {\r\n            console.log('dispatch SelectedArea joinSelectionWithCanvas');\r\n            addToHistory(props.editor);\r\n            props.onJoinSelectionWithCanvas();\r\n        }\r\n        // const canvasCoords = canvas!.getBoundingClientRect();\r\n        // if (event.clientY < canvasCoords.top) return;\r\n        \r\n        //resolve(editor, {x: event.clientX, y: event.clientY}, canvasCoords);\r\n        //if (intention !== Intent.SelectingSA) return;\r\n        console.log('SA SELECTING onMouseDownSVGHandler');\r\n        setMouseState({\r\n            ...mouseState,\r\n            down: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n            isMousePressed: true,\r\n            current: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n        })\r\n    }\r\n    \r\n    const onMouseMoveSVGHandler = function (event: any) {\r\n        if (mouseState.isMousePressed) {\r\n            setMouseState({\r\n                ...mouseState,\r\n                current: {\r\n                    x: event.clientX,\r\n                    y: event.clientY,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    \r\n    const onMouseUpSVGHandler = function (event: any) {\r\n        if (!mouseState.isMousePressed) return;\r\n        console.log('SA SELECTING onMouseUpSVGHandler');\r\n        if ((event.clientX !== mouseState.down.x) && (event.clientY !== mouseState.down.y)) {\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const selectionCoords = transform(\r\n                { x: mouseState.down.x, y: mouseState.down.y },\r\n                { x: event.clientX, y: event.clientY },\r\n                canvasCoords\r\n            );\r\n            const startX = selectionCoords.startX as number;\r\n            const startY = selectionCoords.startY as number;\r\n            const endX = selectionCoords.endX as number;\r\n            const endY = selectionCoords.endY as number;\r\n            console.log('dispatch SelectingSA selectArea');\r\n            addToHistory(props.editor);\r\n            props.onSelectArea({startPoint: {x: startX, y: startY - canvasCoords.top}, endPoint: {x: endX, y: endY - canvasCoords.top}});\r\n            console.log('dispatch SelectingSA whitenArea');\r\n            //addToHistory(props.editor);\r\n            props.onWhitenArea();\r\n            // dispatch(selectArea, {startPoint: {x: startX, y: startY - canvasCoords.top}, endPoint: {x: endX, y: endY - canvasCoords.top}});\r\n            // dispatch(whitenArea, {});\r\n\r\n        }\r\n        setMouseState({\r\n            ...mouseState,\r\n            isMousePressed: false,\r\n        });\r\n        //props.onSetIntention(Intention.HandleSelectedObject);\r\n    }\r\n    \r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    \r\n    useEffect(() => {\r\n        if (!canvas) return;\r\n        \r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        document.addEventListener('mousedown', onMouseDownSVGHandler);\r\n        document.addEventListener('mousemove', onMouseMoveSVGHandler);\r\n        document.addEventListener('mouseup', onMouseUpSVGHandler);\r\n        const adjustedSVGcoords = transform(\r\n            { x: mouseState.down.x, y: mouseState.down.y},\r\n            { x: mouseState.current.x, y: mouseState.current.y},\r\n            canvasCoords\r\n        );\r\n    \r\n        const svg: HTMLElement = svgRef.current!;\r\n        svg.style.display = (mouseState.isMousePressed) ? 'block' : 'none';\r\n        svg.style.top = adjustedSVGcoords.startY.toString();\r\n        svg.style.left = adjustedSVGcoords.startX.toString();\r\n        svg.setAttribute('width', adjustedSVGcoords.width.toString());\r\n        svg.setAttribute('height', adjustedSVGcoords.height.toString());\r\n    \r\n        //функция сработает когда произойдет следующая перерисовка\r\n        return () => {\r\n            \r\n            document.removeEventListener('mousedown', onMouseDownSVGHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveSVGHandler);\r\n            document.removeEventListener('mouseup', onMouseUpSVGHandler);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <svg\r\n            ref={svgRef}\r\n            className=\"selection\"\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onSelectArea: (payload: {startPoint: Point, endPoint: Point}) => dispatch(selectArea(payload)),\r\n      onWhitenArea: () => dispatch(whitenArea()),\r\n      onJoinSelectionWithCanvas: () => dispatch(joinSelectionWithCanvas())\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectingSelectedArea);","import React, { useState, useRef, useEffect, useContext }  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport { isSelectedArea } from '../../actions';\r\nimport transform from './CoordinateTransformer';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\n//import { setIntention, intention, Intent } from '../../intentResolver';\r\nimport './SelectedObject.css';\r\nimport { connect } from 'react-redux';\r\nimport { deselectArea, joinSelectionWithCanvas, selectTextArea } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface TextAreaProps {\r\n    editor: Editor,\r\n    onDeselectArea: () => void,\r\n    onSelectTextArea: (payload: {startPoint: Point, endPoint: Point}) => void,\r\n    onJoinSelectionWithCanvas: () => void,\r\n    onSetIntention: (intent: Intention) => void\r\n}\r\n\r\nconst SelectingTextObject = (props: TextAreaProps) => {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);  \r\n    let svgRef = useRef(null);\r\n\r\n    const [mouseState, setMouseState] = useState({\r\n        down: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        isMousePressed: false,\r\n        current: {\r\n            x: 0,\r\n            y: 0,\r\n        }, \r\n    });\r\n        \r\n    function onMouseDownHandler(event: any) {\r\n        if (props.editor.selectedObject) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        if (event.clientY < canvasCoords.top) return;\r\n        // if (intention !== Intent.SelectingTextObj) return;\r\n        // console.log('TEXT SELECTING onMouseDownSVGHandler');\r\n        setMouseState({\r\n            ...mouseState,\r\n            down: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n            isMousePressed: true,\r\n            current: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n        })\r\n    }\r\n    \r\n    const onMouseMoveHandler = function (event: any) {\r\n        if (mouseState.isMousePressed) {\r\n            setMouseState({\r\n                ...mouseState,\r\n                current: {\r\n                    x: event.clientX,\r\n                    y: event.clientY,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    \r\n    const onMouseUpHandler = function (event: any) {\r\n        if (!mouseState.isMousePressed) return;\r\n        console.log('TEXT SELECTING onMouseUpSVGHandler');\r\n        if ((event.clientX !== mouseState.down.x) && (event.clientY !== mouseState.down.y)) {\r\n            //setIntention(Intent.WorkWithTextObj);\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const selectionCoords = transform(\r\n                { x: mouseState.down.x, y: mouseState.down.y },\r\n                { x: event.clientX, y: event.clientY },\r\n                canvasCoords\r\n            );\r\n            const startX = selectionCoords.startX + 2 as number;\r\n            const startY = selectionCoords.startY + 2 as number;\r\n            const endX = selectionCoords.endX + 2 as number;\r\n            const endY = selectionCoords.endY + 2 as number;\r\n            console.log('dispatch SelectingTextObject selectTextArea');\r\n            addToHistory(props.editor);\r\n            props.onSelectTextArea({startPoint: {x: startX, y: startY - canvasCoords.top}, endPoint: {x: endX, y: endY - canvasCoords.top}});\r\n        }\r\n        \r\n        setMouseState({\r\n            ...mouseState,\r\n            isMousePressed: false,\r\n        });\r\n        props.onSetIntention(Intention.HandleSelectedObject);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (props.editor.selectedObject && isSelectedArea(props.editor.selectedObject)) {\r\n            console.log('dispatch SelectingTextObject joinSelectionWithCanvas');\r\n            addToHistory(props.editor);\r\n            props.onJoinSelectionWithCanvas();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!canvas) return;\r\n        \r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        document.addEventListener('mousedown', onMouseDownHandler);\r\n        document.addEventListener('mousemove', onMouseMoveHandler);\r\n        document.addEventListener('mouseup', onMouseUpHandler);\r\n        const adjustedSVGcoords = transform(\r\n            { x: mouseState.down.x, y: mouseState.down.y},\r\n            { x: mouseState.current.x, y: mouseState.current.y},\r\n            canvasCoords\r\n        );\r\n    \r\n        const svg: HTMLElement = svgRef.current!;\r\n        svg.style.display = (mouseState.isMousePressed) ? 'block' : 'none';\r\n        svg.style.top = adjustedSVGcoords.startY.toString();\r\n        svg.style.left = adjustedSVGcoords.startX.toString();\r\n        svg.setAttribute('width', adjustedSVGcoords.width.toString());\r\n        svg.setAttribute('height', adjustedSVGcoords.height.toString());\r\n    \r\n        //функция сработает когда произойдет следующая перерисовка\r\n        return () => {\r\n            document.removeEventListener('mousedown', onMouseDownHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveHandler);\r\n            document.removeEventListener('mouseup', onMouseUpHandler);\r\n            \r\n        };\r\n    });\r\n\r\n    return (\r\n        <svg\r\n            ref={svgRef}\r\n            className=\"textSelection\"\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onSelectTextArea: (payload: {startPoint: Point, endPoint: Point}) => dispatch(selectTextArea(payload)),\r\n      onJoinSelectionWithCanvas: () => dispatch(joinSelectionWithCanvas())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectingTextObject);","import React, { useContext }  from 'react';\r\nimport {Editor} from '../../model';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\nimport { Photo } from 'pexels';\r\nimport './Gallery.css';\r\nimport { addImage } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\n\r\ninterface PreviewImgProps {\r\n    editor: Editor,\r\n    key: number,\r\n    photo: Photo,\r\n    mediumSrc: string,\r\n    onAddImage: (payload: {newImage: ImageData}) => void\r\n}\r\n\r\nfunction PreviewImg(props: PreviewImgProps) {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);      \r\n    const onPreviewImgClicked = () => {\r\n        console.log('props.mediumSrc', props.mediumSrc);\r\n        const image = new Image();\r\n        image.src = props.mediumSrc;\r\n        image.crossOrigin = \"Anonymous\";\r\n        let context = canvas!.getContext('2d');\r\n        image.onload = () => {\r\n            let imageWidth = image.width;\r\n            let imageHeight = image.height;\r\n            if (imageWidth > props.editor.canvas.width || imageHeight > props.editor.canvas.height) {\r\n                let shouldEnlarge = window.confirm(\"импортируемая фотография больше по размеру холста. Увеличить полотно до размера фотографии?\");\r\n                if (shouldEnlarge) {\r\n                    canvas!.width = imageWidth;\r\n                    canvas!.height = imageHeight;\r\n                    context!.drawImage(image, 0, 0);\r\n                } \r\n            } else\r\n                context!.drawImage(image, 0, 0);\r\n            let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n            console.log('dispatch PreviewImg addImage');\r\n            addToHistory(props.editor);\r\n            props.onAddImage({newImage: newImgData});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pickImgContainer__preview\" onClick={onPreviewImgClicked}>\r\n            <img src={props.photo.src.tiny} width=\"280\" height=\"200\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewImg);","import React, { useState, useEffect }  from 'react';\r\nimport { createClient, PhotosWithTotalResults, ErrorResponse } from 'pexels';\r\nimport './Gallery.css';\r\nimport PreviewImg from './PreviewImg';\r\nimport { Intention } from '../../Intentions';\r\n\r\nconst client = createClient('563492ad6f91700001000001f32c0c635f2c46e4badcbd278b68e104');\r\n\r\ninterface GalleryProps {\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction Gallery(props: GalleryProps) {\r\n\r\n\r\n    enum Format {jpeg, png};\r\n    let f = Format.jpeg;\r\n    const [query, setQuery] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [previewsArr, fillPreviewsArr] = useState([]);\r\n\r\n    let prewievsArray: any;\r\n    function getPhotos(photos: PhotosWithTotalResults | ErrorResponse) {\r\n        if(\"error\" in photos) {\r\n        } else {\r\n            prewievsArray = photos.photos.map((photo, index) => {\r\n                return (\r\n                    <PreviewImg\r\n                        key={index}\r\n                        photo={photo}\r\n                        mediumSrc={photo.src.medium}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        fillPreviewsArr(prewievsArray);\r\n    }\r\n    \r\n    const showMorePreiews = () => {\r\n        setPage(page + 1);\r\n    }\r\n\r\n    const showPreviews = () => {\r\n        if (query == '') return;\r\n        client.photos.search({ query, per_page: 4, page: page}).then(photos => {\r\n            getPhotos(photos);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        showPreviews();\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"pickImgContainer\">\r\n            <input\r\n                placeholder=\"Поиск\"\r\n                onChange={e => {setQuery(e.target.value); setPage(1);}}\r\n            ></input>\r\n            <button onClick={showPreviews} className=\"pickImgContainer__searchButton\">Найти</button>\r\n            <div onClick={e => props.onSetIntention(Intention.SelectArea)} className=\"pickImgContainer__closeButton\" />\r\n            <div className=\"pickImgContainer__previewsContainer\">\r\n                {previewsArr}\r\n            </div>\r\n            <button\r\n                onClick={showMorePreiews}\r\n                className=\"pickImgContainer__morePreviewsButton\"\r\n            >Еще</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { Figure, Editor } from '../../model';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport { isSelectedArea, isTextObject, isShapeObject } from '../../actions';\r\nimport Video from '../Video/Video';\r\nimport SelectedArea from '../SelectedObject/SelectedArea';\r\nimport TextObject from '../SelectedObject/TextObject';\r\nimport ShapeObject from '../SelectedObject/ShapeObject';\r\nimport Canvas from '../Canvas/Canvas';\r\nimport './EditorComponent.css';\r\nimport SelectingSelectedArea from '../SelectedObject/SelectingSA';\r\nimport SelectingTextObject from '../SelectedObject/SelectingTextObject';\r\nimport Gallery from '../Gallery/Gallery';\r\nimport { connect } from 'react-redux';\r\nimport { deselectArea, addFigure } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface EditorComponentProps {\r\n    editor: Editor,\r\n    onDeselectArea: () => void,\r\n    \r\n}\r\n\r\nexport const CanvasContext = React.createContext(null);\r\n\r\nfunction EditorComponent(props: EditorComponentProps) {\r\n    const [figure, setFigure] = useState(Figure.circle);\r\n    const [showNewFigure, setShowNewFigure] = useState(false);\r\n\r\n    const [intention, setIntention] = useState(Intention.SelectArea);\r\n    \r\n    const [canvas, setCanvas] = useState(null);\r\n    const getCanvas = (ref: any) => setCanvas(ref.current!);\r\n\r\n    const onSetIntention = (intent: Intention) => {\r\n        setIntention(intent);\r\n    }\r\n\r\n    function onShowNewFigure(should: boolean) {\r\n        setShowNewFigure(should);\r\n    }\r\n\r\n    function onSetFigure(newFigure: Figure) {\r\n        setFigure(newFigure);\r\n        //setShowNewFigure(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <CanvasContext.Provider value={canvas}>\r\n            <div>\r\n                {intention != Intention.TakePhoto &&\r\n                <Toolbar \r\n                    onSetFigure={onSetFigure}\r\n                    onSetIntention={onSetIntention}\r\n                />\r\n                }\r\n                \r\n                {(props.editor.selectedObject && isSelectedArea(props.editor.selectedObject)) && \r\n                 <SelectedArea />\r\n                }\r\n\r\n                {(props.editor.selectedObject && isTextObject(props.editor.selectedObject)) &&\r\n                <TextObject onSetIntention={onSetIntention} />\r\n                }\r\n\r\n                {(props.editor.selectedObject && isShapeObject(props.editor.selectedObject)) &&\r\n                <ShapeObject\r\n                    figure={figure}\r\n                    showNewFigure={showNewFigure}\r\n                    onShowNewFigure={onShowNewFigure}\r\n                    onSetIntention={onSetIntention}\r\n                />}\r\n\r\n                {intention == Intention.TakePhoto\r\n                ? <Video onSetIntention={onSetIntention} />\r\n                : <Canvas setCanv={getCanvas} />\r\n                }\r\n\r\n                {(intention == Intention.SelectArea) &&\r\n                <SelectingSelectedArea />\r\n                }       \r\n\r\n                {intention == Intention.SelectTextObj &&\r\n                <SelectingTextObject onSetIntention={onSetIntention}/>\r\n                }\r\n                \r\n                {intention == Intention.BrowseRemoteGallery &&\r\n                <Gallery onSetIntention={onSetIntention} />\r\n                }\r\n               \r\n            </div>\r\n        </CanvasContext.Provider>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onAddFigure: (payload: {figureType: Figure}) => dispatch(addFigure(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorComponent);","import React, { useEffect } from 'react';\r\nimport { Editor } from './model'\r\nimport './App.css';\r\nimport EditorComponent from './Components/EditorComponent/EditorComponent';\r\nimport { redo, undo, redoStack, undoStack } from './history';\r\nimport { rollEditor } from './store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface AppProps {\r\n  onRoll: (payload: {newEditor: Editor}) => void,\r\n}\r\n\r\nfunction App(props: AppProps) {\r\n  \r\n  const onKeyPressed = (event: any) => {\r\n    if (event.ctrlKey && (event.which == 90 || event.keyCode == 90)) {\r\n      if (undoStack.length) {\r\n        const editor: Editor = undo();\r\n        props.onRoll({newEditor: editor});\r\n      }\r\n    }\r\n    if (event.ctrlKey && (event.which == 89 || event.keyCode == 89)) {\r\n      if (redoStack.length) {\r\n        const editor: Editor = redo()!;\r\n        props.onRoll({newEditor: editor});\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.addEventListener('keydown', event => onKeyPressed(event));\r\n      return () => {\r\n          document.removeEventListener('keydown', onKeyPressed);\r\n      };\r\n  });\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <EditorComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return {\r\n    onRoll: (payload: {newEditor: Editor}) => dispatch(rollEditor(payload)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SELECT_AREA, WHITEN_AREA, JOIN_SA_WITH_CANVAS, DROP_SA, DESELECT_AREA, ADD_FIGURE, APPLY_FILTER, CUT,\r\nCROP, CREATE_CANVAS, ADD_IMAGE, RESIZE_EDITOR_OBJ, DROP_TEXT_OBJ, SELECT_TEXT_AREA, SET_FIGURE_BACKGROUND_COLOR,\r\nSET_FIGURE_BORDER_COLOR, ROLL } from '../actions/actionTypes';\r\nimport { Point, Editor } from '../../model';\r\nimport { selectArea, whitenArea, joinSelectionWithCanvas, dropSelection, cleanCanvas, deSelectArea, addFigure,\r\napplyFilter, cut, crop, createCanvas, addImage, resizeEditorObj, dropTextObj, selectTextArea, setFigureBackgroundColor,\r\nsetFigureBorderColor, rollEditor } from '../../actions';\r\n\r\nlet editor: Editor = {\r\n    //canvas: {} as ImageData,\r\n    canvas: cleanCanvas(800, 600),\r\n    selectedObject: null,\r\n}\r\n\r\nlet initialState = {\r\n    editor: {...editor}\r\n}\r\n\r\nexport default function editorReducer (state = initialState, action: any) {\r\n    switch(action.type) {\r\n        case SELECT_AREA:\r\n            return {\r\n                editor: selectArea(state.editor, action.payload)\r\n            }    \r\n        case WHITEN_AREA:\r\n            return {\r\n                editor: whitenArea(state.editor, action.payload)\r\n            }    \r\n        case JOIN_SA_WITH_CANVAS:\r\n            return {\r\n                editor: joinSelectionWithCanvas(state.editor, action.payload)   \r\n            }    \r\n        case DROP_SA:\r\n            return {\r\n                editor: dropSelection(state.editor, action.payload) \r\n            }\r\n        case DESELECT_AREA:\r\n            return {\r\n                editor: deSelectArea(state.editor, action.payload)\r\n            }  \r\n        case ADD_FIGURE:\r\n            return {\r\n                editor: addFigure(state.editor, action.payload)\r\n            }  \r\n        case APPLY_FILTER:\r\n            return {\r\n                editor: applyFilter(state.editor, action.payload)\r\n            } \r\n        case CUT:\r\n            return {\r\n                editor: cut(state.editor, action.payload)\r\n            } \r\n        case CROP:\r\n            return {\r\n                editor: crop(state.editor, action.payload)\r\n            } \r\n        case CREATE_CANVAS:\r\n            return {\r\n                editor: createCanvas(state.editor, action.payload)\r\n            }   \r\n        case ADD_IMAGE:\r\n            return {\r\n                editor: addImage(state.editor, action.payload)\r\n            }   \r\n        case RESIZE_EDITOR_OBJ:\r\n            return {\r\n                editor: resizeEditorObj(state.editor, action.payload)\r\n            }   \r\n        case DROP_TEXT_OBJ:\r\n            return {\r\n                editor: dropTextObj(state.editor, action.payload)\r\n            }   \r\n        case SELECT_TEXT_AREA:\r\n            return {\r\n                editor: selectTextArea(state.editor, action.payload)\r\n            }     \r\n        case SET_FIGURE_BACKGROUND_COLOR:\r\n            return {\r\n                editor: setFigureBackgroundColor(state.editor, action.payload)\r\n            }   \r\n        case SET_FIGURE_BORDER_COLOR:\r\n            return {\r\n                editor: setFigureBorderColor(state.editor, action.payload)\r\n            }   \r\n        case ROLL:\r\n            return {\r\n                editor: rollEditor(state.editor, action.payload)\r\n            }                                                                         \r\n        default:\r\n            return state  \r\n    }\r\n    return state;\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport editorReducer from './editorReducer';\r\n\r\nexport default combineReducers({\r\n    editorReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Editor} from './model';\r\nimport {createCanvas} from './actions';\r\nimport {editor} from './reducer';\r\nimport {dispatch} from './reducer';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { addToHistory, undoStack } from './history';\r\n\r\nimport editorReducer from './store/reducers/editorReducer';\r\n\r\nfunction loggerMiddleWare(store: any) {\r\n  return function(next: any) {\r\n    return function(action: any) {\r\n      const result = next(action);\r\n      // console.log('store.getState()', store.getState().editorReducer.editor);\r\n      //addToHistory(store.getState().editorReducer.editor);\r\n      // for (let i=0; i < undoStack.length; i++) {\r\n      //   console.log('элементы стека undo', undoStack[i]);\r\n      // }\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(loggerMiddleWare));\r\n// store.subscribe(() => {\r\n//   addToHistory(store.getState().editorReducer.editor);\r\n// })\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n     <App/>\r\n   </React.StrictMode>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}