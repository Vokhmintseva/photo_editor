{"version":3,"sources":["model.ts","Components/Select/SelectFilter.tsx","store/actions/Actions.tsx","store/actions/actionTypes.tsx","history.ts","Components/Buttons/OpenButton.tsx","Components/Buttons/SaveButton.tsx","Intentions.tsx","Components/Buttons/UndoButton.tsx","Components/Buttons/RedoButton.tsx","actions.ts","Components/Toolbar/Toolbar.tsx","Components/Video/Video.tsx","Components/Select/SelectFontSize.tsx","Components/SelectedObject/SelectedArea.tsx","Components/Select/SelectFontFamily.tsx","Components/SelectedObject/slyderType.tsx","Components/SelectedObject/Slider.tsx","Components/SelectedObject/TextObject.tsx","Components/SelectedObject/ShapeObject.tsx","Components/Canvas/Canvas.tsx","Components/SelectedObject/CoordinateTransformer.tsx","Components/SelectedObject/SelectingSA.tsx","Components/SelectedObject/SelectingTextObject.tsx","Components/Gallery/PreviewImg.tsx","Components/Gallery/Gallery.tsx","Components/EditorComponent/EditorComponent.tsx","App.tsx","serviceWorker.js","store/reducers/editorReducer.tsx","store/reducers/rootReducer.tsx","index.tsx"],"names":["Figure","SelectFilter","props","htmlFor","label","Math","random","className","id","value","onChange","options","map","option","index","key","text","addFigure","payload","type","addImage","resizeEditorObj","rollEditor","undoStack","redoStack","addToHistory","editor","push","connect","state","editorReducer","dispatch","onAddImage","canvas","useContext","CanvasContext","title","name","e","file","target","files","image","Image","binaryData","url","window","URL","createObjectURL","Blob","src","context","getContext","onload","imageWidth","width","imageHeight","height","confirm","drawImage","newImgData","getImageData","console","log","newImage","SaveButton","Intention","useState","ext","setExt","onSubmit","event","preventDefault","dataURL","toDataURL","link","document","createElement","href","download","click","onRollBack","onClick","onSetIntention","SelectArea","length","selectedObject","currEditor","prevEditor","pop","newEditor","onRollOn","nextEditor","cleanCanvas","pixelArrayLength","bufferArray","Uint8Array","i","ImageData","Uint8ClampedArray","buffer","createCanvas","position","newPoint","w","newWidth","h","newHeight","putImgDataOnCanvas","arrayOfIndexesToChange","getIndexes","newPxArray","data","slice","isSelectedArea","pixelArray","joinSelectionWithCanvas","arr","startX","x","startY","y","endY","selectionWidth","k","startRowIndex","getPxArrIndex","j","selectArea","getImageDataByCoords","startPoint","endPoint","min","abs","selectTextArea","fontFamily","fontSize","color","fontWeight","fontStyle","textDecoration","backgroundColor","deSelectArea","isTextObject","editorObj","isShapeObject","triangle","rectangle","circle","dropSelection","where","dropTextObj","p","selectionHeight","makeSelectionBeTransparent","makeSelectionBeWhite","whitenAllExceptSelection","blankImgDataPxArray","canvasPxArray","cut","whitenArea","crop","filter","filterColor","average","applyFilter","borderColor","setFigureBackgroundColor","newColor","setFigureBorderColor","onDeselectArea","onApplyFilter","onCut","onCrop","onCreateCanvas","onAddFigure","toolbarRef","useRef","showTextBtnRef","setFilter","onFigureClicked","newFigure","onSetFigure","HandleSelectedObject","figureType","select","useLayoutEffect","current","style","ref","BrowseRemoteGallery","TakePhoto","SelectTextObj","video","cancelPhotoButtonRef","takePhotoButtonRef","stopWebCam","srcObject","getVideoTracks","stop","useEffect","navigator","mediaDevices","getUserMedia","audio","then","stream","querySelector","onloadedmetadata","play","catch","err0r","setTimeout","cancelPhotoButton","takePhotoButton","display","controls","autoPlay","onDropSelection","onJoinSelectionWithCanvas","canvasCoords","getBoundingClientRect","isMousePressed","setIsMousePressed","offset","setOffset","top","calculateInitPos","setPosition","selCanvasRef","onMouseDownSAHandler","clientX","clientY","adjustCoords","left","selCanv","right","bottom","max","onMouseMoveSAHandler","adjustedCoords","onMouseUpSAHandler","selCanvas","addEventListener","removeEventListener","selContext","setAttribute","toString","selAreaImgData","putImageData","SelectFontFamily","sizes","SliderType","SelectFontSize","Slider","sliderRef","cursorStyle","onMouseDownSliderHandler","onMouseMoveSliderHandler","initPoints","leftTop","pos","leftBottom","rightTop","rightBottom","sliderType","adjastedCoords","LeftTop","LeftBottom","RightTop","RightBottom","getNewTextAreaParams","changeSize","onMouseUpSliderHandler","showNewFigure","sliderElem","cursor","fonts","textAreaCoords","onResizeEditorObj","onDropTextObj","textbarRef","setText","textColor","setTextColor","setFontWeight","setFontStyle","setFontFamily","setFontSize","resetFigure","textAreaRef","selectFontFamily","selectFontSize","Number","onChangeSize","onMouseDownTextObjHandler","defaultPrevented","onMouseMoveTextObjHandler","onMouseUpTextObjHandler","textAreaElem","textbar","margin","lineHeight","ctx","fillStyle","font","maxWidth","words","split","line","n","measureText","symbols","symbolsLine","testSymbolsLine","fillText","testLine","wrapText","autoFocus","borderWidth","strokeWidth","drawFigure","figure","start","beginPath","lineWidth","strokeStyle","ellipse","PI","moveTo","lineTo","closePath","stroke","fill","onDropShapeObj","dropShapeObj","onSetFigureBackgroundColor","onSetFigureBorderColor","shapebarRef","canvasRef","onMouseDownShapeObjHandler","onMouseMoveShapeObjHandler","selCanvasCoords","onMouseUpShapeObjHandler","resetFigureCoords","onShowNewFigure","canvasElem","shapebar","setCanv","transform","end","bounds","endX","onSelectArea","onWhitenArea","svgRef","down","mouseState","setMouseState","onMouseDownSVGHandler","onMouseMoveSVGHandler","onMouseUpSVGHandler","selectionCoords","adjustedSVGcoords","svg","onSelectTextArea","onMouseDownHandler","onMouseMoveHandler","onMouseUpHandler","mediumSrc","crossOrigin","photo","tiny","client","createClient","Gallery","Format","jpeg","prewievsArray","query","setQuery","page","setPage","previewsArr","fillPreviewsArr","showPreviews","photos","search","per_page","medium","getPhotos","placeholder","React","createContext","setFigure","setShowNewFigure","intention","setIntention","setCanvas","intent","Provider","should","onRoll","onKeyPressed","ctrlKey","which","keyCode","undo","Boolean","location","hostname","match","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","next","app","StrictMode","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mWAAYA,E,+DAAAA,O,uBAAAA,I,yBAAAA,I,oBAAAA,M,qBCoCGC,EA1BM,SAACC,GAClB,IAAMC,EAAO,UAAMD,EAAME,MAAZ,YAAqBC,KAAKC,UAEvC,OACI,yBAAKC,UAAU,4BACX,4BACIC,GAAIL,EACJM,MAAOP,EAAMO,MACbC,SAAUR,EAAMQ,SAChBH,UAAU,qBAETL,EAAMS,QAAQC,KAAI,SAACC,EAAaC,GAC7B,OACI,4BACIL,MAAOI,EAAOJ,MACdM,IAAKF,EAAOJ,MAAQK,GAEnBD,EAAOG,YCe7B,SAASC,EAAUC,GACtB,MAAO,CACHC,KCvCkB,aDwClBD,QAASA,GA+BV,SAASE,EAASF,GACrB,MAAO,CACHC,KCpEiB,YDqEjBD,QAASA,GAIV,SAASG,EAAgBH,GAC5B,MAAO,CACHC,KC1EyB,oBD2EzBD,QAASA,GAuCV,SAASI,EAAWJ,GACvB,MAAO,CACHC,KC9GY,OD+GZD,QAASA,G,WE9HJK,EAA2B,GAC3BC,EAA2B,GAcjC,SAASC,EAAaC,GAC5BH,EAAUI,KAAKD,G,KC+CDE,mBAZf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLC,WAAY,SAACd,GAAD,OAAoCa,EAASX,EAASF,QAIzDU,EApDf,SAAoB1B,GAChB,IAAI+B,EAAmCC,qBAAWC,IA8BlD,OACI,yBAAK5B,UAAU,WACX,2BAAOJ,QAAQ,UAAUI,UAAU,iBAAiB6B,MAAM,+CAE1D,2BAAOjB,KAAK,OAAOX,GAAG,UAAU6B,KAAK,UAAU3B,SAhCvD,SAAuB4B,GACnB,IAAIC,EAAYD,EAAGE,OAAQC,MAAO,GAC5BC,EAAQ,IAAIC,MACdC,EAAa,GACjBA,EAAWjB,KAAKY,GAChB,IAAIM,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAKL,EAAY,CAACzB,KAAM,uBACjEuB,EAAMQ,IAAML,EACZP,EAAEE,OAAO/B,MAAQ,GACjB,IAAI0C,EAAUlB,EAAQmB,WAAW,MACjCV,EAAMW,OAAS,WACX,IAAIC,EAAaZ,EAAMa,MACnBC,EAAcd,EAAMe,OACpBH,EAAapD,EAAMwB,OAAOO,OAAOsB,OAASC,EAActD,EAAMwB,OAAOO,OAAOwB,OACxDX,OAAOY,QAAQ,4eAE/BzB,EAAQsB,MAAQD,EAChBrB,EAAQwB,OAASD,EACjBL,EAASQ,UAAUjB,EAAO,EAAG,IAGjCS,EAASQ,UAAUjB,EAAO,EAAG,GACjC,IAAIkB,EAAaT,EAASU,aAAa,EAAG,EAAG5B,EAAQsB,MAAOtB,EAAQwB,QACpEK,QAAQC,IAAI,gCACZtC,EAAavB,EAAMwB,QACnBxB,EAAM8B,WAAW,CAACgC,SAAUJ,MAQ4CrD,UAAU,uBCT/E0D,ICvCHC,EDuCGD,EApCf,WACI,IAAIhC,EAAmCC,qBAAWC,IADhC,EAEIgC,mBAAS,QAFb,mBAEXC,EAFW,KAENC,EAFM,KAiBlB,OACI,0BAAMC,SAVV,SAAsBC,GAClBA,EAAMC,iBACJ,IAAIC,EAAUxC,EAAQyC,UAAR,gBAA2BN,IACnCO,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOL,EACZE,EAAKI,SAAL,mBAA4BX,GAC5BO,EAAKK,SAIqBzE,UAAU,iBACtC,yBAAKA,UAAU,oBACb,6BACE,2BAAOA,UAAU,kBACf,4BAAQA,UAAU,kBAAkBG,SAlBhD,SAAqB6D,GACjBF,EAAOE,EAAM/B,OAAO/B,SAkBV,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,UAIN,6BACE,4BAAQU,KAAK,SAASV,MAAM,yDAAYF,UAAU,UAAU6B,MAAM,+D,iBChCpE8B,O,+CAAAA,I,2BAAAA,I,iCAAAA,I,6CAAAA,I,0BAAAA,M,KC6CGtC,mBAZf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLkD,WAAY,SAAC/D,GAAD,OAAkCa,EAAST,EAAWJ,QAIzDU,EA/Bf,SAAoB1B,GAchB,OACI,4BAAQgF,QAbZ,WAEI,GADAhF,EAAMiF,eAAejB,EAAUkB,YAC3B7D,EAAU8D,OAAQ,CAClB,IAAKnF,EAAMwB,OAAO4D,eAAgB,CAC9B,IAAIC,EAAkB,eAAOrF,EAAMwB,QACnCF,EAAUG,KAAK4D,GAEnB,IAAMC,EAAqBjE,EAAUkE,MACrCvF,EAAM+E,WAAW,CAACS,UAAWF,MAKRjF,UAAU,UAAU6B,MAAM,wDCgB5CR,mBAZf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACL4D,SAAU,SAACzE,GAAD,OAAkCa,EAAST,EAAWJ,QAIvDU,EA/Bf,SAAoB1B,GAchB,OACI,4BAAQgF,QAbZ,WACI,GAAI1D,EAAU6D,OAAQ,CAElB,GADAnF,EAAMiF,eAAejB,EAAUkB,aAC1BlF,EAAMwB,OAAO4D,eAAgB,CAC9B,IAAIC,EAAkB,eAAOrF,EAAMwB,QACnCH,EAAUI,KAAK4D,GAEnB,IAAMK,EAAqBpE,EAAUiE,MACrCvF,EAAMyF,SAAS,CAACD,UAAWE,MAKNrF,UAAU,UAAU6B,MAAM,8DCvBpD,SAASyD,IAIf,IAJiH,IAAtFtC,EAAqF,uDAJtF,IAIqCE,EAAiD,uDAHrF,IAIvBqC,EAA2BvC,EAAQE,EAAS,EAC5CsC,EAAc,IAAIC,WAAWF,GAExBG,EAAY,EAAGA,EAAIH,EAAkBG,GAAK,EAClDF,EAAYE,GAAK,IACjBF,EAAYE,EAAI,GAAK,IACrBF,EAAYE,EAAI,GAAK,IACrBF,EAAYE,EAAI,GAAK,IAEtB,OAAO,IAAIC,UAAU,IAAIC,kBAAkBJ,EAAYK,QAAS7C,EAAOE,GAGjE,SAAS4C,EAAa3E,EAAgBR,GAC5C,OAAO,2BACHQ,GADJ,IAECO,OAAQ4D,EAAY3E,EAAQqC,MAAOrC,EAAQuC,QAC3C6B,eAAgB,OAeX,SAASjE,EAAgBK,EAAgBR,GAC/C,OAAGQ,EAAO4D,eACF,2BACH5D,GADJ,IAEC4D,eAAe,2BACX5D,EAAO4D,gBADG,IAEbgB,SAAUpF,EAAQqF,SAClBC,EAAGtF,EAAQuF,SACXC,EAAGxF,EAAQyF,cAINjF,EAIT,SAASkF,EAAoBlF,GAC5B,IAAImF,EAAyBC,EAAWpF,GACpCqF,EAAgCrF,EAAOO,OAAO+E,KAAKC,QACvD,GAAIC,EAAexF,EAAO4D,gBACzB,IAAK,IAAIW,EAAY,EAAGA,EAAIY,EAAuBxB,OAAQY,IAC1Dc,EAAWF,EAAuBZ,IAAMvE,EAAO4D,eAAe6B,WAAWH,KAAKf,GAGhF,OAAO,IAAIC,UAAUa,EAAYrF,EAAOO,OAAOsB,MAAO7B,EAAOO,OAAOwB,QAG9D,SAAS2D,EAAwB1F,EAAgBR,GACvD,OAAO,2BACHQ,GADJ,IAECO,OAAQ2E,EAAmBlF,GAC3B4D,eAAgB,OAgBX,SAASlE,EAASM,EAAgBR,GACxC,OAAO,2BACHQ,GADJ,IAECO,OAAQf,EAAQ8C,WAmCX,SAAS8C,EAAWpF,GAC1B,IAAI2F,EAAqB,GACzB,GAA8B,OAA1B3F,EAAO4D,eAMV,IALA,IAAIgC,EAAiB5F,EAAO4D,eAAgBgB,SAASiB,EACjDC,EAAiB9F,EAAO4D,eAAgBgB,SAASmB,EACjDC,EAAeF,EAAS9F,EAAO4D,eAAgBoB,EAC/CiB,EAAyBjG,EAAO4D,eAAgBkB,EAChDoB,EAAY,EACP3B,EAAYuB,EAAQvB,EAAIyB,EAAMzB,IAEtC,IADA,IAAI4B,EAAwBC,EAAcpG,EAAQ,CAAC6F,EAAGD,EAAQG,EAAGxB,IACxD8B,EAAYF,EAAeE,EAAIF,EAAiC,EAAjBF,EAAoBI,IAC3EV,EAAIO,GAAKG,EACTH,IAIH,OAAOP,EAGD,SAASW,EAAWtG,EAAgBR,GAC1C,OAAO,2BACHQ,GADJ,IAEC4D,eAAgB,CACfnE,KAAM,eACNgG,WAAYc,EAAqBvG,EAAQR,EAAQgH,WAAYhH,EAAQiH,UACrE7B,SAAU,CACTiB,EAAGlH,KAAK+H,IAAIlH,EAAQgH,WAAWX,EAAGrG,EAAQiH,SAASZ,GACnDE,EAAGpH,KAAK+H,IAAIlH,EAAQgH,WAAWT,EAAGvG,EAAQiH,SAASV,IAEpDjB,EAAGnG,KAAKgI,IAAInH,EAAQgH,WAAWX,EAAIrG,EAAQiH,SAASZ,GACpDb,EAAGrG,KAAKgI,IAAInH,EAAQgH,WAAWT,EAAIvG,EAAQiH,SAASV,MAOhD,SAASnG,EAAWI,EAAgBR,GAC1C,OAAO,eAAIA,EAAQwE,WAGb,SAAS4C,EAAe5G,EAAgBR,GAC9C,OAAO,2BACHQ,GADJ,IAEC4D,eAAgB,CACfnE,KAAM,OACNmF,SAAU,CACTiB,EAAGlH,KAAK+H,IAAIlH,EAAQgH,WAAWX,EAAGrG,EAAQiH,SAASZ,GACnDE,EAAGpH,KAAK+H,IAAIlH,EAAQgH,WAAWT,EAAGvG,EAAQiH,SAASV,IAEpDjB,EAAGnG,KAAKgI,IAAInH,EAAQgH,WAAWX,EAAIrG,EAAQiH,SAASZ,GACpDb,EAAGrG,KAAKgI,IAAInH,EAAQgH,WAAWT,EAAIvG,EAAQiH,SAASV,GACpDzG,KAAM,GACNuH,WAAY,SACZC,SAAU,GACVC,MAAO,UACPC,WAAY,IACZC,UAAW,SACXC,eAAgB,OAChBC,gBAAiB,8BAMb,SAASC,EAAapH,EAAgBR,GAC5C,OAAO,2BACHQ,GADJ,IAEC4D,eAAgB,OAYX,SAASyD,EAAaC,GAC5B,MAA0B,QAAlBA,EAAU7H,KAGZ,SAAS8H,EAAcD,GAC7B,OAAQA,EAAU7H,MAAQnB,EAAOkJ,UAAYF,EAAU7H,MAAQnB,EAAOmJ,WAAaH,EAAU7H,MAAQnB,EAAOoJ,OAGtG,SAASlC,EAAe8B,GAC9B,MAA0B,gBAAlBA,EAAU7H,KAgCZ,SAASkI,EAAc3H,EAAgBR,GAC7C,OAAIgG,EAAexF,EAAO4D,gBAClB,2BACH5D,GADJ,IAEC4D,eAAe,2BACX5D,EAAO4D,gBADG,IAEbgB,SAAUpF,EAAQoI,UAIb5H,EAKF,SAAS6H,EAAY7H,EAAgBR,GAC3C,OAAI6H,EAAarH,EAAO4D,gBAChB,2BACH5D,GADJ,IAEC4D,eAAe,2BACX5D,EAAO4D,gBADG,IAEbgB,SAAUpF,EAAQoI,UAIb5H,EAmBF,SAASoG,EAAcpG,EAAgB8H,GAC7C,IAAIjC,EAAYiC,EAAEjC,EAIlB,OADwB,EAFRiC,EAAE/B,EACQ/F,EAAOO,OAAOsB,MACM,EAAJgE,EAIpC,SAASU,EAAqBvG,EAAgBwG,EAAmBC,GAMvE,IALA,IAAIR,EAAyBQ,EAASZ,EAAIW,EAAWX,EACjDkC,EAA0BtB,EAASV,EAAIS,EAAWT,EAElD1B,EAAc,IAAIC,WADS2B,EAAiB8B,EAAkB,GAE9D7B,EAAY,EACPH,EAAYS,EAAWT,EAAGA,EAAIU,EAASV,EAAGA,IAClD,IAAK,IAAIF,EAAYW,EAAWX,EAAGA,EAAIY,EAASZ,EAAGA,IAElD,IADA,IAAIzG,EAAgBgH,EAAcpG,EAAQ,CAAC6F,IAAGE,MACrCxB,EAAInF,EAAOmF,EAAInF,EAAQ,EAAGmF,IAClCF,EAAY6B,GAAKlG,EAAOO,OAAO+E,KAAKf,GACpC2B,IAIH,OAAO,IAAI1B,UAAU,IAAIC,kBAAkBJ,EAAYK,QAASuB,EAAgB8B,GAqC1E,SAASC,EAA2BhI,EAAgB2F,GAE1D,IADA,IAAIN,EAAgCrF,EAAOO,OAAO+E,KAAKC,QAC9ChB,EAAY,EAAGA,EAAIoB,EAAIhC,OAAQY,GAAK,EAC5Cc,EAAWM,EAAIpB,GAAK,GAAK,EAE1B,OAAO,IAAIC,UAAUa,EAAYrF,EAAOO,OAAOsB,MAAO7B,EAAOO,OAAOwB,QAG9D,SAASkG,EAAqBjI,EAAgB2F,GAEpD,IADA,IAAIN,EAAgCrF,EAAOO,OAAO+E,KAAKC,QAC9ChB,EAAY,EAAGA,EAAIoB,EAAIhC,OAAQY,IACvCc,EAAWM,EAAIpB,IAAM,IAEtB,OAAO,IAAIC,UAAUa,EAAYrF,EAAOO,OAAOsB,MAAO7B,EAAOO,OAAOwB,QAI9D,SAASmG,EAAyBlI,EAAgB2F,GACxD,IAAIwC,EAAyChE,EAAYnE,EAAOO,OAAOsB,MAAO7B,EAAOO,OAAOwB,QAAQuD,KACpG,GAAIE,EAAexF,EAAO4D,gBAEzB,IADA,IAAIwE,EAAgBpI,EAAO4D,eAAe6B,WAAWH,KAC5Cf,EAAY,EAAGA,EAAIoB,EAAIhC,OAAQY,IACvC4D,EAAoBxC,EAAIpB,IAAM6D,EAAc7D,GAG9C,OAAO,IAAIC,UAAU2D,EAAqBnI,EAAOO,OAAOsB,MAAO7B,EAAOO,OAAOwB,QAIvE,SAASsG,EAAIrI,EAAgBR,GACnC,OAAO,2BACHQ,GADJ,IAECO,OAAQyH,EAA2BhI,EAAQoF,EAAWpF,IACtD4D,eAAgB,OAIX,SAAS0E,EAAWtI,EAAgBR,GAC1C,OAAO,2BACHQ,GADJ,IAECO,OAAQ0H,EAAqBjI,EAAQoF,EAAWpF,MAK3C,SAASuI,EAAKvI,EAAgBR,GACpC,OAAO,2BACHQ,GADJ,IAECO,OAAQ2H,EAAyBlI,EAAQoF,EAAWpF,IACpD4D,eAAgB,OAelB,SAAS4E,EAAOxI,EAAgByI,GAC/B,IAAIpD,EAAgCrF,EAAOO,OAAO+E,KAAKC,QACvD,GAAoB,SAAhBkD,EACH,IAAK,IAAIlE,EAAI,EAAGA,EAAIc,EAAW1B,OAAQY,GAAK,EAAG,CAC9C,IAAMmE,GAAWrD,EAAWd,GAAKc,EAAWd,EAAI,GAAKc,EAAWd,EAAI,IAAM,EAC1Ec,EAAWd,GAAKmE,EAChBrD,EAAWd,EAAI,GAAKmE,EACpBrD,EAAWd,EAAI,GAAKmE,OAGrB,IAAK,IAAInE,EAAI,EAAGA,EAAIc,EAAW1B,OAAQY,GAAK,EAC3Cc,EAAWd,GAAqB,QAAhBkE,EAAwBpD,EAAWd,GAAK,EACxDc,EAAWd,EAAI,GAAqB,UAAhBkE,EAA0BpD,EAAWd,EAAI,GAAK,EAClEc,EAAWd,EAAI,GAAqB,SAAhBkE,EAAyBpD,EAAWd,EAAI,GAAK,EAOnE,OAAO,IAAIC,UAAUa,EAAYrF,EAAOO,OAAOsB,MAAO7B,EAAOO,OAAOwB,QAW9D,SAAS4G,EAAY3I,EAAgBR,GAC3C,OAAO,2BACHQ,GADJ,IAECO,OAAQiI,EAAOxI,EAAQR,EAAQiJ,eAK1B,SAASlJ,EAAUS,EAAgBR,GACzC,OAAO,2BACHQ,GADJ,IAEC4D,eAAgB,CACfgB,SAAU,CAACiB,EAAG7F,EAAOO,OAAOsB,MAAQ,EAAI,GAAIkE,EAAG/F,EAAOO,OAAOwB,OAAS,EAAI,IAC1E+C,EAAG,IACHE,EAAG,IACHvF,KAAMnB,EAAOoJ,OACbP,gBAAiB,YACjByB,YAAa,aAMT,SAASC,EAAyB7I,EAAgBR,GACxD,OAAI+H,EAAcvH,EAAO4D,gBACjB,2BACH5D,GADJ,IAEC4D,eAAe,2BACX5D,EAAO4D,gBADG,IAEbuD,gBAAiB3H,EAAQsJ,aAIpB9I,EAIF,SAAS+I,EAAqB/I,EAAgBR,GACpD,OAAI+H,EAAcvH,EAAO4D,gBACjB,2BACH5D,GADJ,IAEC4D,eAAe,2BACX5D,EAAO4D,gBADG,IAEbgF,YAAapJ,EAAQsJ,aAIhB9I,ECpVME,mBAjBf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACL2I,eAAgB,kBAAM3I,ETzGjB,CACHZ,KCjCqB,gBDkCrBD,QAAS,MSwGXyJ,cAAe,SAACzJ,GAAD,OAAoCa,ET9FlD,SAAqBb,GACxB,MAAO,CACHC,KC5CoB,eD6CpBD,QAASA,GS2FiDmJ,CAAYnJ,KACxE0J,MAAO,kBAAM7I,EThFR,CACHZ,KCzDW,MD0DXD,QAAS,MS+EX2J,OAAQ,kBAAM9I,ETxFT,CACHZ,KCjDY,ODkDZD,QAAS,MSuFX4J,eAAgB,SAAC5J,GAAD,OAA8Ca,ET5E7D,SAAsBb,GACzB,MAAO,CACHC,KC9DqB,gBD+DrBD,QAASA,GSyE4DmF,CAAanF,KACpF6J,YAAa,SAAC7J,GAAD,OAAmCa,EAASd,EAAUC,QAI1DU,EA3Hf,SAAiB1B,GACb,IAAI8K,EAAaC,iBAAO,MACpBC,EAAiBD,iBAAO,MAFM,EAGN9G,mBAAS,QAHH,mBAG3B+F,EAH2B,KAGnBiB,EAHmB,KAiC5BC,EAAkB,SAAC7G,GACrB,IAAM8G,EAAoB9G,EAAM/B,OAAOhC,GACvCN,EAAMoL,YAAYD,GAClBnL,EAAMiF,eAAejB,EAAUqH,sBAC/B9J,EAAavB,EAAMwB,QACnBxB,EAAM6K,YAAY,CAACS,WAAYH,KAG7BI,EAAS,kBAAC,EAAD,CACXrL,MAAM,wFACNK,MAAOyJ,EACPxJ,SAvCJ,SAA6B6D,GACzB4G,EAAU5G,EAAM/B,OAAO/B,QAuCvBE,QAAS,CACL,CAACK,KAAM,iCAASP,MAAO,QACvB,CAACO,KAAM,6CAAWP,MAAO,OACzB,CAACO,KAAM,6CAAWP,MAAO,SACzB,CAACO,KAAM,iCAASP,MAAO,WAQ/B,OALAiL,2BAAgB,WACuBV,EAAWW,QACtCC,MAAMrI,MAAQrD,EAAMwB,OAAOO,OAAOsB,MAAQ,QAIlD,yBAAKhD,UAAU,UAAUsL,IAAKb,GAC1B,kBAAC,EAAD,MACA,4BAAQ9F,QAAS,SAAA5C,GAAMpC,EAAMiF,eAAejB,EAAU4H,qBAAsB5L,EAAMwK,kBAAoBtI,MAAM,oGAAoB7B,UAAU,iBAC1I,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAY4E,eAAgBjF,EAAMiF,iBAClC,kBAAC,EAAD,CAAYA,eAAgBjF,EAAMiF,iBAClC,4BAAQD,QAxChB,WAC6BpC,OAAOY,QAAQ,uUAEpCjC,EAAavB,EAAMwB,QACnBxB,EAAM4K,eAAe,CAACvH,MAAO,IAAKE,OAAQ,MAC1CvD,EAAMiF,eAAejB,EAAUkB,cAmCKhD,MAAM,gEAAc7B,UAAU,kBACjEkL,EACD,4BAAQvG,QAzDhB,SAA6BX,GACzB9C,EAAavB,EAAMwB,QACnBxB,EAAMyK,cAAc,CAACR,YAAaD,KAuDQ9H,MAAM,8FAAmB7B,UAAU,cACzE,4BAAQ2E,QAAS,SAAA5C,GAAMpC,EAAMiF,eAAejB,EAAU6H,WAAY7L,EAAMwK,kBAAmBnK,UAAU,YAAY6B,MAAM,wGACvH,4BACIyJ,IAAKX,EACL9I,MAAM,iCACN8C,QAAS,SAAA5C,GAAC,OAAIpC,EAAMiF,eAAejB,EAAU8H,gBAC7CzL,UAAU,cAEXL,EAAMwB,OAAO4D,iBAAmB2D,EAAc/I,EAAMwB,OAAO4D,iBAAmB4B,EAAehH,EAAMwB,OAAO4D,mBAC7G,yBAAK/E,UAAU,YACX,4BACIA,UAAU,YACV6B,MAAM,2BACN5B,GAAG,SACH0E,QAASkG,IAEb,4BACI7K,UAAU,eACV6B,MAAM,iFACN5B,GAAG,YACH0E,QAASkG,IAEb,4BACI7K,UAAU,cACV6B,MAAM,qEACN5B,GAAG,WACH0E,QAASkG,KAIhBlL,EAAMwB,OAAO4D,gBAAkB4B,EAAehH,EAAMwB,OAAO4D,iBAC5D,6BACA,4BAAQJ,QApFhB,WACIzD,EAAavB,EAAMwB,QACnBxB,EAAM0K,SAkFwCrK,UAAU,WACpD,4BAAQ2E,QAhFhB,WACIzD,EAAavB,EAAMwB,QACnBxB,EAAM2K,UA8EuCtK,UAAU,iBCxChDqB,oBAZf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLC,WAAY,SAACd,GAAD,OAAoCa,EAASX,EAASF,QAIzDU,EAxEf,SAAgB1B,GACZ,IAAI+L,EACAC,EAAuBjB,iBAAO,MAC9BkB,EAAqBlB,iBAAO,MAqBhC,SAASmB,IACLH,EAAMI,UAAUC,iBAAiB,GAAGC,OACpCrM,EAAMiF,eAAejB,EAAUkB,YAanC,IAAInD,EAAmCC,qBAAWC,IAYlD,OAVAqK,qBAAU,WAnCFC,UAAUC,aAAaC,cAGrBF,UAAUC,aAAaC,aAAa,CAACC,OAAO,EAAOX,OAAO,IAAQY,MAAK,SAAUC,IACjFb,EAAQrH,SAASmI,cAAc,aAG7Bd,EAAMI,UAAYS,EAClBb,EAAMe,iBAAmB,WACvBf,EAAOgB,YAGVC,OAAM,SAAUC,GACfrJ,QAAQC,IAAI,QAAQoJ,MAwB5BC,YAAW,WACP,IAAMC,EAAuCnB,EAAqBP,QAC5D2B,EAAqCnB,EAAmBR,QAC9D0B,EAAkBzB,MAAM2B,QAAU,QAClCD,EAAgB1B,MAAM2B,QAAU,UACjC,SAIH,yBAAK3B,MAAO,CAACtF,SAAU,aACnB,2BAAO9F,GAAG,QAAQgN,UAAQ,EAACC,UAAQ,IACnC,4BAAQvI,QAASkH,EAAYR,MAAO,CAAC2B,QAAS,QAAS1B,IAAKK,GAA5D,UACA,4BAAQhH,QA1BhB,WACI,GAAKjD,EAAL,CACA,IAAIkB,EAAUlB,EAAQmB,WAAW,MACjCD,EAASQ,UAAUsI,EAAO,EAAG,GAC7B,IAAIrI,EAAaT,EAASU,aAAa,EAAG,EAAG5B,EAAQsB,MAAOtB,EAAQwB,QACpEhC,EAAavB,EAAMwB,QACnBxB,EAAM8B,WAAW,CAACgC,SAAUJ,IAC5BwI,MAmB+BR,MAAO,CAAC2B,QAAS,QAAS1B,IAAKM,GAA1D,kB,KC3DZ,ICuHevK,oBAbf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACL2L,gBAAiB,SAACxM,GAAD,OAA6Ba,EZhG7C,SAAuBb,GAC1B,MAAO,CACHC,KC3Be,UD4BfD,QAASA,GY6F4CmI,CAAcnI,KACrEyM,0BAA2B,kBAAM5L,EZvG5B,CACHZ,KCrB2B,sBDsB3BD,QAAS,SYyGFU,EA3GM,SAAC1B,GAClB,IACM0N,EADiC1L,qBAAWC,IACrB0L,wBAFkB,EAGH1J,oBAAS,GAHN,mBAGxC2J,EAHwC,KAGxBC,EAHwB,OAInB5J,mBAAS,CAACoD,EAAG,EAAGE,EAAG,IAJA,mBAIxCuG,EAJwC,KAIhCC,EAJgC,OAKf9J,oBAAS,WAAO,OAZpD,SAA2BjE,EAA0B0N,GACjD,MAAO,CACHrG,EAAGrH,EAAMwB,OAAO4D,eAAgBgB,SAASiB,EACzCE,EAAGmG,EAAaM,IAAMhO,EAAMwB,OAAO4D,eAAgBgB,SAASmB,GAST0G,CAAiBjO,EAAO0N,MALhC,mBAKxCtH,EALwC,KAK9B8H,EAL8B,KAM3CC,EAAepD,iBAAO,MAE1B,SAASqD,EAAqB/J,GAC1B0J,EAAU,CAAC1G,EAAGhD,EAAMgK,QAAUjI,EAASiB,EAAIE,EAAGlD,EAAMiK,QAAUlI,EAASmB,IACvEsG,GAAkB,GAClBxJ,EAAMC,iBAGV,IAAMiK,EAAe,SAAUC,EAAcR,GACzC,IAAMS,EAA6BN,EAAa1C,QAchD,OAZI+C,EAAOd,EAAac,OACpBA,EAAOd,EAAac,MAEpBA,EAAOC,EAAQpL,MAAQqK,EAAagB,QACpCF,EAAOd,EAAagB,MAAQD,EAAQpL,OAEpC2K,EAAMN,EAAaM,MACnBA,EAAMN,EAAaM,KAEnBA,EAAMS,EAAQlL,OAASmK,EAAaiB,SACpCX,EAAM7N,KAAKyO,IAAIlB,EAAaiB,OAASF,EAAQlL,OAAQmK,EAAaM,MAE/D,CAACQ,OAAMR,QAGZa,EAAuB,SAAUxK,GACnC,GAAIuJ,EAAgB,CAChB,IAAMkB,EAAiBP,EAAalK,EAAMgK,QAAUP,EAAOzG,EAAGhD,EAAMiK,QAAUR,EAAOvG,GACrF2G,EAAY,CAAC7G,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,MACvD3J,EAAMC,mBAIRyK,EAAqB,SAAU1K,GACjC,GAAKuJ,EAAL,CACA,IAAMkB,EAAiBP,EAAalK,EAAMgK,QAAUP,EAAOzG,EAAGhD,EAAMiK,QAAUR,EAAOvG,GACrF2G,EAAY,CAAC7G,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,MACvDzM,EAAavB,EAAMwB,QACnBxB,EAAMwN,gBAAgB,CAACpE,MAAO,CAAC/B,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAMN,EAAaM,OAC5FH,GAAkB,KAoCtB,OAjCAvB,qBAAU,WACN,IAAM0C,EAA+Bb,EAAa1C,QAIlD,OAHAuD,EAAUC,iBAAiB,YAAab,GACxC1J,SAASuK,iBAAiB,YAAaJ,GACvCnK,SAASuK,iBAAiB,UAAWF,GAC9B,WACHC,EAAUE,oBAAoB,YAAad,GAC3C1J,SAASwK,oBAAoB,YAAaL,GAC1CnK,SAASwK,oBAAoB,UAAWH,OAIhDzC,qBAAU,WACN,IAAM0C,EAA+Bb,EAAa1C,QAC9C0D,EAAaH,EAAU9L,WAAW,MAKtC,GAJA8L,EAAUtD,MAAMsC,IAAM5H,EAASmB,EAAK,KACpCyH,EAAUtD,MAAM8C,KAAOpI,EAASiB,EAAK,KACrC2H,EAAUI,aAAa,QAASpP,EAAMwB,OAAO4D,eAAgBkB,EAAE+I,YAC/DL,EAAUI,aAAa,SAAUpP,EAAMwB,OAAO4D,eAAgBoB,EAAE6I,YAC5DrI,EAAehH,EAAMwB,OAAO4D,gBAAiB,CAC7C,IAAIkK,EAA4BtP,EAAMwB,OAAO4D,eAAgB6B,WAC7DkI,EAAWI,aACPD,GACC,GACA,EACD,EACA,EACAtP,EAAMwB,OAAO4D,eAAekB,EAC5BtG,EAAMwB,OAAO4D,eAAeoB,MAGrC,IAGC,4BACImF,IAAKwC,EACL9N,UAAU,YACVqL,MAAO,CACHsC,IAAI,GAAD,OAAK5H,EAASmB,EAAd,MACHiH,KAAK,GAAD,OAAKpI,EAASiB,EAAd,YCtELmI,I,MA9BU,SAACxP,GACtB,IAAMC,EAAO,UAAMD,EAAME,MAAZ,YAAqBC,KAAKC,UAEvC,OACI,yBAAKC,UAAU,IACX,2BAAOJ,QAASA,EAASI,UAAU,sBAAsBL,EAAME,OAC/D,4BACII,GAAIL,EACJM,MAAOP,EAAMO,MACbC,SAAUR,EAAMQ,SAChBH,UAAU,uBAETL,EAAMS,QAAQC,KAAI,SAACC,EAAaC,GAC7B,OACI,4BACIL,MAAOI,EACPE,IAAKD,EACL8K,MAAO,CACHrD,WAAW,GAAD,OAAK1H,KAGlBA,UFtBvB8O,GAAuB,GACpB1J,GAAE,EAAGA,GAAI,IAAKA,KACnB0J,GAAM1J,IAAKA,GAGf,IGdK2J,GHyCUC,GA3BQ,SAAC3P,GACpB,IAAMC,EAAO,UAAMD,EAAME,MAAZ,YAAqBC,KAAKC,UAEvC,OACI,yBAAKC,UAAU,IACX,2BAAOJ,QAASA,EAASI,UAAU,sBAAsBL,EAAME,OAC/D,4BACII,GAAIL,EACJM,MAAOP,EAAMO,MACbC,SAAUR,EAAMQ,SAChBH,UAAU,uBAEToP,GAAM/O,KAAI,SAACC,EAAaC,GACrB,OACI,4BACIL,MAAOI,EACPE,IAAKD,GAEJD,U,SGhCxB+O,O,qBAAAA,I,uBAAAA,I,2BAAAA,I,8BAAAA,Q,KAOUA,UCQTnB,GAAe,SAAUlH,EAAWE,EAAWmG,GAcjD,OAZIrG,EAAIqG,EAAac,OACjBnH,EAAIqG,EAAac,MAEjBnH,EAAIqG,EAAagB,MAfQ,EACL,IAepBrH,EAAIqG,EAAagB,MAhBQ,EACL,GAiBpBnH,EAAImG,EAAaM,MACjBzG,EAAImG,EAAaM,KAEjBzG,EAAImG,EAAaiB,OArBQ,EACL,IAqBpBpH,EAAImG,EAAaiB,OAtBQ,EACL,GAuBjB,CAACtH,IAAGE,MA4JAqI,OAhGf,SAAgB5P,GACZ,IAAI6P,EAAY9E,iBAAO,MACnB+C,EAAS/C,iBAAO,CAAC1D,EAAG,EAAGE,EAAG,IAC1BuI,EAAc/E,iBAAO,IACrBhJ,EAAmCC,qBAAWC,IAE9C2L,EAAiB7C,kBAAO,GAE5B,SAASgF,EAAyB1L,GAC9BuJ,EAAenC,SAAU,EACzBpH,EAAMC,iBAGV,IAAM0L,EAA2B,SAAU3L,GACvC,GAAIuJ,EAAenC,QAAS,CACxB,IAAMiC,EAAe3L,EAAQ4L,wBACvBsC,EAAa,CACfC,QAAS,CAAC7I,EAAGrH,EAAMmQ,IAAI9I,EAAGE,EAAGvH,EAAMmQ,IAAI5I,GACvC6I,WAAY,CAAC/I,EAAGrH,EAAMmQ,IAAI9I,EAAGE,EAAGvH,EAAMmQ,IAAI5I,EAAIvH,EAAMmQ,IAAI5M,QACxD8M,SAAU,CAAChJ,EAAGrH,EAAMmQ,IAAI9I,EAAIrH,EAAMmQ,IAAI9M,MAAOkE,EAAGvH,EAAMmQ,IAAI5I,GAC1D+I,YAAa,CAACjJ,EAAGrH,EAAMmQ,IAAI9I,EAAIrH,EAAMmQ,IAAI9M,MAAOkE,EAAGvH,EAAMmQ,IAAI5I,EAAIvH,EAAMmQ,IAAI5M,SANvD,EAvEP,SAAS8K,EAAiBC,EAAiB2B,EAAiBvC,EAAuB6C,GAG5G,IAIIC,EAJAnJ,EAAY,EACZE,EAAY,EACZlE,EAAgB,EAChBE,EAAiB,EAErB,OAAQgN,GACR,KAAKb,GAAWe,QACRpC,EAAU4B,EAAWI,SAAShJ,IAC9BgH,EAAU4B,EAAWI,SAAShJ,GAC9BiH,EAAU2B,EAAWG,WAAW7I,IAChC+G,EAAU2B,EAAWI,SAAS9I,GAElCF,GADAmJ,EAAiBjC,GAAaF,EAASC,EAASZ,IAC7BrG,EACnBE,EAAIiJ,EAAejJ,EACnBlE,EAAQ4M,EAAWI,SAAShJ,EAAIA,EAChC9D,EAAS0M,EAAWG,WAAW7I,EAAIA,EACnC,MACJ,KAAKmI,GAAWgB,WACRrC,EAAU4B,EAAWK,YAAYjJ,IACjCgH,EAAU4B,EAAWK,YAAYjJ,GACjCiH,EAAU2B,EAAWC,QAAQ3I,IAC7B+G,EAAU2B,EAAWC,QAAQ3I,GAEjCF,GADAmJ,EAAkBjC,GAAaF,EAASC,EAASZ,IAC9BrG,EACnBE,EAAI0I,EAAWC,QAAQ3I,EACvBlE,EAAQ4M,EAAWK,YAAYjJ,EAAIA,EACnC9D,EAASiN,EAAejJ,EAAIA,EAC5B,MACJ,KAAKmI,GAAWiB,SACRtC,EAAU4B,EAAWC,QAAQ7I,IAC7BgH,EAAU4B,EAAWC,QAAQ7I,GAC7BiH,EAAU2B,EAAWK,YAAY/I,IACjC+G,EAAU2B,EAAWK,YAAY/I,GACrCiJ,EAAkBjC,GAAaF,EAASC,EAASZ,GACjDrG,EAAI4I,EAAWC,QAAQ7I,EACvBE,EAAIiJ,EAAejJ,EACnBlE,EAAQmN,EAAenJ,EAAIA,EAC3B9D,EAAS0M,EAAWK,YAAY/I,EAAIA,EACpC,MACJ,KAAKmI,GAAWkB,YACRvC,EAAU4B,EAAWC,QAAQ7I,IAC7BgH,EAAU4B,EAAWC,QAAQ7I,GAC7BiH,EAAU2B,EAAWC,QAAQ3I,IAC7B+G,EAAU2B,EAAWC,QAAQ3I,GACjCiJ,EAAkBjC,GAAaF,EAASC,EAASZ,GACjDrG,EAAI4I,EAAWC,QAAQ7I,EACvBE,EAAI0I,EAAWC,QAAQ3I,EACvBlE,EAAQmN,EAAenJ,EAAIA,EAC3B9D,EAASiN,EAAejJ,EAAIA,EAGhC,MAAO,CAACF,IAAGE,IAAGlE,QAAOE,UAyBiBsN,CAAqBxM,EAAMgK,QAAShK,EAAMiK,QAAtB,eAAmC2B,GAAavC,EAAc1N,EAAMiB,MAA/GoG,EARiB,EAQjBA,EAAGE,EARc,EAQdA,EAAGlE,EARW,EAQXA,MAAOE,EARI,EAQJA,OACpBvD,EAAM8Q,WAAWzJ,EAAGE,EAAGlE,EAAOE,GAC9Bc,EAAMC,mBAIRyM,EAAyB,SAAU1M,GAChCuJ,EAAenC,UACpBmC,EAAenC,SAAU,EACzBpH,EAAMC,mBAmDV,OAhDAgI,qBAAU,WACN,OAAQtM,EAAMiB,MACd,KAAKyO,GAAWe,QACZ3C,EAAOrC,QAAU,CAACpE,GAzHG,EAyHmBE,GAzHnB,GA0HrBuI,EAAYrE,QAAU,YACtB,MACJ,KAAKiE,GAAWgB,WACZ5C,EAAOrC,QAAU,CAACpE,GA7HG,EA6HmBE,EAAGvH,EAAMmQ,IAAI5M,QACrDuM,EAAYrE,QAAU,YACtB,MACJ,KAAKiE,GAAWiB,SACZ7C,EAAOrC,QAAU,CAACpE,EAAGrH,EAAMmQ,IAAI9M,MAAOkE,GAjIjB,GAkIrBuI,EAAYrE,QAAU,YACtB,MACJ,KAAKiE,GAAWkB,YACZ9C,EAAOrC,QAAU,CAACpE,EAAGrH,EAAMmQ,IAAI9M,MAAOkE,EAAGvH,EAAMmQ,IAAI5M,QACnDuM,EAAYrE,QAAU,YAG1B,GAAIzL,EAAMgR,cACN,OAAQhR,EAAMiB,MACV,KAAKyO,GAAWe,QACZ3C,EAAOrC,QAAU,CAACpE,GA5IL,EA4I2BE,GA5I3B,GA6Ib,MACJ,KAAKmI,GAAWgB,WACZ5C,EAAOrC,QAAU,CAACpE,GA/IL,EA+I2BE,EAAG,KAC3C,MACJ,KAAKmI,GAAWiB,SACZ7C,EAAOrC,QAAU,CAACpE,EAAG,IAAKE,GAlJb,GAmJb,MACJ,KAAKmI,GAAWkB,YACZ9C,EAAOrC,QAAU,CAACpE,EAAG,IAAKE,EAAG,KAKzC,IAAM0J,EAAgCpB,EAAUpE,QAKhD,OAJAwF,EAAWhC,iBAAiB,YAAac,GACzCrL,SAASuK,iBAAiB,YAAae,GACvCtL,SAASuK,iBAAiB,UAAW8B,GAE9B,WACHE,EAAW/B,oBAAoB,YAAaa,GAC5CrL,SAASwK,oBAAoB,YAAac,GAC1CtL,SAASwK,oBAAoB,UAAW6B,OAK5C,yBACIpF,IAAKkE,EACLxP,UAAU,SACVqL,MAAO,CACH8C,KAAK,GAAD,OAAKxO,EAAMmQ,IAAI9I,EAAIyG,EAAOrC,QAAQpE,EAAlC,MACJ2G,IAAI,GAAD,OAAKhO,EAAMmQ,IAAI5I,EAAIuG,EAAOrC,QAAQlE,EAAlC,MACH2J,OAAO,GAAD,OAAKpB,EAAYrE,aCpKjC0F,GAAQ,CAAC,SAAU,YAAa,aAAc,mBAAoB,kBACxE,SAAU,eAAgB,YAAa,oBAAqB,UA+E5D,IAAM5C,GAAe,SAAUC,EAAcR,EAAaoD,EAAyB1D,GAc/E,OAZIc,EAAOd,EAAac,OACpBA,EAAOd,EAAac,MAEpBA,EAAO4C,EAAe/N,MAAQqK,EAAagB,QAC3CF,EAAOd,EAAagB,MAAQ0C,EAAe/N,OAE3C2K,EAAMN,EAAaM,MACnBA,EAAMN,EAAaM,KAEnBA,EAAMoD,EAAe7N,OAASmK,EAAaiB,SAC3CX,EAAM7N,KAAKyO,IAAIlB,EAAaiB,OAASyC,EAAe7N,OAAQmK,EAAaM,MAEtE,CAACQ,OAAMR,QA8PHtM,oBAff,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLwP,kBAAmB,SAACrQ,GAAD,OAAqEa,EAASV,EAAgBH,KACjHsQ,cAAe,SAACtQ,GAAD,OAA6Ba,EhB1Q3C,SAAqBb,GACxB,MAAO,CACHC,KChFqB,gBDiFrBD,QAASA,GgBuQ0CqI,CAAYrI,KACjEc,WAAY,SAACd,GAAD,OAAoCa,EAASX,EAASF,KAClEwJ,eAAgB,kBAAM3I,EhBlUjB,CACHZ,KCjCqB,gBDkCrBD,QAAS,SgBoUFU,EA3PI,SAAC1B,GAChB,IAAIuR,EAAaxG,iBAAO,MACpBhJ,EAAmCC,qBAAWC,IAFV,EAGIgC,oBAAS,GAHb,mBAGjC2J,EAHiC,KAGjBC,EAHiB,OAIZ5J,mBAAS,CAACoD,EAAG,EAAGE,EAAG,IAJP,mBAIjCuG,EAJiC,KAIzBC,EAJyB,OAKR9J,oBAAS,kBAYzC,SAA2BzC,GACvB,IAAMkM,EAAe3L,EAAQ4L,wBAC7B,MAAO,CACHtG,EAAG7F,EAAO4D,eAAgBgB,SAASiB,EACnCE,EAAGmG,EAAaM,IAAMxM,EAAO4D,eAAgBgB,SAASmB,EACtDlE,MAAO7B,EAAO4D,eAAgBkB,EAC9B/C,OAAQ/B,EAAO4D,eAAgBoB,GAlBQyH,CAAiBjO,EAAMwB,WAL9B,mBAKjC4E,EALiC,KAKvB8H,EALuB,OAMhBjK,mBAAS,IANO,mBAMjCnD,EANiC,KAM3B0Q,EAN2B,OAONvN,oBAAS,kBA3FpC4E,GADYrH,EA4F2CxB,EAAMwB,QA3FzC4D,gBAAkB5D,EAAO4D,eAAemD,MAAQ,UAD/E,IAAuB/G,KAqFqB,mBAOjCiQ,EAPiC,KAOtBC,EAPsB,OAQJzN,oBAAS,kBAxFtC4E,GADiBrH,EAyF6CxB,EAAMwB,QAxFhD4D,gBAAkB5D,EAAO4D,eAAeoD,WAAa,IADpF,IAA4BhH,KAiFgB,mBAQjCgH,EARiC,KAQrBmJ,EARqB,OASN1N,oBAAS,kBArFpC4E,GADgBrH,EAsF2CxB,EAAMwB,QArF7C4D,gBAAkB5D,EAAO4D,eAAeqD,UAAY,SADnF,IAA2BjH,KA6EiB,mBASjCiH,EATiC,KAStBmJ,EATsB,OAUJ3N,oBAAS,kBAlFtC4E,GADiBrH,EAmF6CxB,EAAMwB,QAlFhD4D,gBAAkB5D,EAAO4D,eAAeiD,WAAa,kBADpF,IAA4B7G,KAyEgB,mBAUjC6G,EAViC,KAUrBwJ,EAVqB,OAWR5N,oBAAS,kBA/ElC4E,GADerH,EAgFyCxB,EAAMwB,QA/E1C4D,gBAAkB5D,EAAO4D,eAAekD,SAAW,GADlF,IAA0B9G,KAqEkB,mBAWjC8G,EAXiC,KAWvBwJ,EAXuB,OAYM7N,oBAAS,kBA5EhD4E,GADsBrH,EA6EuDxB,EAAMwB,QA5E/D4D,gBAAkB5D,EAAO4D,eAAeuD,gBAAkB,2BADzF,IAAiCnH,KAiEW,mBAYjCmH,EAZiC,aAaF1E,oBAAS,IAbP,mBAajC8N,EAbiC,KAepCC,GAfoC,KAetBjH,iBAAO,OAYzB,IAAMkH,EAAmB,kBAAC,GAAD,CACrB/R,MAAM,iCACNK,MAAO8H,EACP7H,SAgBJ,SAAmC6D,GAC/BwN,EAAcxN,EAAM/B,OAAO/B,QAhB3BE,QAAS0Q,KAGPe,EAAiB,kBAAC,GAAD,CACnBhS,MAAM,4EACNK,MAAO+H,EACP9H,SAaJ,SAAiC6D,GAC7ByN,EAAYK,OAAO9N,EAAM/B,OAAO/B,WAXpC,SAAS6R,GAAa/K,EAAWE,EAAWlE,EAAeE,GACvD,IAAMmK,EAAe3L,EAAQ4L,wBAC7BO,EAAY,CAAC7G,IAAGE,IAAGlE,QAAOE,WAC1BvD,EAAMqR,kBAAkB,CAAChL,SAAU,CAACgB,EAAGA,EAAGE,EAAGA,EAAImG,EAAaM,KAAMzH,SAAUlD,EAAOoD,UAAWlD,IA8CpG,SAAS8O,GAA0BhO,GAC3BA,EAAMiO,mBACVvE,EAAU,CAAC1G,EAAGhD,EAAMgK,QAAUjI,EAASiB,EAAIE,EAAGlD,EAAMiK,QAAUlI,EAASmB,IACvEsG,GAAkB,IAGtB,IAAM0E,GAA4B,SAAUlO,GACxC,IAAIA,EAAMiO,kBACN1E,EAAgB,CAChB,IACMwD,EADoCY,EAAYvG,QAClBkC,wBAC9BD,EAAe3L,EAAQ4L,wBACvBmB,EAAiBP,GAAalK,EAAMgK,QAAUP,EAAOzG,EAAGhD,EAAMiK,QAAUR,EAAOvG,EAAG6J,EAAgB1D,GACxGQ,EAAY,CAAC7G,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAK3K,MAAO+C,EAAS/C,MAAOE,OAAQ6C,EAAS7C,WAItGiP,GAA0B,SAAUnO,GACtC,IAAIA,EAAMiO,kBACL1E,EAAL,CACA,IAAMF,EAAe3L,EAAQ4L,wBAEvByD,EADoCY,EAAYvG,QAClBkC,wBAC9BmB,EAAiBP,GAAalK,EAAMgK,QAAUP,EAAOzG,EAAGhD,EAAMiK,QAAUR,EAAOvG,EAAG6J,EAAgB1D,GACxGQ,EAAY,CAAC7G,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAK3K,MAAO+C,EAAS/C,MAAOE,OAAQ6C,EAAS7C,SACpGvD,EAAMsR,cAAc,CAAClI,MAAO,CAAC/B,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAMN,EAAaM,OAC1FH,GAAkB,KAiCtB,OA9BAvB,qBAAU,WACN,IAAMmG,EAAkCT,EAAYvG,QAIpD,OAHAgH,EAAaxD,iBAAiB,YAAaoD,IAC3C3N,SAASuK,iBAAiB,YAAasD,IACvC7N,SAASuK,iBAAiB,UAAWuD,IAC9B,WACHC,EAAavD,oBAAoB,YAAamD,IAC9C3N,SAASwK,oBAAoB,YAAaqD,IAC1C7N,SAASwK,oBAAoB,UAAWsD,QAKhDlG,qBAAU,WACN,IAAMoB,EAAe3L,EAAQ4L,wBAC7BO,EAAY,CACR7G,EAAGrH,EAAMwB,OAAO4D,eAAgBgB,SAASiB,EACzCE,EAAGvH,EAAMwB,OAAO4D,eAAgBgB,SAASmB,EAAImG,EAAaM,IAC1D3K,MAAOrD,EAAMwB,OAAO4D,eAAgBkB,EACpC/C,OAAQvD,EAAMwB,OAAO4D,eAAgBoB,MAE1C,IAEHgF,2BAAgB,WACZ,IAAMkC,EAAwB3L,EAAQ4L,wBAChC+E,EAA6BnB,EAAW9F,QAC9CiH,EAAQhH,MAAMsC,IAAMN,EAAaM,IAAM,KACvC0E,EAAQhH,MAAM8C,KAAOd,EAAarK,MAAQ,QAI1C,6BACI,yBAAKhD,UAAU,UAAUsL,IAAK4F,GAC1B,yBAAK7F,MAAO,CAACiH,OAAQ,QACjB,2BAAOtS,UAAU,uBAAjB,4BACA,2BACIY,KAAK,QACLT,SAjGpB,SAAkC6D,GAC9BqN,EAAarN,EAAM/B,OAAO/B,UAkGd,4BACIF,UAAU,kBACV2E,QAjGpB,SAAkCX,GACVsN,EAAN,KAAdnJ,EAAkC,IAAqB,MAiGvCtG,MAAM,mFAHV,KAKA,4BACI7B,UAAU,qBACV2E,QAlGpB,SAAqCX,GACTuN,EAAX,UAAbnJ,EAAqC,SAAyB,WAkG9CvG,MAAM,uEAHV,MAMJ,6BACK+P,GAEL,6BACKC,GAEL,yBAAK7R,UAAU,oBACX,4BACIA,UAAU,WACV2E,QA3GpB,SAAqCX,GACjC,IAAIuO,EAAa,IAAMtK,EACnBuK,EAAM9Q,EAAQmB,WAAW,MACvBwK,EAAe3L,EAAQ4L,wBAC7BkF,EAAKC,UAAYrB,EACjBoB,EAAKE,KAAOvK,EAAa,IAAMC,EAAY,IAAMH,EAAW,MAAQD,EAxI5E,SAAkBpF,EAAmCnC,EAAcuG,EAAWE,EAAWyL,EAAkBJ,GAGvG,IAFA,IAAIK,EAAQnS,EAAKoS,MAAM,KACnBC,EAAO,GACHC,EAAI,EAAGA,EAAIH,EAAM9N,OAAQiO,IAAK,CAGlC,GAFkBnQ,EAAQoQ,YAAYJ,EAAMG,IACf/P,MACZ2P,EACjB,CACiB,KAATG,IACAF,EAAMG,GAAKD,EAAO,IAAMF,EAAMG,IAGlC,IAFA,IAAIE,EAAUL,EAAMG,GAAGF,MAAM,IACzBK,EAAc,GACVxN,EAAI,EAAGA,EAAIuN,EAAQnO,OAAQY,IAAK,CACpC,IAAIyN,EAAkBD,EAAcD,EAAQvN,GACvB9C,EAAQoQ,YAAYG,GACHnQ,MACf2P,GAAYjN,EAAI,GACnC9C,EAAQwQ,SAASF,EAAalM,EAAGE,GACjCgM,EAAcD,EAAQvN,GACtBwB,GAAKqL,GAGLW,EAAcC,EAGtBL,EAAOI,EAAc,QAEpB,CACD,IAAIG,EAAWP,EAAOF,EAAMG,GAAK,IACnBnQ,EAAQoQ,YAAYK,GACNrQ,MACR2P,GAAYI,EAAI,GAChCnQ,EAAQwQ,SAASN,EAAM9L,EAAGE,GAC1B4L,EAAOF,EAAMG,GAAK,IAClB7L,GAAKqL,GAGLO,EAAOO,EAGnBzQ,EAAQwQ,SAASN,EAAM9L,EAAGE,IAiGtBoM,CAASd,EAAM/R,EAAMsF,EAASiB,EAAGjB,EAASmB,EAAImG,EAAaM,IAAM1F,EAAUtI,EAAMwB,OAAO4D,eAAgBkB,EAAGsM,GAC3G,IAAIlP,EAAamP,EAAKlP,aAAa,EAAG,EAAG5B,EAAQsB,MAAOtB,EAAQwB,QAChEvD,EAAM8B,WAAW,CAACgC,SAAUJ,IAC5B1D,EAAMiF,eAAejB,EAAUkB,YAC/BlF,EAAMwK,kBAkGUtI,MAAM,oFAGV,4BACI7B,UAAU,aACV2E,QApGpB,SAAsCX,GAClChD,EAAUkE,MACVvF,EAAMwK,iBACNxK,EAAMiF,eAAejB,EAAUkB,aAkGfhD,MAAM,2CAIlB,8BACIyJ,IAAKqG,EACLxR,SAxIZ,SAAiC6D,GAC7BmN,EAAQnN,EAAM/B,OAAO/B,QAwIbA,MAAOO,EACPT,UAAU,YACVuT,WAAS,EACTlI,MAAO,CACHsC,IAAI,GAAD,OAAK5H,EAASmB,EAAd,MACHiH,KAAK,GAAD,OAAKpI,EAASiB,EAAd,MACJ9D,OAAO,GAAD,OAAK6C,EAAS7C,OAAd,MACNF,MAAM,GAAD,OAAK+C,EAAS/C,MAAd,MACLkF,MAAM,GAAD,OAAKkJ,GACVhJ,UAAU,GAAD,OAAKA,GACdD,WAA0B,KAAdA,EAAoB,IAAM,IACtCH,WAAW,GAAD,OAAKA,EAAL,gBACVC,SAAU,UAAGA,GAAW,KACxBK,gBAAgB,GAAD,OAAKA,MAI5B,kBAAC,GAAD,CACIwH,IAAK/J,EACL0K,WAAYsB,GACZnR,KAAMyO,GAAWe,QACjBO,cAAee,IAEnB,kBAAC,GAAD,CACI5B,IAAK/J,EACL0K,WAAYsB,GACZnR,KAAMyO,GAAWiB,SACjBK,cAAee,IAEnB,kBAAC,GAAD,CACI5B,IAAK/J,EACL0K,WAAYsB,GACZnR,KAAMyO,GAAWgB,WACjBM,cAAee,IAEnB,kBAAC,GAAD,CACI5B,IAAK/J,EACL0K,WAAYsB,GACZnR,KAAMyO,GAAWkB,YACjBI,cAAee,QCzTzBxD,GAAe,SAAUC,EAAcR,EAAaoD,EAAyB1D,GAa/E,OAZIc,EAAOd,EAAac,OACpBA,EAAOd,EAAac,MAEpBA,EAAO4C,EAAe/N,MAAQqK,EAAagB,MAAQmF,EAnBvC,IAoBZrF,EAAOd,EAAagB,MAAQ0C,EAAe/N,MAAQwQ,EApBvC,GAsBZ7F,EAAMN,EAAaM,MACnBA,EAAMN,EAAaM,KAEnBA,EAAMoD,EAAe7N,OAASmK,EAAaiB,OAASkF,EAAkBC,IACtE9F,EAAM7N,KAAKyO,IAAIlB,EAAaiB,OAASyC,EAAe7N,OAASsQ,EAAkBC,EAAiBpG,EAAaM,MAE1G,CAACQ,OAAMR,QAYlB,SAAS+F,GAAWC,EACA/Q,EACAmD,EACAgE,EACAzB,EACAsL,GAMhB,OAJAhR,EAAQiR,YACRjR,EAAQkR,UAhDQ,EAiDhBlR,EAAQ6P,UAAYnK,EACpB1F,EAAQmR,YAAchK,EACd4J,EAAO3E,YACf,IAAK,SACDpM,EAAQoR,QAAQjO,EAAS/C,MAAQ,EAAI4Q,EAAM5M,EAAGjB,EAAS7C,OAAS,EAAI0Q,EAAM1M,EAAGnB,EAAS/C,MAAQ,EAAG+C,EAAS7C,OAAS,EAAI,EAAG,EAAW,EAARpD,KAAKmU,IAClI,MACJ,IAAK,WAEDrR,EAAQsR,OAAON,EAAM5M,EAAG4M,EAAM1M,EAAInB,EAAS7C,QAC3CN,EAAQuR,OAAOP,EAAM5M,EAAIjB,EAAS/C,MAAO4Q,EAAM1M,EAAInB,EAAS7C,QAC5DN,EAAQuR,OAAOP,EAAM5M,EAAIjB,EAAS/C,MAAQ,EAAG4Q,EAAM1M,GACnD,MACJ,IAAK,YACDtE,EAAQsR,OAAON,EAAM5M,EAAG4M,EAAM1M,EAAInB,EAAS7C,QAC3CN,EAAQuR,OAAOP,EAAM5M,EAAIjB,EAAS/C,MAAO4Q,EAAM1M,EAAInB,EAAS7C,QAC5DN,EAAQuR,OAAOP,EAAM5M,EAAIjB,EAAS/C,MAAO4Q,EAAM1M,GAC/CtE,EAAQuR,OAAOP,EAAM5M,EAAG4M,EAAM1M,GAGlCtE,EAAQwR,YACRxR,EAAQyR,SACRzR,EAAQ0R,OAoNGjT,oBAjBf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLwP,kBAAmB,SAACrQ,GAAD,OAAqEa,EAASV,EAAgBH,KACjH4T,eAAgB,SAAC5T,GAAD,OAA6Ba,EjBvL5C,SAAsBb,GACzB,MAAO,CACHC,KC5FsB,iBD6FtBD,QAASA,GiBoL2C6T,CAAa7T,KACnEc,WAAY,SAACd,GAAD,OAAoCa,EAASX,EAASF,KAClEwJ,eAAgB,kBAAM3I,EjB7PjB,CACHZ,KCjCqB,gBDkCrBD,QAAS,MiB4PX8T,2BAA4B,SAAC9T,GAAD,OAAiCa,EjB5K5D,SAAkCb,GACrC,MAAO,CACHC,KCxGmC,8BDyGnCD,QAASA,GiByK2DqJ,CAAyBrJ,KAC/F+T,uBAAwB,SAAC/T,GAAD,OAAiCa,EjBpLxD,SAA8Bb,GACjC,MAAO,CACHC,KClG+B,0BDmG/BD,QAASA,GiBiLuDuJ,CAAqBvJ,QAI9EU,EAjNK,SAAC1B,GACjB,IAAI+B,EAAmCC,qBAAWC,IAC5CyL,EAAe3L,EAAQ4L,wBAFa,EAGE1J,oBAAS,GAHX,mBAGnC2J,EAHmC,KAGnBC,EAHmB,OAId5J,mBAAS,CAACoD,EAAG,EAAGE,EAAG,IAJL,mBAInCuG,EAJmC,KAI3BC,EAJ2B,OAKV9J,oBAAS,kBA/C7C,SAA0BzC,EAAgBkM,GACtC,MAAO,CACHrG,EAAG7F,EAAO4D,eAAgBgB,SAASiB,EACnCE,EAAG/F,EAAO4D,eAAgBgB,SAASmB,EAAImG,EAAaM,IACpD3K,MAAO7B,EAAO4D,eAAgBkB,EAC9B/C,OAAQ/B,EAAO4D,eAAgBoB,GA0CYyH,CAAiBjO,EAAMwB,OAAQkM,MALpC,mBAKnCtH,EALmC,KAKzB8H,EALyB,KAMtC8G,EAAcjK,iBAAO,MACrBkK,EAAYlK,iBAAO,MAEvB,SAASqH,EAAa/K,EAAWE,EAAWlE,EAAeE,GACvD,IAAMmK,EAAe3L,EAAQ4L,wBAC7BO,EAAY,CAAC7G,IAAGE,IAAGlE,QAAOE,WAC1BvD,EAAMqR,kBAAkB,CAAChL,SAAU,CAACgB,EAAGA,EAAGE,EAAGA,EAAImG,EAAaM,KAAMzH,SAAUlD,EAAOoD,UAAWlD,IAwCpG,SAAS2R,EAA2B7Q,GAC5BA,EAAMiO,mBACVvE,EAAU,CAAC1G,EAAGhD,EAAMgK,QAAUjI,EAASiB,EAAIE,EAAGlD,EAAMiK,QAAUlI,EAASmB,IACvEsG,GAAkB,IAGtB,IAAMsH,EAA6B,SAAU9Q,GACzC,IAAIA,EAAMiO,kBACN1E,EAAgB,CAChB,IACMwH,EADkCH,EAAUxJ,QACfkC,wBAC7BD,EAAe3L,EAAQ4L,wBACvBmB,EAAiBP,GAAalK,EAAMgK,QAAUP,EAAOzG,EAAGhD,EAAMiK,QAAUR,EAAOvG,EAAG6N,EAAiB1H,GACzGQ,EAAY,CAAC7G,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAK3K,MAAO+C,EAAS/C,MAAOE,OAAQ6C,EAAS7C,WAItG8R,EAA2B,SAAUhR,GACvC,IAAIA,EAAMiO,kBACL1E,EAAL,CACA,IAAMF,EAAe3L,EAAQ4L,wBAEvByH,EADmCH,EAAUxJ,QACbkC,wBAChCmB,EAAiBP,GAAalK,EAAMgK,QAAUP,EAAOzG,EAAGhD,EAAMiK,QAAUR,EAAOvG,EAAG6N,EAAiB1H,GACzGQ,EAAY,CAAC7G,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAK3K,MAAO+C,EAAS/C,MAAOE,OAAQ6C,EAAS7C,SACpGvD,EAAM4U,eAAe,CAACxL,MAAO,CAAC/B,EAAGyH,EAAeN,KAAMjH,EAAGuH,EAAed,IAAMN,EAAaM,OAC3FH,GAAkB,KA0CtB,OAvCAvB,qBAAU,WACFtM,EAAMgR,iBAnEd,WACI,IAAMtD,EAAe3L,EAAQ4L,wBAC7BO,EAAY,CACR7G,EAAGrH,EAAMwB,OAAOO,OAAOsB,MAAQ,EAAI,GACnCkE,EAAGvH,EAAMwB,OAAOO,OAAOwB,OAAS,EAAI,GAAKmK,EAAaM,IACtD3K,MAAO,IACPE,OAAQ,MA8DR+R,GACAtV,EAAMuV,iBAAgB,IAE1B,IAAMC,EAAgCP,EAAUxJ,QAC1CxI,EAAUuS,EAAWtS,WAAW,MAStC,OARAsS,EAAWpG,aAAa,QAASpP,EAAMwB,OAAO4D,eAAgBkB,EAAE+I,YAChEmG,EAAWpG,aAAa,SAAUpP,EAAMwB,OAAO4D,eAAgBoB,EAAE6I,YAC7DtG,EAAc/I,EAAMwB,OAAO4D,iBAC3B2O,GAAW/T,EAAMgU,OAAQ/Q,EAAf,eAA4BmD,GAAWpG,EAAMwB,OAAO4D,eAAegF,YAAapK,EAAMwB,OAAO4D,eAAeuD,gBAAiB,CAACtB,EAAG,EAAGE,EAAG,IAErJiO,EAAWvG,iBAAiB,YAAaiG,GACzCxQ,SAASuK,iBAAiB,YAAakG,GACvCzQ,SAASuK,iBAAiB,UAAWoG,GAC9B,WACHG,EAAWtG,oBAAoB,YAAagG,GAC5CxQ,SAASwK,oBAAoB,YAAaiG,GAC1CzQ,SAASwK,oBAAoB,UAAWmG,OAIhD/I,qBAAU,WACN,IAAMoB,EAAwB3L,EAAQ4L,wBACtCO,EAAY,CACR7G,EAAGrH,EAAMwB,OAAO4D,eAAgBgB,SAASiB,EACzCE,EAAGvH,EAAMwB,OAAO4D,eAAgBgB,SAASmB,EAAImG,EAAaM,IAC1D3K,MAAOrD,EAAMwB,OAAO4D,eAAgBkB,EACpC/C,OAAQvD,EAAMwB,OAAO4D,eAAgBoB,MAE1C,IAEHgF,2BAAgB,WACZ,IAAMkC,EAAwB3L,EAAQ4L,wBAChC8H,EAA8BT,EAAYvJ,QAChDgK,EAAS/J,MAAMsC,IAAMN,EAAaM,IAAM,KACxCyH,EAAS/J,MAAM8C,KAAOd,EAAarK,MAAQ,QAI3C,6BACI,yBAAKhD,UAAU,WAAWsL,IAAKqJ,GAC3B,6BACI,2BAAO3U,UAAU,yBAAjB,8CACA,2BAAOA,UAAU,kBACbY,KAAK,QACLT,SAnFpB,SAAoC6D,GAChCrE,EAAM+U,uBAAuB,CAACzK,SAAUjG,EAAM/B,OAAO/B,YAqF7C,6BACI,2BAAOF,UAAU,uBAAjB,sBACA,2BACIY,KAAK,QACLT,SAtFpB,SAAwC6D,GACpCrE,EAAM8U,2BAA2B,CAACxK,SAAUjG,EAAM/B,OAAO/B,SAsFzCF,UAAU,qBAGlB,yBAAKA,UAAU,qBACX,4BACIA,UAAU,WACV2E,QArHpB,SAAsCX,GAClC,IAAMpB,EAAUlB,EAAQmB,WAAW,MAC7BwK,EAAe3L,EAAQ4L,wBAE7B,GAAI5E,EAAc/I,EAAMwB,OAAO4D,gBAAiB,CAC5C2O,GAAW/T,EAAMgU,OAAQ/Q,EAASmD,EAAUpG,EAAMwB,OAAO4D,eAAegF,YAAapK,EAAMwB,OAAO4D,eAAeuD,gBAAiB,CAACtB,EAAGjB,EAASiB,EAAIyM,EAAiBvM,EAAGnB,EAASmB,EAAImG,EAAaM,IAtGzL,IAuGR,IAAItK,EAAaT,EAASU,aAAa,EAAG,EAAG5B,EAAQsB,MAAOtB,EAAQwB,QACpEK,QAAQC,IAAI,iCACZ7D,EAAM8B,WAAW,CAACgC,SAAUJ,IAC5B1D,EAAMwK,iBAEVxK,EAAMiF,eAAejB,EAAUkB,aA2GfhD,MAAM,2DAGV,4BACI7B,UAAU,aACV2E,QA7GU,WAC1B3D,EAAUkE,MACVvF,EAAMwK,iBACNxK,EAAMiF,eAAejB,EAAUkB,aA2GfhD,MAAM,2CAIlB,4BACI7B,UAAU,oBACVsL,IAAKsJ,EACLvJ,MAAO,CACHsC,IAAI,GAAD,OAAK5H,EAASmB,EAAd,MACHiH,KAAK,GAAD,OAAKpI,EAASiB,EAAd,MACJhE,MAAM,GAAD,OAAK+C,EAAS/C,MAAd,MACLE,OAAO,GAAD,OAAK6C,EAAS7C,OAAd,SAKd,kBAAC,GAAD,CACI4M,IAAK/J,EACL0K,WAAYsB,EACZnR,KAAMyO,GAAWe,QACjBO,cAAehR,EAAMgR,gBAEzB,kBAAC,GAAD,CACIb,IAAK/J,EACL0K,WAAYsB,EACZnR,KAAMyO,GAAWiB,SACjBK,cAAehR,EAAMgR,gBAEzB,kBAAC,GAAD,CACIb,IAAK/J,EACL0K,WAAYsB,EACZnR,KAAMyO,GAAWgB,WACjBM,cAAehR,EAAMgR,gBAEzB,kBAAC,GAAD,CACIb,IAAK/J,EACL0K,WAAYsB,EACZnR,KAAMyO,GAAWkB,YACjBI,cAAehR,EAAMgR,oB,MC3OtBtP,oBANf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,UAIrBE,EA3BA,SAAC1B,GACZ,IAAIiV,EAAYlK,iBAAO,MAQvB,OAPAuB,qBAAU,WAC4B2I,EAAUxJ,QACvBvI,WAAW,MACxBqM,aAAavP,EAAMwB,OAAOO,OAAQ,EAAG,EAAG,EAAG,EAAG/B,EAAMwB,OAAOO,OAAOsB,MAAOrD,EAAMwB,OAAOO,OAAOwB,QACrGvD,EAAM0V,QAAQT,MAId,6BACI,4BACItJ,IAAKsJ,EACL5R,MAAOrD,EAAMwB,OAAOO,OAAOsB,MAC3BE,OAAQvD,EAAMwB,OAAOO,OAAOwB,OAC5BlD,UAAU,e,MCzBX,SAASsV,GAAU1B,EAA+B2B,EAA6BC,GAE1F,IAAIzO,EAASjH,KAAK+H,IAAI+L,EAAM5M,EAAGuO,EAAIvO,EAAGwO,EAAOxS,OACzCiE,EAASnH,KAAKyO,IAAIiH,EAAOtO,EAAGpH,KAAK+H,IAAI2N,EAAOtO,EAAIsO,EAAOtS,OAAQqS,EAAIrO,EAAG0M,EAAM1M,IAC5EuO,EAAO3V,KAAK+H,IAAI/H,KAAKyO,IAAIgH,EAAIvO,EAAG4M,EAAM5M,GAAIwO,EAAOxS,OACjDmE,EAAOrH,KAAK+H,IAAIZ,EAASnH,KAAKgI,IAAIyN,EAAIrO,EAAI0M,EAAM1M,GAAIsO,EAAOtO,EAAIsO,EAAOtS,QAE1E,MAAQ,CACJ6D,OAAQA,EACRE,OAAQA,EACRwO,KAAMA,EACNtO,KAAMA,EACNnE,MAAOyS,EAAO1O,EACd7D,OAAQiE,EAAOF,GC+HR5F,oBAdf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLkU,aAAc,SAAC/U,GAAD,OAAmDa,EpB/HhE,SAAoBb,GACvB,MAAO,CACHC,KCTmB,cDUnBD,QAASA,GoB4H+D8G,CAAW9G,KACrFgV,aAAc,kBAAMnU,EpBxHf,CACHZ,KCfmB,cDgBnBD,QAAS,MoBuHXyM,0BAA2B,kBAAM5L,EpBlH5B,CACHZ,KCrB2B,sBDsB3BD,QAAS,SoBoHFU,EA3He,SAAC1B,GAE3B,IAAIiW,EAASlL,iBAAO,MAFmC,EAInB9G,mBAAS,CACzCiS,KAAM,CACF7O,EAAG,EACHE,EAAG,GAEPqG,gBAAgB,EAChBnC,QAAS,CACLpE,EAAG,EACHE,EAAG,KAZ4C,mBAIhD4O,EAJgD,KAIpCC,EAJoC,KAgBvD,SAASC,EAAsBhS,GAC3B,IAAMqJ,EAAe3L,EAAQ4L,wBACzBtJ,EAAMiK,QAAUZ,EAAaM,KAC7B3J,EAAMiO,mBACNtS,EAAMwB,OAAO4D,gBAAkB4B,EAAehH,EAAMwB,OAAO4D,iBAC3DpF,EAAMyN,4BAEV2I,EAAc,2BACPD,GADM,IAETD,KAAM,CACF7O,EAAGhD,EAAMgK,QACT9G,EAAGlD,EAAMiK,SAEbV,gBAAgB,EAChBnC,QAAS,CACLpE,EAAGhD,EAAMgK,QACT9G,EAAGlD,EAAMiK,aAKrB,IAAMgI,EAAwB,SAAUjS,GAChC8R,EAAWvI,gBACXwI,EAAc,2BACPD,GADM,IAET1K,QAAS,CACLpE,EAAGhD,EAAMgK,QACT9G,EAAGlD,EAAMiK,aAMnBiI,EAAsB,SAAUlS,GAClC,GAAK8R,EAAWvI,eAAhB,CACA,GAAKvJ,EAAMgK,UAAY8H,EAAWD,KAAK7O,GAAOhD,EAAMiK,UAAY6H,EAAWD,KAAK3O,EAAI,CAChF,IAAMmG,EAAe3L,EAAQ4L,wBACvB6I,EAAkBb,GACpB,CAAEtO,EAAG8O,EAAWD,KAAK7O,EAAGE,EAAG4O,EAAWD,KAAK3O,GAC3C,CAAEF,EAAGhD,EAAMgK,QAAS9G,EAAGlD,EAAMiK,SAC7BZ,GAEEtG,EAASoP,EAAgBpP,OACzBE,EAASkP,EAAgBlP,OACzBwO,EAAOU,EAAgBV,KACvBtO,EAAOgP,EAAgBhP,KAC7BjG,EAAavB,EAAMwB,QACnBxB,EAAM+V,aAAa,CAAC/N,WAAY,CAACX,EAAGD,EAAQG,EAAGD,EAASoG,EAAaM,KAAM/F,SAAU,CAACZ,EAAGyO,EAAMvO,EAAGC,EAAOkG,EAAaM,OACtHhO,EAAMgW,eAGVI,EAAc,2BACPD,GADM,IAETvI,gBAAgB,OAIpB7L,EAAmCC,qBAAWC,IA4BlD,OA1BAqK,qBAAU,WACN,GAAKvK,EAAL,CACA,IAAM2L,EAAe3L,EAAQ4L,wBAC7BjJ,SAASuK,iBAAiB,YAAaoH,GACvC3R,SAASuK,iBAAiB,YAAaqH,GACvC5R,SAASuK,iBAAiB,UAAWsH,GACrC,IAAME,EAAoBd,GACtB,CAAEtO,EAAG8O,EAAWD,KAAK7O,EAAGE,EAAG4O,EAAWD,KAAK3O,GAC3C,CAAEF,EAAG8O,EAAW1K,QAAQpE,EAAGE,EAAG4O,EAAW1K,QAAQlE,GACjDmG,GAGEgJ,EAAmBT,EAAOxK,QAOhC,OANAiL,EAAIhL,MAAM2B,QAAW8I,EAAWvI,eAAkB,QAAU,OAC5D8I,EAAIhL,MAAMsC,IAAMyI,EAAkBnP,OAAO+H,WACzCqH,EAAIhL,MAAM8C,KAAOiI,EAAkBrP,OAAOiI,WAC1CqH,EAAItH,aAAa,QAASqH,EAAkBpT,MAAMgM,YAClDqH,EAAItH,aAAa,SAAUqH,EAAkBlT,OAAO8L,YAE7C,WACH3K,SAASwK,oBAAoB,YAAamH,GAC1C3R,SAASwK,oBAAoB,YAAaoH,GAC1C5R,SAASwK,oBAAoB,UAAWqH,QAK5C,yBACI5K,IAAKsK,EACL5V,UAAU,iBCuBPqB,oBAdf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACL2I,eAAgB,kBAAM3I,ErBtGjB,CACHZ,KCjCqB,gBDkCrBD,QAAS,MqBqGX2V,iBAAkB,SAAC3V,GAAD,OAAmDa,ErB1CpE,SAAwBb,GAC3B,MAAO,CACHC,KCtFwB,mBDuFxBD,QAASA,GqBuCmEoH,CAAepH,KAC7FyM,0BAA2B,kBAAM5L,ErBtH5B,CACHZ,KCrB2B,sBDsB3BD,QAAS,SqBwHFU,EA7Ha,SAAC1B,GACzB,IAAI+B,EAAmCC,qBAAWC,IAC9CgU,EAASlL,iBAAO,MAF8B,EAId9G,mBAAS,CACzCiS,KAAM,CACF7O,EAAG,EACHE,EAAG,GAEPqG,gBAAgB,EAChBnC,QAAS,CACLpE,EAAG,EACHE,EAAG,KAZuC,mBAI3C4O,EAJ2C,KAI/BC,EAJ+B,KAgBlD,SAASQ,EAAmBvS,GACxB,IAAIrE,EAAMwB,OAAO4D,eAAjB,CACA,IAAMsI,EAAe3L,EAAQ4L,wBACzBtJ,EAAMiK,QAAUZ,EAAaM,KACjCoI,EAAc,2BACPD,GADM,IAETD,KAAM,CACF7O,EAAGhD,EAAMgK,QACT9G,EAAGlD,EAAMiK,SAEbV,gBAAgB,EAChBnC,QAAS,CACLpE,EAAGhD,EAAMgK,QACT9G,EAAGlD,EAAMiK,aAKrB,IAAMuI,EAAqB,SAAUxS,GAC7B8R,EAAWvI,gBACXwI,EAAc,2BACPD,GADM,IAET1K,QAAS,CACLpE,EAAGhD,EAAMgK,QACT9G,EAAGlD,EAAMiK,aAMnBwI,EAAmB,SAAUzS,GAC/B,GAAK8R,EAAWvI,eAAhB,CACA,GAAKvJ,EAAMgK,UAAY8H,EAAWD,KAAK7O,GAAOhD,EAAMiK,UAAY6H,EAAWD,KAAK3O,EAAI,CAChF,IAAMmG,EAAe3L,EAAQ4L,wBACvB6I,EAAkBb,GACpB,CAAEtO,EAAG8O,EAAWD,KAAK7O,EAAGE,EAAG4O,EAAWD,KAAK3O,GAC3C,CAAEF,EAAGhD,EAAMgK,QAAS9G,EAAGlD,EAAMiK,SAC7BZ,GAEEtG,EAASoP,EAAgBpP,OAAS,EAClCE,EAASkP,EAAgBlP,OAAS,EAClCwO,EAAOU,EAAgBV,KAAO,EAC9BtO,EAAOgP,EAAgBhP,KAAO,EACpCjG,EAAavB,EAAMwB,QACnBxB,EAAM2W,iBAAiB,CAAC3O,WAAY,CAACX,EAAGD,EAAQG,EAAGD,EAASoG,EAAaM,KAAM/F,SAAU,CAACZ,EAAGyO,EAAMvO,EAAGC,EAAOkG,EAAaM,OAG9HoI,EAAc,2BACPD,GADM,IAETvI,gBAAgB,KAEpB5N,EAAMiF,eAAejB,EAAUqH,wBAoCnC,OAjCAiB,qBAAU,WACFtM,EAAMwB,OAAO4D,gBAAkB4B,EAAehH,EAAMwB,OAAO4D,kBAC3DxB,QAAQC,IAAI,wDACZ7D,EAAMyN,+BAEX,IAEHnB,qBAAU,WACN,GAAKvK,EAAL,CACA,IAAM2L,EAAe3L,EAAQ4L,wBAC7BjJ,SAASuK,iBAAiB,YAAa2H,GACvClS,SAASuK,iBAAiB,YAAa4H,GACvCnS,SAASuK,iBAAiB,UAAW6H,GACrC,IAAML,EAAoBd,GACtB,CAAEtO,EAAG8O,EAAWD,KAAK7O,EAAGE,EAAG4O,EAAWD,KAAK3O,GAC3C,CAAEF,EAAG8O,EAAW1K,QAAQpE,EAAGE,EAAG4O,EAAW1K,QAAQlE,GACjDmG,GAGEgJ,EAAmBT,EAAOxK,QAMhC,OALAiL,EAAIhL,MAAM2B,QAAW8I,EAAWvI,eAAkB,QAAU,OAC5D8I,EAAIhL,MAAMsC,IAAMyI,EAAkBnP,OAAO+H,WACzCqH,EAAIhL,MAAM8C,KAAOiI,EAAkBrP,OAAOiI,WAC1CqH,EAAItH,aAAa,QAASqH,EAAkBpT,MAAMgM,YAClDqH,EAAItH,aAAa,SAAUqH,EAAkBlT,OAAO8L,YAC7C,WACH3K,SAASwK,oBAAoB,YAAa0H,GAC1ClS,SAASwK,oBAAoB,YAAa2H,GAC1CnS,SAASwK,oBAAoB,UAAW4H,QAM5C,yBACInL,IAAKsK,EACL5V,UAAU,qB,eC9DPqB,oBAZf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACLC,WAAY,SAACd,GAAD,OAAoCa,EAASX,EAASF,QAIzDU,EA9Cf,SAAoB1B,GAChB,IAAI+B,EAAmCC,qBAAWC,IA0BlD,OACI,yBAAK5B,UAAU,4BAA4B2E,QA1BnB,WACxBpB,QAAQC,IAAI,kBAAmB7D,EAAM+W,WACrC,IAAMvU,EAAQ,IAAIC,MAClBD,EAAMQ,IAAMhD,EAAM+W,UAClBvU,EAAMwU,YAAc,YACpB,IAAI/T,EAAUlB,EAAQmB,WAAW,MACjCV,EAAMW,OAAS,WACX,IAAIC,EAAaZ,EAAMa,MACnBC,EAAcd,EAAMe,OACpBH,EAAapD,EAAMwB,OAAOO,OAAOsB,OAASC,EAActD,EAAMwB,OAAOO,OAAOwB,OACxDX,OAAOY,QAAQ,4eAE/BzB,EAAQsB,MAAQD,EAChBrB,EAAQwB,OAASD,EACjBL,EAASQ,UAAUjB,EAAO,EAAG,IAGjCS,EAASQ,UAAUjB,EAAO,EAAG,GACjC,IAAIkB,EAAaT,EAASU,aAAa,EAAG,EAAG5B,EAAQsB,MAAOtB,EAAQwB,QACpEK,QAAQC,IAAI,gCACZtC,EAAavB,EAAMwB,QACnBxB,EAAM8B,WAAW,CAACgC,SAAUJ,OAM5B,yBAAKV,IAAKhD,EAAMiX,MAAMjU,IAAIkU,KAAM7T,MAAM,MAAME,OAAO,YCxCzD4T,GAASC,aAAa,4DAkEbC,OA5Df,SAAiBrX,GAAsB,IAG9BsX,GAH6B,SAG7BA,OAH6B,eAG7BA,IAH6B,cAG7BA,MAH6B,KAI1BA,EAAOC,KAAf,IAKIC,EAT8B,EAKRvT,mBAAS,IALD,mBAK3BwT,EAL2B,KAKpBC,EALoB,OAMVzT,mBAAS,GANC,mBAM3B0T,EAN2B,KAMrBC,EANqB,OAOK3T,mBAAS,IAPd,mBAO3B4T,EAP2B,KAOdC,EAPc,KA8B5BC,EAAe,WACJ,IAATN,GACJN,GAAOa,OAAOC,OAAO,CAAER,QAAOS,SAAU,EAAGP,KAAMA,IAAOhL,MAAK,SAAAqL,IAtBjE,SAAmBA,GACZ,UAAWA,IAEVR,EAAgBQ,EAAOA,OAAOtX,KAAI,SAACuW,EAAOrW,GACtC,OACI,kBAAC,GAAD,CACIC,IAAKD,EACLqW,MAAOA,EACPF,UAAWE,EAAMjU,IAAImV,aAKrCL,EAAgBN,GAUZY,CAAUJ,OAQlB,OAJA1L,qBAAU,WACNyL,MACD,CAACJ,IAGA,yBAAKtX,UAAU,oBACX,2BACIgY,YAAY,iCACZ7X,SAAU,SAAA4B,GAAMsV,EAAStV,EAAEE,OAAO/B,OAAQqX,EAAQ,MAEtD,4BAAQ5S,QAAS+S,EAAc1X,UAAU,kCAAzC,kCACA,yBAAK2E,QAAS,SAAA5C,GAAC,OAAIpC,EAAMiF,eAAejB,EAAUkB,aAAa7E,UAAU,kCACzE,yBAAKA,UAAU,uCACVwX,GAEL,4BACI7S,QA3BY,WACpB4S,EAAQD,EAAO,IA2BPtX,UAAU,wCAFd,wBC1CC4B,GAAgBqW,IAAMC,cAAc,MAqFlC7W,oBAbf,SAAyBC,GACrB,MAAO,CACHH,OAAQG,EAAMC,cAAcJ,WAIpC,SAA4BK,GACxB,MAAO,CACL2I,eAAgB,kBAAM3I,ExBlEjB,CACHZ,KCjCqB,gBDkCrBD,QAAS,MwBiEX6J,YAAa,SAAC7J,GAAD,OAAmCa,EAASd,EAAUC,QAI1DU,EAnFf,SAAyB1B,GAA8B,IAAD,EACtBiE,mBAASnE,EAAOoJ,QADM,mBAC3C8K,EAD2C,KACnCwE,EADmC,OAERvU,oBAAS,GAFD,mBAE3C+M,EAF2C,KAE5ByH,EAF4B,OAIhBxU,mBAASD,EAAUkB,YAJH,mBAI3CwT,EAJ2C,KAIhCC,EAJgC,OAMtB1U,mBAAS,MANa,mBAM3ClC,EAN2C,KAMnC6W,EANmC,KAS5C3T,EAAiB,SAAC4T,GACpBF,EAAaE,IAYjB,OACI,kBAAC5W,GAAc6W,SAAf,CAAwBvY,MAAOwB,GAC3B,6BACK2W,GAAa1U,EAAU6H,WACxB,kBAAC,EAAD,CACIT,YAVhB,SAAqBD,GACjBqN,EAAUrN,IAUElG,eAAgBA,IAIlBjF,EAAMwB,OAAO4D,gBAAkB4B,EAAehH,EAAMwB,OAAO4D,iBAC5D,kBAAC,GAAD,MAGCpF,EAAMwB,OAAO4D,gBAAkByD,EAAa7I,EAAMwB,OAAO4D,iBAC3D,kBAAC,GAAD,CAAYH,eAAgBA,IAG1BjF,EAAMwB,OAAO4D,gBAAkB2D,EAAc/I,EAAMwB,OAAO4D,iBAC5D,kBAAC,GAAD,CACI4O,OAAQA,EACRhD,cAAeA,EACfuE,gBA/BhB,SAAyBwD,GACrBN,EAAiBM,IA+BL9T,eAAgBA,IAGnByT,GAAa1U,EAAU6H,UACtB,kBAAC,GAAD,CAAO5G,eAAgBA,IACvB,kBAAC,GAAD,CAAQyQ,QA3CJ,SAAC/J,GAAD,OAAciN,EAAUjN,EAAIF,YA8ChCiN,GAAa1U,EAAUkB,YACzB,kBAAC,GAAD,MAGCwT,GAAa1U,EAAU8H,eACxB,kBAAC,GAAD,CAAqB7G,eAAgBA,IAGpCyT,GAAa1U,EAAU4H,qBACxB,kBAAC,GAAD,CAAS3G,eAAgBA,SCrC1BvD,mBAAQ,MANvB,SAA4BG,GAC1B,MAAO,CACLmX,OAAQ,SAAChY,GAAD,OAAkCa,EAAST,EAAWJ,QAInDU,EArCf,SAAa1B,GAEX,IAAMiZ,EAAe,SAAC5U,GACpB,GAAIA,EAAM6U,UAA2B,IAAf7U,EAAM8U,OAAgC,IAAjB9U,EAAM+U,UAC3C/X,EAAU8D,OAAQ,CACpB,IAAM3D,EvBZP,WACN,IAAMA,EAAiBH,EAAUkE,MAIjC,OAHAjE,EAAUG,KAAKD,GACfoC,QAAQC,IAAI,oBAAqBxC,EAAU8D,QAC3CvB,QAAQC,IAAI,oBAAqBvC,EAAU6D,QACpC3D,EuBOuB6X,GACvBrZ,EAAMgZ,OAAO,CAACxT,UAAWhE,IAG7B,GAAI6C,EAAM6U,UAA2B,IAAf7U,EAAM8U,OAAgC,IAAjB9U,EAAM+U,UAC3C9X,EAAU6D,OAAQ,CACpB,IAAM3D,EvBTNF,EAAUiE,MuBUVvF,EAAMgZ,OAAO,CAACxT,UAAWhE,MAY/B,OAPA8K,qBAAU,WAEN,OADA5H,SAASuK,iBAAiB,WAAW,SAAA5K,GAAK,OAAI4U,EAAa5U,MACpD,WACHK,SAASwK,oBAAoB,UAAW+J,OAK9C,yBAAK5Y,UAAU,OACb,kBAAC,GAAD,UC1BciZ,QACW,cAA7B1W,OAAO2W,SAASC,UAEe,UAA7B5W,OAAO2W,SAASC,UAEhB5W,OAAO2W,SAASC,SAASC,MACvB,2D,YCVFjY,GAAiB,CAEjBO,OAAQ4D,EAAY,IAAK,KACzBP,eAAgB,MAGhBsU,GAAe,CACflY,OAAO,eAAKA,KCXDmY,oBAAgB,CAC3B/X,cDaW,WAA4D,IAApCD,EAAmC,uDAA3B+X,GAAcE,EAAa,uCACtE,OAAOA,EAAO3Y,MACV,I1BpBmB,c0BqBf,MAAO,CACHO,OAAQsG,EAAWnG,EAAMH,OAAQoY,EAAO5Y,UAEhD,I1BvBmB,c0BwBf,MAAO,CACHQ,OAAQsI,EAAWnI,EAAMH,OAAQoY,EAAO5Y,UAEhD,I1B1B2B,sB0B2BvB,MAAO,CACHQ,OAAQ0F,EAAwBvF,EAAMH,OAAQoY,EAAO5Y,UAE7D,I1B7Be,U0B8BX,MAAO,CACHQ,OAAQ2H,EAAcxH,EAAMH,OAAQoY,EAAO5Y,UAEnD,I1BhCqB,gB0BiCjB,MAAO,CACHQ,OAAQoH,EAAajH,EAAMH,OAAQoY,EAAO5Y,UAElD,I1BnCkB,a0BoCd,MAAO,CACHQ,OAAQT,EAAUY,EAAMH,OAAQoY,EAAO5Y,UAE/C,I1BtCoB,e0BuChB,MAAO,CACHQ,OAAQ2I,EAAYxI,EAAMH,OAAQoY,EAAO5Y,UAEjD,I1BzCW,M0B0CP,MAAO,CACHQ,OAAQqI,EAAIlI,EAAMH,OAAQoY,EAAO5Y,UAEzC,I1B5CY,O0B6CR,MAAO,CACHQ,OAAQuI,EAAKpI,EAAMH,OAAQoY,EAAO5Y,UAE1C,I1B/CqB,gB0BgDjB,MAAO,CACHQ,OAAQ2E,EAAaxE,EAAMH,OAAQoY,EAAO5Y,UAElD,I1BlDiB,Y0BmDb,MAAO,CACHQ,OAAQN,EAASS,EAAMH,OAAQoY,EAAO5Y,UAE9C,I1BrDyB,oB0BsDrB,MAAO,CACHQ,OAAQL,EAAgBQ,EAAMH,OAAQoY,EAAO5Y,UAErD,I1BxDqB,gB0ByDjB,MAAO,CACHQ,OAAQ6H,EAAY1H,EAAMH,OAAQoY,EAAO5Y,UAEjD,I1B3DwB,mB0B4DpB,MAAO,CACHQ,OAAQ4G,EAAezG,EAAMH,OAAQoY,EAAO5Y,UAEpD,I1B5DmC,8B0B6D/B,MAAO,CACHQ,OAAQ6I,EAAyB1I,EAAMH,OAAQoY,EAAO5Y,UAE9D,I1BjE+B,0B0BkE3B,MAAO,CACHQ,OAAQ+I,EAAqB5I,EAAMH,OAAQoY,EAAO5Y,UAE1D,I1BnEY,O0BuEZ,I1BtEc,S0BuEV,MAAO,CACHQ,OAAQJ,EAAWO,EAAMH,OAAQoY,EAAO5Y,UAEhD,QACI,OAAOW,EAEf,OAAOA,KErEX,IAAMkY,GAAQC,aAAYC,GAAaC,cAVvC,SAA0BH,GACxB,OAAO,SAASI,GACd,OAAO,SAASL,GAGd,OAFeK,EAAKL,SAUpBM,GACJ,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAMM,WAAP,KACC,kBAAC,GAAD,QAKLC,IAASC,OAAOH,GAAKxV,SAAS4V,eAAe,SH8FvC,kBAAmB/N,WACrBA,UAAUgO,cAAcC,MACrB7N,MAAK,SAAA8N,GACJA,EAAaC,gBAEd1N,OAAM,SAAA2N,GACL/W,QAAQ+W,MAAMA,EAAMC,c","file":"static/js/main.ece43c4d.chunk.js","sourcesContent":["export enum Figure {\r\n\ttriangle,\r\n\trectangle,\r\n\tcircle\r\n}\r\n\r\nexport type Point = {\r\n\tx: number,\r\n\ty: number,\r\n}\r\n\r\nexport type EditorObject = {\r\n\tposition: Point,\r\n\tw: number,\r\n\th: number,\r\n}\r\n\r\nexport type SelectedArea = EditorObject & {\r\n\ttype: 'selectedArea',\r\n\tpixelArray: ImageData\r\n}\r\n\r\nexport type TextObject = EditorObject & {\r\n\ttype: 'text',\r\n\ttext: string,\r\n\tfontFamily: string,\r\n\tfontSize: number,\r\n\tcolor: string,\r\n\tfontWeight: number,\r\n\tfontStyle: string,\r\n\ttextDecoration: string,\r\n\tbackgroundColor: string\r\n}\r\n\r\nexport type ShapeObject = EditorObject & {\r\n\ttype: Figure,\r\n\tbackgroundColor: string,\r\n\tborderColor: string,\r\n}\r\n\r\nexport type Editor = {\r\n\tcanvas: ImageData,\r\n\tselectedObject: TextObject | ShapeObject | SelectedArea | null,\r\n}\r\n\r\n\r\n//export {FilterType, Point, EditorObject, SelectedArea, TextObject, ShapeObject, Editor}","import React from 'react';\r\nimport './SelectFilter.css';\r\n\r\ninterface SelectProps {\r\n    label: string,\r\n    value: string,\r\n    onChange: (event: any) => void,\r\n    options: Array<Object>;\r\n}\r\n\r\nconst SelectFilter = (props: SelectProps) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className=\"filterBtn__selectWrapper\" >\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                className=\"filterBtn__select\"\r\n            >\r\n                {props.options.map((option: any, index: any) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}    \r\n            </select>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectFilter;","//это функции, которые выдают определенный action\r\nimport { SELECT_AREA, WHITEN_AREA, JOIN_SA_WITH_CANVAS, DROP_SA, DESELECT_AREA, ADD_FIGURE, APPLY_FILTER, CUT,\r\nCROP, CREATE_CANVAS, ADD_IMAGE, RESIZE_EDITOR_OBJ, DROP_TEXT_OBJ, SELECT_TEXT_AREA, DROP_SHAPE_OBJ, SET_FIGURE_BACKGROUND_COLOR,\r\nSET_FIGURE_BORDER_COLOR, ROLL, RESIZE } from './actionTypes';\r\nimport { Editor, Point, Figure } from '../../model';\r\n\r\n\r\nexport function selectArea(payload: {startPoint: Point, endPoint: Point}) {\r\n    return {\r\n        type: SELECT_AREA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function whitenArea() {\r\n    return {\r\n        type: WHITEN_AREA,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function joinSelectionWithCanvas() {\r\n    return {\r\n        type: JOIN_SA_WITH_CANVAS,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function dropSelection(payload: {where: Point}) {\r\n    return {\r\n        type: DROP_SA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function deselectArea() {\r\n    return {\r\n        type: DESELECT_AREA,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function addFigure(payload: {figureType: Figure}) {\r\n    return {\r\n        type: ADD_FIGURE,\r\n        payload: payload\r\n    }\r\n}\r\nexport function applyFilter(payload: {filterColor: string}) {\r\n    return {\r\n        type: APPLY_FILTER,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function crop() {\r\n    return {\r\n        type: CROP,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function cut() {\r\n    return {\r\n        type: CUT,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function createCanvas(payload: {width: number, height: number}) {\r\n    return {\r\n        type: CREATE_CANVAS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function addImage(payload: {newImage: ImageData}) {\r\n    return {\r\n        type: ADD_IMAGE,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function resizeEditorObj(payload: {newPoint: Point, newWidth: number, newHeight: number}) {\r\n    return {\r\n        type: RESIZE_EDITOR_OBJ,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function dropTextObj(payload: {where: Point}) {\r\n    return {\r\n        type: DROP_TEXT_OBJ,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function selectTextArea(payload: {startPoint: Point, endPoint: Point}) {\r\n    return {\r\n        type: SELECT_TEXT_AREA,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function dropShapeObj(payload: {where: Point}) {\r\n    return {\r\n        type: DROP_SHAPE_OBJ,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function setFigureBorderColor(payload: {newColor: string}) {\r\n    return {\r\n        type: SET_FIGURE_BORDER_COLOR,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function setFigureBackgroundColor(payload: {newColor: string}) {\r\n    return {\r\n        type: SET_FIGURE_BACKGROUND_COLOR,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function rollEditor(payload: {newEditor: Editor}) {\r\n    return {\r\n        type: ROLL,\r\n        payload: payload\r\n    }\r\n}    \r\n\r\nexport function resizeCanvas(payload: {newWidth: number, newHeight: number}) {\r\n    return {\r\n        type: RESIZE,\r\n        payload: payload\r\n    }\r\n}   ","export const SELECT_AREA = 'SELECT_AREA';\r\nexport const WHITEN_AREA = 'WHITEN_AREA';\r\nexport const JOIN_SA_WITH_CANVAS = 'JOIN_SA_WITH_CANVAS';\r\nexport const DROP_SA = 'DROP_SA';\r\nexport const DESELECT_AREA = 'DESELECT_AREA';\r\nexport const ADD_FIGURE = 'ADD_FIGURE';\r\nexport const APPLY_FILTER = 'APPLY_FILTER';\r\nexport const CUT = 'CUT';\r\nexport const CROP = 'CROP';\r\nexport const CREATE_CANVAS = 'CREATE_CANVAS';\r\nexport const ADD_IMAGE = 'ADD_IMAGE';\r\nexport const RESIZE_EDITOR_OBJ = 'RESIZE_EDITOR_OBJ';\r\nexport const DROP_TEXT_OBJ = 'DROP_TEXT_OBJ';\r\nexport const SELECT_TEXT_AREA = 'SELECT_TEXT_AREA';\r\nexport const DROP_SHAPE_OBJ = 'DROP_SHAPE_OBJ';\r\nexport const SET_FIGURE_BORDER_COLOR = 'SET_FIGURE_BORDER_COLOR';\r\nexport const SET_FIGURE_BACKGROUND_COLOR = 'SET_FIGURE_BACKGROUND_COLOR';\r\nexport const ROLL = 'ROLL';\r\nexport const RESIZE = 'RESIZE';","import { Editor } from './model';\r\n\r\nexport const undoStack: Array<Editor> = []\r\nexport const redoStack: Array<Editor> = []\r\n\r\nexport function undo() {\r\n\tconst editor: Editor = undoStack.pop()!;\r\n\tredoStack.push(editor);\r\n\tconsole.log('undoStack length ', undoStack.length);\r\n\tconsole.log('redoStack length ', redoStack.length);\r\n\treturn editor;\r\n}\r\n\r\nexport function redo() {\r\n\treturn redoStack.pop();\r\n}\r\n\r\nexport function addToHistory(editor:Editor) {\r\n\tundoStack.push(editor);\r\n\t\r\n}\r\n\r\n","import React, {useContext}  from 'react';\r\nimport {Editor} from '../../model';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport { addImage } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\nimport './buttons.css';\r\n\r\ninterface OpenButtonProps {\r\n    editor: Editor,\r\n    onAddImage: (payload: {newImage: ImageData}) => void\r\n}\r\n\r\nfunction OpenButton(props: OpenButtonProps) {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    \r\n    function onImageChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        let file: any = e!.target!.files![0];\r\n        const image = new Image();\r\n        var binaryData = [];\r\n        binaryData.push(file);\r\n        let url = window.URL.createObjectURL(new Blob(binaryData, {type: \"originalFile.type\"}));\r\n        image.src = url;\r\n        e.target.value = '';\r\n        let context = canvas!.getContext('2d');\r\n        image.onload = () => {\r\n            let imageWidth = image.width;\r\n            let imageHeight = image.height;\r\n            if (imageWidth > props.editor.canvas.width || imageHeight > props.editor.canvas.height) {\r\n                let shouldEnlarge = window.confirm(\"импортируемая фотография больше по размеру холста. Увеличить полотно до размера фотографии?\");\r\n                if (shouldEnlarge) {\r\n                    canvas!.width = imageWidth;\r\n                    canvas!.height = imageHeight;\r\n                    context!.drawImage(image, 0, 0);\r\n                } \r\n            } else\r\n                context!.drawImage(image, 0, 0);\r\n            let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n            console.log('openButton addImage dispatch');\r\n            addToHistory(props.editor);\r\n            props.onAddImage({newImage: newImgData});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"openBtn\">\r\n            <label htmlFor=\"myImage\" className=\"openBtn__label\" title=\"Открыть\">\r\n                </label>\r\n            <input type=\"file\" id=\"myImage\" name=\"myImage\" onChange={onImageChange} className=\"openBtn__input\"/>\r\n        </div>\r\n    );\r\n}    \r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenButton);","import React, { useContext, useState }  from 'react';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\n\r\nfunction SaveButton() {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);      \r\n    const [ext, setExt] = useState('jpeg')\r\n\r\n    function onChangeExt(event: any) {\r\n        setExt(event.target.value);\r\n    }\r\n        \r\n    function handleSubmit(event: React.FormEvent) {\r\n        event.preventDefault();\r\n          let dataURL = canvas!.toDataURL(`image/${ext}`);\r\n            let link = document.createElement(\"a\");\r\n            link.href = dataURL;\r\n            link.download = `my-image.${ext}`;\r\n            link.click();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"saveBtn__form\">\r\n          <div className=\"saveBtn__wrapper\">\r\n            <div >\r\n              <label className=\"saveBtn__label\">\r\n                <select className=\"saveBtn__select\" onChange={onChangeExt}>\r\n                  <option value=\"jpeg\">jpeg</option>\r\n                  <option value=\"png\">png</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" value=\"Сохранить\" className=\"saveBtn\" title=\"Сохранить\"/>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n}\r\n\r\nexport default SaveButton;","export enum Intention {\r\n    HandleSelectedObject, //0\r\n    SelectArea,\r\n    SelectTextObj,\r\n    BrowseRemoteGallery,\r\n    TakePhoto\r\n}","import React from 'react';\r\nimport { Editor } from '../../model';\r\nimport './buttons.css';\r\nimport { undo, undoStack, redoStack } from '../../history';\r\nimport { rollEditor } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface UndoButtonProps {\r\n   onRollBack: (payload: {newEditor: Editor}) => void,\r\n   editor:Editor,\r\n   onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction UndoButton(props: UndoButtonProps) {\r\n    \r\n    function onUndo() {\r\n        props.onSetIntention(Intention.SelectArea);\r\n        if (undoStack.length) {\r\n            if (!props.editor.selectedObject) {\r\n                let currEditor: Editor = {...props.editor};\r\n                redoStack.push(currEditor);\r\n            }\r\n            const prevEditor: Editor = undoStack.pop()!\r\n            props.onRollBack({newEditor: prevEditor});\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <button onClick={onUndo} className=\"undoBtn\" title=\"Отменить\"></button>\r\n    );\r\n}    \r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onRollBack: (payload: {newEditor: Editor}) => dispatch(rollEditor(payload)),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(UndoButton);","import React from 'react';\r\nimport { Editor } from '../../model'\r\nimport './buttons.css';\r\nimport { undoStack, redoStack } from '../../history';\r\nimport { rollEditor } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface RedoButtonProps {\r\n    onRollOn: (payload: {newEditor: Editor}) => void,\r\n    editor: Editor,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction RedoButton(props: RedoButtonProps) {\r\n    \r\n    function onRedo() {\r\n        if (redoStack.length) {\r\n            props.onSetIntention(Intention.SelectArea);\r\n            if (!props.editor.selectedObject) {\r\n                let currEditor: Editor = {...props.editor};\r\n                undoStack.push(currEditor);\r\n            }\r\n            const nextEditor: Editor = redoStack.pop()!;\r\n            props.onRollOn({newEditor: nextEditor});\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <button onClick={onRedo} className=\"redoBtn\" title=\"Повторить\"></button>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onRollOn: (payload: {newEditor: Editor}) => dispatch(rollEditor(payload)),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedoButton);\r\n","import {Figure, Point, EditorObject, SelectedArea, TextObject, ShapeObject, Editor} from './model';\r\nimport EditorComponent from './Components/EditorComponent/EditorComponent';\r\nconst defaultCanvasWidth = 800;\r\nconst defaultCanvasHeight = 600;\r\n//const defaultPxArrLength = 1920000;\r\n\r\nexport function cleanCanvas(width: number = defaultCanvasWidth, height: number = defaultCanvasHeight): ImageData {\r\n\tlet pixelArrayLength: number = width * height * 4;\r\n\tlet bufferArray = new Uint8Array(pixelArrayLength);\r\n\t//crypto.getRandomValues(buffer);\r\n\tfor (let i: number = 0; i < pixelArrayLength; i += 4) {\r\n\t\tbufferArray[i] = 255; \r\n\t\tbufferArray[i + 1] = 255;\r\n\t\tbufferArray[i + 2] = 255;\r\n\t\tbufferArray[i + 3] = 255;\r\n\t}\r\n\treturn new ImageData(new Uint8ClampedArray(bufferArray.buffer), width, height);\r\n}\r\n\r\nexport function createCanvas(editor: Editor, payload: {width: number, height: number}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: cleanCanvas(payload.width, payload.height),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\nexport function resizeCanvas(editor: Editor, payload: {newWidth: number, newHeight: number}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: {\r\n\t\t\t...editor.canvas,\r\n\t\t\twidth: payload.newWidth,\r\n\t\t\theight: payload.newHeight\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function resizeEditorObj(editor: Editor, payload: {newPoint: Point, newWidth: number, newHeight: number}): Editor {\r\n\tif(editor.selectedObject) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.newPoint,\t\r\n\t\t\t\tw: payload.newWidth,\r\n\t\t\t\th: payload.newHeight\r\n\t\t\t}\r\n\t\t} \r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nfunction putImgDataOnCanvas (editor: Editor): ImageData {\r\n\tlet arrayOfIndexesToChange = getIndexes(editor);\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tif (isSelectedArea(editor.selectedObject)) {\r\n\t\tfor (let i: number = 0; i < arrayOfIndexesToChange.length; i++) {\r\n\t\t\tnewPxArray[arrayOfIndexesToChange[i]] = editor.selectedObject.pixelArray.data[i]; \r\n\t\t}\r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\nexport function joinSelectionWithCanvas(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: putImgDataOnCanvas(editor),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\n\r\n// export function resizeCanvas(editor: Editor, newWidth: number, newHeight: number): Editor {\r\n// \treturn {\r\n// \t\t...editor,\r\n// \t\tcanvas: {\r\n// \t\t\t...editor.canvas,\r\n// \t\t\twidth: newWidth,\r\n// \t\t\theight: newHeight\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport function addImage(editor: Editor, payload: {newImage: ImageData}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: payload.newImage,\r\n\t\t//selectedObject: null,\r\n\t}\r\n}\r\n\r\n\r\n\r\n// проверка, картинка больше канваса или нет\r\n// export function isImageNotBiggerThenCanvas(editor: Editor, image: HTMLImageElement): boolean {\r\n// \treturn (image.width <= editor.canvas.width && image.height <= editor.canvas.height)\r\n// }\r\n\r\n// вставка картинки на канвас\r\n// export function pasteImage(editor: Editor, newImage: HTMLImageElement, ctx: CanvasRenderingContext2D): ImageData {\r\n// \tctx.drawImage(newImage, 0, 0);\r\n// \treturn ctx.getImageData(0, 0, editor.canvas.width, editor.canvas.height);\r\n// }\r\n\r\n// export function addImage(editor: Editor, newImage: HTMLImageElement, ctx: CanvasRenderingContext2D): Editor {\r\n// \treturn {\r\n// \t\t...editor,\r\n// \t\tcanvas: pasteImage(editor, newImage, ctx)\r\n// \t}\r\n// }\r\n\r\n//удалить холст\r\nexport function removeCanvas(editor: Editor): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: cleanCanvas(editor.canvas.width, editor.canvas.height),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\n//получить массив индексов элементов в массиве Unit8ClampedArray канваса для пикселей, попавших в выделенную область\r\nexport function getIndexes(editor: Editor): Array<number> {\r\n\tlet arr: Array<number> = [];\r\n\tif (editor.selectedObject !== null) {\r\n\t\tlet startX: number = editor.selectedObject!.position.x;\r\n\t\tlet startY: number = editor.selectedObject!.position.y;\r\n\t\tlet endY: number = startY + editor.selectedObject!.h;\r\n\t\tlet selectionWidth: number = editor.selectedObject!.w; \r\n\t\tlet k: number = 0;\r\n\t\tfor (let i: number = startY; i < endY; i++) {\r\n\t\t\tlet startRowIndex: number = getPxArrIndex(editor, {x: startX, y: i});\r\n\t\t\tfor (let j: number = startRowIndex; j < startRowIndex + selectionWidth * 4; j++) {\r\n\t\t\t\tarr[k] = j;\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\nexport function selectArea(editor: Editor, payload: {startPoint: Point, endPoint: Point}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: {\r\n\t\t\ttype: 'selectedArea',\r\n\t\t\tpixelArray: getImageDataByCoords(editor, payload.startPoint, payload.endPoint), \r\n\t\t\tposition: {\r\n\t\t\t\tx: Math.min(payload.startPoint.x, payload.endPoint.x),\r\n\t\t\t\ty: Math.min(payload.startPoint.y, payload.endPoint.y)\r\n\t\t\t},\r\n\t\t\tw: Math.abs(payload.startPoint.x - payload.endPoint.x), \r\n\t\t\th: Math.abs(payload.startPoint.y - payload.endPoint.y),\r\n\t\t\t\r\n\t\t},\r\n\t\t//canvas: makeSelectionBeTransparent(editor, getIndexes(editor))\r\n\t}\r\n}\r\n\r\nexport function rollEditor(editor: Editor, payload: {newEditor: Editor}): Editor { \r\n\treturn {...payload.newEditor};\r\n}\r\n\r\nexport function selectTextArea(editor: Editor, payload: {startPoint: Point, endPoint: Point}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: {\r\n\t\t\ttype: 'text',\r\n\t\t\tposition: {\r\n\t\t\t\tx: Math.min(payload.startPoint.x, payload.endPoint.x),\r\n\t\t\t\ty: Math.min(payload.startPoint.y, payload.endPoint.y)\r\n\t\t\t},\r\n\t\t\tw: Math.abs(payload.startPoint.x - payload.endPoint.x), \r\n\t\t\th: Math.abs(payload.startPoint.y - payload.endPoint.y),\r\n\t\t\ttext: '',\r\n\t\t\tfontFamily: 'Roboto',\r\n\t\t\tfontSize: 20,\r\n\t\t\tcolor: '#000000',\r\n\t\t\tfontWeight: 400,\r\n\t\t\tfontStyle: 'normal',\r\n\t\t\ttextDecoration: 'none',\r\n\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.8)'\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//снять выделение\r\nexport function deSelectArea(editor: Editor, payload: {}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: null\r\n\t}\r\n}\r\n\r\nexport function addText(editor: Editor, newText: TextObject): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: newText,\r\n\t}\r\n}\r\n\r\n/**User defined Type Guards */\r\nexport function isTextObject(editorObj: any): editorObj is TextObject {\r\n\treturn (editorObj.type == 'text')\r\n}\r\n\r\nexport function isShapeObject(editorObj: any): editorObj is ShapeObject {\r\n\treturn (editorObj.type == Figure.triangle || editorObj.type == Figure.rectangle || editorObj.type == Figure.circle)\r\n} \r\n\r\nexport function isSelectedArea(editorObj: any): editorObj is SelectedArea {\r\n\treturn (editorObj.type == 'selectedArea')\r\n}\r\n\r\nexport function setTextColor(editor: Editor, newTextColor: string): Editor {\r\n\tif (isTextObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\t  color: newTextColor,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor\r\n\t}\r\n}\r\n\r\nexport function setTextSize(editor: Editor, newTextSize: number): Editor {\r\n\tif (isTextObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\t  fontSize: newTextSize,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\n//переместить выделенную область\r\nexport function dropSelection(editor: Editor, payload: {where: Point}): Editor {\r\n\tif (isSelectedArea(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.where,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\n//переместить выделенную область\r\nexport function dropTextObj(editor: Editor, payload: {where: Point}): Editor {\r\n\tif (isTextObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.where,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nexport function dropShapeObj(editor: Editor, payload: {where: Point}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.where,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\n//получить индекс элемента в массиве Unit8ClampedArray, зная его координаты на канвасе\r\nexport function getPxArrIndex(editor: Editor, p: Point): number {\r\n\tlet x: number = p.x;\r\n\tlet y: number = p.y;\r\n\tlet canvasWidth: number = editor.canvas.width;\r\n\tlet index: number = y * 4 * canvasWidth + x * 4; \r\n\treturn index;\r\n}\r\n\r\nexport function getImageDataByCoords(editor: Editor, startPoint: Point, endPoint: Point): ImageData  {\r\n\tlet selectionWidth: number = endPoint.x - startPoint.x;\r\n\tlet selectionHeight: number = endPoint.y - startPoint.y;\r\n\tlet pixelArrayLength: number = selectionWidth * selectionHeight * 4;\r\n\tlet bufferArray = new Uint8Array(pixelArrayLength);\r\n\tlet k: number = 0; \r\n\tfor (let y: number = startPoint.y; y < endPoint.y; y++) {\r\n\t\tfor (let x: number = startPoint.x; x < endPoint.x; x++) {\r\n\t\t\tlet index: number = getPxArrIndex(editor, {x, y})\r\n\t\t\tfor (let i = index; i < index + 4; i++) {\r\n\t\t\t\tbufferArray[k] = editor.canvas.data[i];\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(new Uint8ClampedArray(bufferArray.buffer), selectionWidth, selectionHeight);\r\n}\r\n\r\n\r\n//получить выделенную область канваса в виде ImageData\r\nexport function getImageDataOfSelectedArea(editor: Editor): ImageData  {\r\n\tlet selectedObj: EditorObject = editor.selectedObject!;\r\n\tlet startX: number = selectedObj.position.x - 1;\r\n\tlet startY: number = selectedObj.position.y - 1;\r\n\tlet endY: number = startY + selectedObj.h;\r\n\tlet endX: number = startX + selectedObj.w;\r\n\tlet selectionWidth: number = selectedObj.w;\r\n\tlet selectionHeight: number = selectedObj.h;\r\n\tlet pixelArrayLength: number = selectionWidth * selectionHeight * 4;\r\n\tlet bufferArray = new Uint8Array(pixelArrayLength);\r\n\t\r\n\tlet k: number = 0; \r\n\tfor (let y: number = startY; y < endY; y++) {\r\n\t\tfor (let x: number = startX; x < endX; x++) {\r\n\t\t\tlet index: number = getPxArrIndex(editor, {x, y})\r\n\t\t\tfor (let i = index; i < index + 4; i++) {\r\n\t\t\t\tbufferArray[k] = editor.canvas.data[i];\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(new Uint8ClampedArray(bufferArray.buffer), selectionWidth, selectionHeight);\r\n\t//} \r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//сделать прозрачной выделенную область канваса\r\nexport function makeSelectionBeTransparent(editor: Editor, arr: Array<number>): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tfor (let i: number = 0; i < arr.length; i += 4) {\r\n\t\tnewPxArray[arr[i] + 3] = 0; \r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\nexport function makeSelectionBeWhite(editor: Editor, arr: Array<number>): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tfor (let i: number = 0; i < arr.length; i ++) {\r\n\t\tnewPxArray[arr[i]] = 255; \r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\n//перекрасить в белый цвет все, кроме выделенной области\r\nexport function whitenAllExceptSelection(editor: Editor, arr: Array<number>): ImageData {\r\n\tlet blankImgDataPxArray: Uint8ClampedArray = cleanCanvas(editor.canvas.width, editor.canvas.height).data;\r\n\tif (isSelectedArea(editor.selectedObject)) {\r\n\t\tlet canvasPxArray = editor.selectedObject.pixelArray.data;\t\r\n\t\tfor (let i: number = 0; i < arr.length; i++) {\r\n\t\t\tblankImgDataPxArray[arr[i]] = canvasPxArray[i];\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(blankImgDataPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\n//вырезать выделенную область\r\nexport function cut(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: makeSelectionBeTransparent(editor, getIndexes(editor)),\r\n\t\tselectedObject: null\r\n\t}\r\n}\r\n\r\nexport function whitenArea(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: makeSelectionBeWhite(editor, getIndexes(editor)),\r\n\t}\r\n}\r\n\r\n//обрезать изображение по выделенной области\r\nexport function crop(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: whitenAllExceptSelection(editor, getIndexes(editor)),\r\n\t\tselectedObject: null,\r\n\t}\r\n}\r\n\r\nexport function turnImgDataToGrey(editor: Editor): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tfor (let i = 0; i < newPxArray.length; i += 4) {\r\n\t\tconst average = (newPxArray[i] + newPxArray[i + 1] + newPxArray[i + 2]) / 3\r\n\t\tnewPxArray[i] = average\r\n\t\tnewPxArray[i + 1] = average\r\n\t\tnewPxArray[i + 2] = average\r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\nfunction filter(editor: Editor, filterColor: string): ImageData {\r\n\tlet newPxArray: Uint8ClampedArray = editor.canvas.data.slice();\r\n\tif (filterColor === \"grey\") {\r\n\t\tfor (let i = 0; i < newPxArray.length; i += 4) {\r\n\t\t\tconst average = (newPxArray[i] + newPxArray[i + 1] + newPxArray[i + 2]) / 3\r\n\t\t\tnewPxArray[i] = average\r\n\t\t\tnewPxArray[i + 1] = average\r\n\t\t\tnewPxArray[i + 2] = average\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = 0; i < newPxArray.length; i += 4) {\r\n\t\t\tnewPxArray[i] = filterColor === \"red\" ? newPxArray[i] : 0;\r\n\t\t\tnewPxArray[i + 1] = filterColor === \"green\" ? newPxArray[i + 1] : 0;\r\n\t\t\tnewPxArray[i + 2] = filterColor === \"blue\" ? newPxArray[i + 2] : 0;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// newPxArray[i + 1] = 0;\r\n\t\t\t// newPxArray[i + 2] = 0;\r\n\t\t}\r\n\t}\r\n\treturn new ImageData(newPxArray, editor.canvas.width, editor.canvas.height);\r\n}\r\n\r\n//применить серый фильтр\r\nexport function applyGreyFilter(editor: Editor, payload: Object): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: turnImgDataToGrey(editor),\r\n\t}\t\r\n}\t\r\n\r\nexport function applyFilter(editor: Editor, payload: {filterColor: string}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tcanvas: filter(editor, payload.filterColor),\r\n\t}\t\r\n}\r\n\r\n\r\nexport function addFigure(editor: Editor, payload: {figureType: Figure}): Editor {\r\n\treturn {\r\n\t\t...editor,\r\n\t\tselectedObject: {\r\n\t\t\tposition: {x: editor.canvas.width / 2 - 50, y: editor.canvas.height / 2 - 50}, \r\n\t\t\tw: 100,\r\n\t\t\th: 100,\r\n\t\t\ttype: Figure.circle,\r\n\t\t\tbackgroundColor: '#ffffff00',\r\n\t\t\tborderColor: '#FF0000',\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport function setFigureBackgroundColor(editor: Editor, payload: {newColor: string}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tbackgroundColor: payload.newColor,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nexport function setFigureBorderColor(editor: Editor, payload: {newColor: string}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tborderColor: payload.newColor,\t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor;\r\n\t}\r\n}\r\n\r\nexport function resizeFigure (editor: Editor, payload: {newPosition: Point, newWidth: number, newHeight: number}): Editor {\r\n\tif (isShapeObject(editor.selectedObject)) {\r\n\t\treturn {\r\n\t\t\t...editor,\r\n\t\t\tselectedObject: {\r\n\t\t\t\t...editor.selectedObject,\r\n\t\t\t\tposition: payload.newPosition,\t\r\n\t\t\t\tw: payload.newWidth,\r\n\t\t\t\th: payload.newHeight,\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn editor\r\n\t}\r\n}\r\n\r\n// export function saveImage(editor: Editor): void {\r\n\r\n// }","import React, { useState, useLayoutEffect, useRef } from 'react'\r\nimport { Editor, Figure } from '../../model'\r\nimport './Toolbar.css';\r\nimport SelectFilter from '../Select/SelectFilter';\r\nimport OpenButton from '../Buttons/OpenButton';\r\nimport SaveButton from '../Buttons/SaveButton';\r\nimport UndoButton from '../Buttons/UndoButton';\r\nimport RedoButton from '../Buttons/RedoButton';\r\nimport ResizeBtn from '../Buttons/ResizeBtn';\r\nimport { isSelectedArea, isShapeObject } from '../../actions';\r\nimport { deselectArea, crop, cut, createCanvas, applyFilter, addFigure } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface ToolbarProps {\r\n    editor: Editor,\r\n    onDeselectArea: () => void,\r\n    onApplyFilter: (payload: {filterColor: string}) => void,\r\n    onCut: () => void,\r\n    onCrop: () => void,\r\n    onCreateCanvas: (payload: {width: number, height: number}) => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n    onSetFigure: (figure: Figure) => void,\r\n    onAddFigure: (payload: {figureType: Figure}) => void\r\n}\r\n\r\nfunction Toolbar(props: ToolbarProps) {\r\n    let toolbarRef = useRef(null);\r\n    let showTextBtnRef = useRef(null);\r\n    const [filter, setFilter] = useState(\"grey\");\r\n        \r\n    function selectFilterHandler(event: any): void {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    function filterButtonHandler(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        addToHistory(props.editor);\r\n        props.onApplyFilter({filterColor: filter});\r\n    }\r\n    \r\n    function onClearSelectionHandler() {\r\n        addToHistory(props.editor);\r\n        props.onCut();\r\n    }\r\n\r\n    function onSelectionCropHandler() {\r\n        addToHistory(props.editor);\r\n        props.onCrop();\r\n    }\r\n\r\n    function onClearAllHandler() {\r\n        let shouldremoveCanvas = window.confirm(\"Текущий холст будет удален. Вы подтверждаете удаление холста?\");\r\n        if (shouldremoveCanvas) {\r\n            addToHistory(props.editor);\r\n            props.onCreateCanvas({width: 800, height: 600});\r\n            props.onSetIntention(Intention.SelectArea);\r\n        } \r\n    }\r\n\r\n    const onFigureClicked = (event: any) => {\r\n        const newFigure: Figure = event.target.id;\r\n        props.onSetFigure(newFigure);\r\n        props.onSetIntention(Intention.HandleSelectedObject);\r\n        addToHistory(props.editor);\r\n        props.onAddFigure({figureType: newFigure});\r\n    }\r\n\r\n    const select = <SelectFilter\r\n        label=\"Выберите фильтр\"\r\n        value={filter}\r\n        onChange={selectFilterHandler}\r\n        options={[\r\n            {text: \"серый\", value: \"grey\"},\r\n            {text: \"красный\", value: \"red\"},\r\n            {text: \"зеленый\", value: \"green\"},\r\n            {text: \"синий\", value: \"blue\"},\r\n        ]}\r\n    />\r\n    useLayoutEffect(() => {\r\n        const toolbar: HTMLCanvasElement = toolbarRef.current!;\r\n        toolbar.style.width = props.editor.canvas.width + 'px';\r\n    })\r\n\r\n    return (\r\n        <div className='toolbar' ref={toolbarRef}>\r\n            <OpenButton />\r\n            <button onClick={e => {props.onSetIntention(Intention.BrowseRemoteGallery); props.onDeselectArea();}} title=\"Поиск изображений\" className=\"remoteImgBtn\" />\r\n            <SaveButton />\r\n            <UndoButton onSetIntention={props.onSetIntention}/>\r\n            <RedoButton onSetIntention={props.onSetIntention}/>\r\n            <button onClick={onClearAllHandler} title=\"Новый холст\" className=\"newCanvas_btn\"/>\r\n            {select}\r\n            <button onClick={filterButtonHandler} title=\"Применить фильтр\" className=\"filterBtn\"/>\r\n            <button onClick={e => {props.onSetIntention(Intention.TakePhoto); props.onDeselectArea()}} className=\"webCamBtn\" title=\"Снимок с веб-камеры\"/>\r\n            <button \r\n                ref={showTextBtnRef}\r\n                title=\"Текст\"\r\n                onClick={e => props.onSetIntention(Intention.SelectTextObj)}\r\n                className=\"textBtn\"\r\n            />\r\n            {!(props.editor.selectedObject && (isShapeObject(props.editor.selectedObject) || isSelectedArea(props.editor.selectedObject))) &&\r\n            <div className=\"ShapeBar\">\r\n                <button \r\n                    className=\"circleBtn\"\r\n                    title=\"Круг\"\r\n                    id=\"circle\"\r\n                    onClick={onFigureClicked}\r\n                ></button>\r\n                <button \r\n                    className=\"rectangleBtn\"\r\n                    title=\"Прямоугольник\"\r\n                    id=\"rectangle\"\r\n                    onClick={onFigureClicked}\r\n                ></button>\r\n                <button \r\n                    className=\"triangleBtn\"\r\n                    title=\"Треугольник\"\r\n                    id=\"triangle\"\r\n                    onClick={onFigureClicked}\r\n                ></button>\r\n            </div>  \r\n            }\r\n            {props.editor.selectedObject && isSelectedArea(props.editor.selectedObject) &&\r\n            <div>\r\n            <button onClick={onClearSelectionHandler} className=\"cutBtn\" />\r\n            <button onClick={onSelectionCropHandler} className=\"cropBtn\" />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onApplyFilter: (payload: {filterColor: string}) => dispatch(applyFilter(payload)),\r\n      onCut: () => dispatch(cut()),\r\n      onCrop: () => dispatch(crop()),\r\n      onCreateCanvas: (payload: {width: number, height: number}) => dispatch(createCanvas(payload)),\r\n      onAddFigure: (payload: {figureType: Figure}) => dispatch(addFigure(payload)),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","import React, {useEffect, useRef, useContext}  from 'react';\r\nimport {Editor} from '../../model';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport { addImage } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface VideoProps {\r\n    editor: Editor,\r\n    onAddImage: (payload: {newImage: ImageData}) => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction Video (props: VideoProps) {\r\n    let video: any;\r\n    let cancelPhotoButtonRef = useRef(null);\r\n    let takePhotoButtonRef = useRef(null);\r\n\r\n    function startWebcam() {\r\n        if (navigator.mediaDevices.getUserMedia) {\r\n            //метод  MediaDevices.getUserMedia() запрашивая медиапоток\r\n            //Успешное выполнение промиса передает объект потока( stream ) в качестве параметра функции метода then()\r\n              navigator.mediaDevices.getUserMedia({audio: false, video: true }).then(function (stream) {\r\n              video = document.querySelector(\"#video\");\r\n              if (video) {\r\n                  //stream присваевается свойству srcObject элемента <video>, направляя поток в него\r\n                video.srcObject = stream;\r\n                video.onloadedmetadata = function() {\r\n                  video!.play();\r\n                };\r\n              }\r\n            }).catch(function (err0r) {\r\n                console.log(\"!!!!!\"+err0r);\r\n            });\r\n        }\r\n    }\r\n\r\n    function stopWebCam() {\r\n        video.srcObject.getVideoTracks()[0].stop();\r\n        props.onSetIntention(Intention.SelectArea);\r\n    } \r\n\r\n    function snapshot() {\r\n        if (!canvas) return;\r\n        let context = canvas!.getContext('2d');\r\n        context!.drawImage(video, 0, 0);\r\n        let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n        addToHistory(props.editor);\r\n        props.onAddImage({newImage: newImgData});\r\n        stopWebCam();\r\n    }\r\n    \r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    \r\n    useEffect(() => {\r\n        startWebcam();\r\n        setTimeout(function() {\r\n            const cancelPhotoButton: HTMLCanvasElement = cancelPhotoButtonRef.current!;\r\n            const takePhotoButton: HTMLCanvasElement = takePhotoButtonRef.current!;\r\n            cancelPhotoButton.style.display = 'block';\r\n            takePhotoButton.style.display = 'block';\r\n        }, 2500);\r\n    })\r\n\r\n    return (\r\n        <div style={{position: 'absolute'}}>\r\n            <video id=\"video\" controls autoPlay></video>\r\n            <button onClick={stopWebCam} style={{display: 'none'}} ref={cancelPhotoButtonRef}>cancel</button>\r\n            <button onClick={snapshot} style={{display: 'none'}} ref={takePhotoButtonRef}>take photo</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);","import React from 'react';\r\nimport './SelectFontFamily.css';\r\n\r\ninterface SelectFontSizeProps {\r\n    label: string,\r\n    value: number,\r\n    onChange: (event: any) => void\r\n}\r\n\r\nconst sizes: Array<number> = [];\r\nfor (let i=6; i < 100; i++) {\r\n    sizes[i] = i;\r\n}\r\n\r\nconst SelectFontSize = (props: SelectFontSizeProps) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <label htmlFor={htmlFor} className=\"textbar__fontLabel\">{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                className=\"textbar__fontSelect\"\r\n            >\r\n                {sizes.map((option: any, index: any) => {\r\n                    return (\r\n                        <option\r\n                            value={option}\r\n                            key={index}\r\n                        >\r\n                            {option}\r\n                        </option>\r\n                    )\r\n                })}    \r\n            </select>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectFontSize;","import React, {useRef, useEffect, useState, useContext}  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport './SelectedObject.css';\r\nimport { isSelectedArea } from '../../actions';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport { joinSelectionWithCanvas, dropSelection } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\n\r\ninterface SelectedAreaProps {\r\n  editor: Editor,\r\n  onDropSelection: (payload: {where: Point}) => void,\r\n  onJoinSelectionWithCanvas: () => void,\r\n}\r\n\r\nfunction calculateInitPos (props: SelectedAreaProps, canvasCoords: DOMRect) {\r\n    return {\r\n        x: props.editor.selectedObject!.position.x,\r\n        y: canvasCoords.top + props.editor.selectedObject!.position.y\r\n    }\r\n}\r\n\r\nconst SelectedArea = (props: SelectedAreaProps) => {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    const canvasCoords = canvas!.getBoundingClientRect();\r\n    const [isMousePressed, setIsMousePressed] = useState(false);\r\n    const [offset, setOffset] = useState({x: 0, y: 0});\r\n    const [position, setPosition] = useState(() => {return calculateInitPos(props, canvasCoords)});\r\n    let selCanvasRef = useRef(null);\r\n    \r\n    function onMouseDownSAHandler(event: any) {\r\n        setOffset({x: event.clientX - position.x!, y: event.clientY - position.y!});\r\n        setIsMousePressed(true);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    const adjustCoords = function (left: number, top: number): {left: number, top: number} {\r\n        const selCanv: HTMLCanvasElement = selCanvasRef.current!;\r\n        \r\n        if (left < canvasCoords.left) {\r\n            left = canvasCoords.left;\r\n        }\r\n        if (left + selCanv.width > canvasCoords.right) {\r\n            left = canvasCoords.right - selCanv.width;\r\n        }\r\n        if (top < canvasCoords.top) {\r\n            top = canvasCoords.top;\r\n        }\r\n        if (top + selCanv.height > canvasCoords.bottom) {\r\n            top = Math.max(canvasCoords.bottom - selCanv.height, canvasCoords.top);\r\n        }\r\n        return {left, top}\r\n    }\r\n    \r\n    const onMouseMoveSAHandler = function (event: any) {\r\n        if (isMousePressed) {\r\n            const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y)\r\n            setPosition({x: adjustedCoords.left, y: adjustedCoords.top});\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    const onMouseUpSAHandler = function (event: any) {\r\n        if (!isMousePressed) return;\r\n        const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y);\r\n        setPosition({x: adjustedCoords.left, y: adjustedCoords.top});\r\n        addToHistory(props.editor);\r\n        props.onDropSelection({where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        setIsMousePressed(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        const selCanvas: HTMLCanvasElement = selCanvasRef.current!;\r\n        selCanvas.addEventListener('mousedown', onMouseDownSAHandler);\r\n        document.addEventListener('mousemove', onMouseMoveSAHandler);\r\n        document.addEventListener('mouseup', onMouseUpSAHandler);\r\n        return () => {\r\n            selCanvas.removeEventListener('mousedown', onMouseDownSAHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveSAHandler);\r\n            document.removeEventListener('mouseup', onMouseUpSAHandler);\r\n        };\r\n    });  \r\n    \r\n    useEffect(() => {\r\n        const selCanvas: HTMLCanvasElement = selCanvasRef.current!;\r\n        let selContext = selCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n        selCanvas.style.top = position.y! + 'px';\r\n        selCanvas.style.left = position.x! + 'px';\r\n        selCanvas.setAttribute('width', props.editor.selectedObject!.w.toString());\r\n        selCanvas.setAttribute('height', props.editor.selectedObject!.h.toString());\r\n        if (isSelectedArea(props.editor.selectedObject)) {\r\n            let selAreaImgData: ImageData = props.editor.selectedObject!.pixelArray;\r\n            selContext.putImageData(\r\n                selAreaImgData, \r\n                -1,\r\n                -1,\r\n                0,\r\n                0,\r\n                props.editor.selectedObject.w,\r\n                props.editor.selectedObject.h\r\n            );\r\n        }\r\n    }, []);\r\n \r\n    return (\r\n        <canvas \r\n            ref={selCanvasRef}    \r\n            className=\"selCanvas\"\r\n            style={{\r\n                top: `${position.y}px`,\r\n                left: `${position.x}px`,\r\n            }}\r\n        />\r\n    ) \r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDropSelection: (payload: {where: Point}) => dispatch(dropSelection(payload)),\r\n      onJoinSelectionWithCanvas: () => dispatch(joinSelectionWithCanvas())\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedArea);","import React from 'react';\r\nimport './SelectFontFamily.css';\r\n\r\ninterface SelectFontFamilyProps {\r\n    label: string,\r\n    value: string,\r\n    onChange: (event: any) => void,\r\n    options: Array<string>;\r\n}\r\n\r\nconst SelectFontFamily = (props: SelectFontFamilyProps) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <label htmlFor={htmlFor} className=\"textbar__fontLabel\">{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                className=\"textbar__fontSelect\"\r\n            >\r\n                {props.options.map((option: any, index: any) => {\r\n                    return (\r\n                        <option\r\n                            value={option}\r\n                            key={index}\r\n                            style={{\r\n                                fontFamily: `${option}`\r\n                            }}\r\n                        >\r\n                            {option}\r\n                        </option>\r\n                    )\r\n                })}    \r\n            </select>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectFontFamily;","enum SliderType {\r\n    LeftTop,\r\n    RightTop,\r\n    LeftBottom,\r\n    RightBottom\r\n}\r\n\r\nexport default SliderType; ","import React, { useContext, useEffect, useRef } from 'react'\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport SliderType from './slyderType';\r\nimport './SelectedObject.css';\r\n\r\nconst halfSizeOfSlider: number = 3;\r\nconst borderWidth: number = 2;\r\n\r\ninterface SliderProps {\r\n    pos: {x: number, y: number, width: number, height: number},\r\n    changeSize: (x: number, y: number, width: number, height: number) => void,\r\n    type: SliderType,\r\n    showNewFigure: Boolean,\r\n}\r\n\r\nconst adjustCoords = function (x: number, y: number, canvasCoords: DOMRect): {x: number, y: number} {\r\n\r\n    if (x < canvasCoords.left) {\r\n        x = canvasCoords.left;\r\n    }\r\n    if (x > canvasCoords.right - halfSizeOfSlider - borderWidth) {\r\n        x = canvasCoords.right - halfSizeOfSlider - borderWidth;\r\n    }\r\n    if (y < canvasCoords.top) {\r\n        y = canvasCoords.top;\r\n    }\r\n    if (y > canvasCoords.bottom - halfSizeOfSlider - borderWidth) {\r\n        y = canvasCoords.bottom - halfSizeOfSlider - borderWidth;\r\n    }\r\n    return {x, y}\r\n}\r\n\r\nconst getNewTextAreaParams = function(clientX: number, clientY: number, initPoints: any, canvasCoords: DOMRect, sliderType: SliderType) :\r\n{x: number, y: number, width: number, height: number}\r\n{\r\n    let x: number = 0;\r\n    let y: number = 0;\r\n    let width: number = 0;\r\n    let height: number = 0;\r\n    let adjastedCoords;\r\n    switch (sliderType) {\r\n    case SliderType.LeftTop:\r\n        if (clientX > initPoints.rightTop.x)\r\n            clientX = initPoints.rightTop.x;\r\n        if (clientY > initPoints.leftBottom.y)\r\n            clientY = initPoints.rightTop.y;      \r\n        adjastedCoords = adjustCoords(clientX, clientY, canvasCoords);\r\n        x = adjastedCoords.x;\r\n        y = adjastedCoords.y;\r\n        width = initPoints.rightTop.x - x;\r\n        height = initPoints.leftBottom.y - y;\r\n        break;\r\n    case SliderType.LeftBottom:\r\n        if (clientX > initPoints.rightBottom.x)\r\n            clientX = initPoints.rightBottom.x;\r\n        if (clientY < initPoints.leftTop.y)\r\n            clientY = initPoints.leftTop.y;      \r\n        adjastedCoords =  adjustCoords(clientX, clientY, canvasCoords);\r\n        x = adjastedCoords.x;\r\n        y = initPoints.leftTop.y;\r\n        width = initPoints.rightBottom.x - x;\r\n        height = adjastedCoords.y - y;\r\n        break;\r\n    case SliderType.RightTop:\r\n        if (clientX < initPoints.leftTop.x)\r\n            clientX = initPoints.leftTop.x;\r\n        if (clientY > initPoints.rightBottom.y)\r\n            clientY = initPoints.rightBottom.y;     \r\n        adjastedCoords =  adjustCoords(clientX, clientY, canvasCoords);\r\n        x = initPoints.leftTop.x;\r\n        y = adjastedCoords.y;\r\n        width = adjastedCoords.x - x;\r\n        height = initPoints.rightBottom.y - y;\r\n        break;   \r\n    case SliderType.RightBottom:\r\n        if (clientX < initPoints.leftTop.x)\r\n            clientX = initPoints.leftTop.x;\r\n        if (clientY < initPoints.leftTop.y)\r\n            clientY = initPoints.leftTop.y;  \r\n        adjastedCoords =  adjustCoords(clientX, clientY, canvasCoords);\r\n        x = initPoints.leftTop.x;\r\n        y = initPoints.leftTop.y;\r\n        width = adjastedCoords.x - x;\r\n        height = adjastedCoords.y - y;\r\n        break; \r\n    }\r\n    return {x, y, width, height};\r\n}\r\n\r\nfunction Slider(props: SliderProps) {\r\n    let sliderRef = useRef(null);\r\n    let offset = useRef({x: 0, y: 0});\r\n    let cursorStyle = useRef('');\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n\r\n    let isMousePressed = useRef(false);\r\n\r\n    function onMouseDownSliderHandler(event: any) {\r\n        isMousePressed.current = true;\r\n        event.preventDefault();\r\n    }\r\n        \r\n    const onMouseMoveSliderHandler = function (event: any) {\r\n        if (isMousePressed.current) {\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const initPoints = {\r\n                leftTop: {x: props.pos.x, y: props.pos.y},\r\n                leftBottom: {x: props.pos.x, y: props.pos.y + props.pos.height},\r\n                rightTop: {x: props.pos.x + props.pos.width, y: props.pos.y},\r\n                rightBottom: {x: props.pos.x + props.pos.width, y: props.pos.y + props.pos.height}\r\n            };\r\n            const {x, y, width, height} = getNewTextAreaParams(event.clientX, event.clientY, {...initPoints}, canvasCoords, props.type);\r\n            props.changeSize(x, y, width, height);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    const onMouseUpSliderHandler = function (event: any) {\r\n        if (!isMousePressed.current) return;\r\n        isMousePressed.current = false;\r\n        event.preventDefault();\r\n    }\r\n\r\n    useEffect(() => { \r\n        switch (props.type) {\r\n        case SliderType.LeftTop:\r\n            offset.current = {x: -halfSizeOfSlider, y: -halfSizeOfSlider};\r\n            cursorStyle.current = 'se-resize';\r\n            break;\r\n        case SliderType.LeftBottom:\r\n            offset.current = {x: -halfSizeOfSlider, y: props.pos.height};\r\n            cursorStyle.current = 'ne-resize';\r\n            break;\r\n        case SliderType.RightTop:\r\n            offset.current = {x: props.pos.width, y: -halfSizeOfSlider};\r\n            cursorStyle.current = 'sw-resize';\r\n            break;   \r\n        case SliderType.RightBottom:\r\n            offset.current = {x: props.pos.width, y: props.pos.height};\r\n            cursorStyle.current = 'nw-resize';\r\n            break;     \r\n        }\r\n        if (props.showNewFigure) {\r\n            switch (props.type) {\r\n                case SliderType.LeftTop:\r\n                    offset.current = {x: -halfSizeOfSlider, y: -halfSizeOfSlider};\r\n                    break;\r\n                case SliderType.LeftBottom:\r\n                    offset.current = {x: -halfSizeOfSlider, y: 100};\r\n                    break;\r\n                case SliderType.RightTop:\r\n                    offset.current = {x: 100, y: -halfSizeOfSlider};\r\n                    break;   \r\n                case SliderType.RightBottom:\r\n                    offset.current = {x: 100, y: 100};\r\n                    break;     \r\n            }\r\n            \r\n        }   \r\n        const sliderElem: HTMLCanvasElement = sliderRef.current!;\r\n        sliderElem.addEventListener('mousedown', onMouseDownSliderHandler);\r\n        document.addEventListener('mousemove', onMouseMoveSliderHandler);\r\n        document.addEventListener('mouseup', onMouseUpSliderHandler);\r\n        \r\n        return () => {\r\n            sliderElem.removeEventListener('mousedown', onMouseDownSliderHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveSliderHandler);\r\n            document.removeEventListener('mouseup', onMouseUpSliderHandler);\r\n        };\r\n    });  \r\n   \r\n    return (\r\n        <div \r\n            ref={sliderRef}\r\n            className='slider'\r\n            style={{\r\n                left: `${props.pos.x + offset.current.x}px`,\r\n                top: `${props.pos.y + offset.current.y}px`,\r\n                cursor: `${cursorStyle.current}`\r\n            }} \r\n        >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;","import React, { useRef, useEffect, useState, useContext, useLayoutEffect }  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport './SelectedObject.css';\r\nimport { isTextObject } from '../../actions';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\nimport SelectFontFamily from '../Select/SelectFontFamily';\r\nimport SelectFontSize from '../Select/SelectFontSize';\r\nimport Slider from './Slider';\r\nimport SliderType from './slyderType';\r\nimport { connect } from 'react-redux';\r\nimport { deselectArea, addImage, resizeEditorObj, dropTextObj } from '../../store/actions/Actions';\r\nimport { undoStack } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\nconst fonts = ['Roboto', 'Open Sans', 'Montserrat', 'Roboto Condensed', 'Source Sans Pro',\r\n'Oswald', 'Merriweather', 'Noto Sans', 'Yanone Kaffeesatz', 'Caveat'];\r\n\r\ninterface TextObjProps {\r\n    editor: Editor,\r\n    onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => void,\r\n    onDropTextObj: (payload: {where: Point}) => void,\r\n    onAddImage: (payload: {newImage: ImageData}) => void,\r\n    onDeselectArea: () => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction getInitColor (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.color : '#000000';\r\n}\r\n\r\nfunction getInitFontWeight (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontWeight : 400;\r\n}\r\n\r\nfunction getInitFontStyle (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontStyle : 'normal';\r\n}\r\n\r\nfunction getInitFontFamily (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontFamily : 'Times New Roman';\r\n}\r\n\r\nfunction getInitFontSize (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.fontSize : 20;\r\n}\r\n\r\nfunction getInitbackgroundColor (editor: Editor) {\r\n    return isTextObject(editor.selectedObject) ? editor.selectedObject.backgroundColor : 'rgba(255, 255, 255, 0.8)';\r\n}\r\n\r\nfunction wrapText(context: CanvasRenderingContext2D, text: string, x: number, y: number, maxWidth: number, lineHeight: number) {\r\n    var words = text.split(' ');\r\n    var line = '';\r\n    for(var n = 0; n < words.length; n++) {\r\n        let wordMetrics = context.measureText(words[n]);\r\n        let wordLength = wordMetrics.width;\r\n        if (wordLength > maxWidth) \r\n        {\r\n            if (line !== '')\r\n                words[n] = line + ' ' + words[n];\r\n            let symbols = words[n].split(\"\");  \r\n            let symbolsLine = '';\r\n            for(let i = 0; i < symbols.length; i++) {\r\n                let testSymbolsLine = symbolsLine + symbols[i];\r\n                let symblosMetrics = context.measureText(testSymbolsLine);\r\n                let testSymbolsWidth = symblosMetrics.width; \r\n                if (testSymbolsWidth > maxWidth && i > 0) {\r\n                    context.fillText(symbolsLine, x, y);\r\n                    symbolsLine = symbols[i];\r\n                    y += lineHeight;\r\n                }\r\n                else {\r\n                    symbolsLine = testSymbolsLine;\r\n                }\r\n            }\r\n            line = symbolsLine + ' ';    \r\n        }\r\n        else {\r\n            let testLine = line + words[n] + ' ';\r\n            let metrics = context.measureText(testLine);\r\n            let testWordWidth = metrics.width;\r\n            if (testWordWidth > maxWidth && n > 0) {\r\n                context.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n    context.fillText(line, x, y);\r\n    }\r\n}\r\n\r\nconst adjustCoords = function (left: number, top: number, textAreaCoords: DOMRect, canvasCoords: DOMRect): {left: number, top: number} {\r\n\r\n    if (left < canvasCoords.left) {\r\n        left = canvasCoords.left;\r\n    }\r\n    if (left + textAreaCoords.width > canvasCoords.right) {\r\n        left = canvasCoords.right - textAreaCoords.width;\r\n    }\r\n    if (top < canvasCoords.top) {\r\n        top = canvasCoords.top;\r\n    }\r\n    if (top + textAreaCoords.height > canvasCoords.bottom) {\r\n        top = Math.max(canvasCoords.bottom - textAreaCoords.height, canvasCoords.top);\r\n    }\r\n    return {left, top}\r\n}\r\n\r\nconst TextObject = (props: TextObjProps) => {\r\n    let textbarRef = useRef(null);   \r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    const [isMousePressed, setIsMousePressed] = useState(false);\r\n    const [offset, setOffset] = useState({x: 0, y: 0});\r\n    const [position, setPosition] = useState(() => calculateInitPos(props.editor));\r\n    const [text, setText] = useState('');\r\n    const [textColor, setTextColor] = useState(() => getInitColor(props.editor));\r\n    const [fontWeight, setFontWeight] = useState(() => getInitFontWeight(props.editor));\r\n    const [fontStyle, setFontStyle] = useState(() => getInitFontStyle(props.editor));\r\n    const [fontFamily, setFontFamily] = useState(() => getInitFontFamily(props.editor));\r\n    const [fontSize, setFontSize] = useState(() => getInitFontSize(props.editor));\r\n    const [backgroundColor, setBackgroundColor] = useState(() => getInitbackgroundColor(props.editor));\r\n    const [resetFigure, setResetFigure] = useState(false);\r\n      \r\n    let textAreaRef = useRef(null);\r\n    \r\n    function calculateInitPos (editor: Editor) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        return {\r\n            x: editor.selectedObject!.position.x,\r\n            y: canvasCoords.top + editor.selectedObject!.position.y,\r\n            width: editor.selectedObject!.w,\r\n            height: editor.selectedObject!.h,\r\n        }\r\n    }\r\n\r\n    const selectFontFamily = <SelectFontFamily\r\n        label=\"Шрифт\"\r\n        value={fontFamily}\r\n        onChange={onFontFamilyChangeHandler}\r\n        options={fonts}\r\n    />\r\n\r\n    const selectFontSize = <SelectFontSize\r\n        label=\"Размер шрифта\"\r\n        value={fontSize}\r\n        onChange={onFontSizeChangeHandler}\r\n    />\r\n\r\n    function onChangeSize(x: number, y: number, width: number, height: number) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({x, y, width, height});\r\n        props.onResizeEditorObj({newPoint: {x: x, y: y - canvasCoords.top}, newWidth: width, newHeight: height});\r\n    }\r\n\r\n    function onFontFamilyChangeHandler(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setFontFamily(event.target.value);\r\n    }\r\n\r\n    function onFontSizeChangeHandler(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setFontSize(Number(event.target.value));\r\n    }\r\n \r\n    function onTextAreaChangeHandler(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    function onChangeTextColorHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setTextColor(event.target.value);\r\n    }\r\n\r\n    function onBoldFontButttonHandler(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        fontWeight == 400 ? setFontWeight(700) : setFontWeight(400);\r\n    }\r\n\r\n    function onItalicsFontButttonHandler(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        fontStyle == 'normal' ? setFontStyle('italic') : setFontStyle('normal');\r\n    }\r\n\r\n    function onApplyTextSelectionClicked(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        var lineHeight = 1.2 * fontSize;\r\n        var ctx = canvas!.getContext(\"2d\");\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        ctx!.fillStyle = textColor;\r\n        ctx!.font = fontWeight + \" \" + fontStyle + \" \" + fontSize + \"px \" + fontFamily;\r\n        wrapText(ctx!, text, position.x, position.y - canvasCoords.top + fontSize, props.editor.selectedObject!.w, lineHeight);\r\n        let newImgData = ctx!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n        props.onAddImage({newImage: newImgData});\r\n        props.onSetIntention(Intention.SelectArea);\r\n        props.onDeselectArea();\r\n    }\r\n    \r\n    function onCancelTextSelectionClicked(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        undoStack.pop();\r\n        props.onDeselectArea();\r\n        props.onSetIntention(Intention.SelectArea);\r\n    }\r\n\r\n    function onMouseDownTextObjHandler(event: any) {\r\n        if (event.defaultPrevented) return;\r\n        setOffset({x: event.clientX - position.x!, y: event.clientY - position.y!});\r\n        setIsMousePressed(true);\r\n    }\r\n        \r\n    const onMouseMoveTextObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (isMousePressed) {\r\n            const textAreaElem: HTMLTextAreaElement = textAreaRef.current!;\r\n            const textAreaCoords = textAreaElem.getBoundingClientRect();\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, textAreaCoords, canvasCoords);\r\n            setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        }\r\n    }\r\n\r\n    const onMouseUpTextObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (!isMousePressed) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        const textAreaElem: HTMLTextAreaElement = textAreaRef.current!;\r\n        const textAreaCoords = textAreaElem.getBoundingClientRect();\r\n        const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, textAreaCoords, canvasCoords);\r\n        setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        props.onDropTextObj({where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        setIsMousePressed(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        const textAreaElem: HTMLCanvasElement = textAreaRef.current!;\r\n        textAreaElem.addEventListener('mousedown', onMouseDownTextObjHandler);\r\n        document.addEventListener('mousemove', onMouseMoveTextObjHandler);\r\n        document.addEventListener('mouseup', onMouseUpTextObjHandler);\r\n        return () => {\r\n            textAreaElem.removeEventListener('mousedown', onMouseDownTextObjHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveTextObjHandler);\r\n            document.removeEventListener('mouseup', onMouseUpTextObjHandler);\r\n\r\n        };\r\n    });  \r\n\r\n    useEffect(() => { \r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({\r\n            x: props.editor.selectedObject!.position.x,\r\n            y: props.editor.selectedObject!.position.y + canvasCoords.top,\r\n            width: props.editor.selectedObject!.w,\r\n            height: props.editor.selectedObject!.h,\r\n        });\r\n    }, []);\r\n \r\n    useLayoutEffect(() => {\r\n        const canvasCoords: DOMRect = canvas!.getBoundingClientRect();\r\n        const textbar: HTMLCanvasElement = textbarRef.current!;\r\n        textbar.style.top = canvasCoords.top + 'px';\r\n        textbar.style.left = canvasCoords.width + 'px';\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"textbar\" ref={textbarRef}>\r\n                <div style={{margin: '5px'}}>\r\n                    <label className=\"textbar__colorLabel\">Цвет</label>\r\n                    <input\r\n                        type='color'\r\n                        onChange={onChangeTextColorHandler}\r\n                    ></input>\r\n                    <button\r\n                        className=\"boldFontButtton\"\r\n                        onClick={onBoldFontButttonHandler}\r\n                        title=\"Толщина текста\"\r\n                    >B</button>\r\n                    <button\r\n                        className=\"italicsFontButtton\"\r\n                        onClick={onItalicsFontButttonHandler}\r\n                        title=\"Стиль текста\"\r\n                    >I</button>\r\n                </div>\r\n                <div>\r\n                    {selectFontFamily}\r\n                </div>\r\n                <div>\r\n                    {selectFontSize}\r\n                </div>\r\n                <div className=\"textBar__buttons\">\r\n                    <button \r\n                        className=\"applyBtn\"\r\n                        onClick={onApplyTextSelectionClicked}\r\n                        title=\"Добавить текст\"\r\n                    >    \r\n                    </button>\r\n                    <button \r\n                        className=\"abolishBtn\"\r\n                        onClick={onCancelTextSelectionClicked}\r\n                        title=\"Отмена\"></button>\r\n                </div>\r\n            </div>\r\n            \r\n            <textarea\r\n                ref={textAreaRef}\r\n                onChange={onTextAreaChangeHandler}\r\n                value={text}\r\n                className=\"textField\"    \r\n                autoFocus\r\n                style={{\r\n                    top: `${position.y}px`,\r\n                    left: `${position.x}px`,\r\n                    height: `${position.height}px`,\r\n                    width: `${position.width}px`,\r\n                    color: `${textColor}`,\r\n                    fontStyle: `${fontStyle}`,\r\n                    fontWeight: fontWeight == 400 ? 400 : 700,\r\n                    fontFamily: `${fontFamily}, sans-serif`,\r\n                    fontSize: `${fontSize}`+'px',\r\n                    backgroundColor: `${backgroundColor}`\r\n                }}\r\n            />\r\n\r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftTop}\r\n                showNewFigure={resetFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightTop}\r\n                showNewFigure={resetFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftBottom}\r\n                showNewFigure={resetFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightBottom}\r\n                showNewFigure={resetFigure}\r\n            />       \r\n        </div>\r\n    ) \r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => dispatch(resizeEditorObj(payload)),\r\n      onDropTextObj: (payload: {where: Point}) => dispatch(dropTextObj(payload)),\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload)),\r\n      onDeselectArea: () => dispatch(deselectArea())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextObject);","import React, { useRef, useEffect, useState, useContext, useLayoutEffect }  from 'react';\r\nimport { Editor, Figure, Point } from '../../model';\r\nimport './SelectedObject.css';\r\nimport { isShapeObject } from '../../actions';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\nimport Slider from './Slider';\r\nimport SliderType from './slyderType';\r\nimport { connect } from 'react-redux';\r\nimport { addImage, resizeEditorObj, deselectArea, dropShapeObj, setFigureBackgroundColor, setFigureBorderColor } from '../../store/actions/Actions';\r\nimport { undoStack } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\nconst borderWidth = 2;\r\nconst strokeWidth = 2;\r\n\r\ninterface ShapeObjProps {\r\n    editor: Editor,\r\n    figure: Figure,\r\n    showNewFigure: boolean,\r\n    onShowNewFigure: (should: boolean) => void,\r\n    onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => void,\r\n    onDropShapeObj: (payload: {where: Point}) => void,\r\n    onAddImage: (payload: {newImage: ImageData}) => void,\r\n    onDeselectArea: () => void,\r\n    onSetFigureBackgroundColor: (payload: {newColor: string}) => void,\r\n    onSetFigureBorderColor: (payload: {newColor: string}) => void,\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\nconst adjustCoords = function (left: number, top: number, textAreaCoords: DOMRect, canvasCoords: DOMRect): {left: number, top: number} {\r\n    if (left < canvasCoords.left) {\r\n        left = canvasCoords.left;\r\n    }\r\n    if (left + textAreaCoords.width > canvasCoords.right + borderWidth * 2 - strokeWidth) { \r\n        left = canvasCoords.right - textAreaCoords.width + borderWidth * 2 - strokeWidth;\r\n    }\r\n    if (top < canvasCoords.top) {\r\n        top = canvasCoords.top;\r\n    }\r\n    if (top + textAreaCoords.height > canvasCoords.bottom + borderWidth * 2 - strokeWidth * 2) {\r\n        top = Math.max(canvasCoords.bottom - textAreaCoords.height + borderWidth * 2 - strokeWidth * 2, canvasCoords.top);\r\n    }\r\n    return {left, top}\r\n}\r\n\r\nfunction calculateInitPos(editor: Editor, canvasCoords: DOMRect) {\r\n    return {\r\n        x: editor.selectedObject!.position.x,\r\n        y: editor.selectedObject!.position.y + canvasCoords.top,\r\n        width: editor.selectedObject!.w,\r\n        height: editor.selectedObject!.h\r\n    }\r\n}\r\n\r\nfunction drawFigure(figure: Figure,\r\n                    context: CanvasRenderingContext2D,\r\n                    position: any,\r\n                    borderColor: string,\r\n                    backgroundColor: string,\r\n                    start: Point\r\n                ){\r\n    context.beginPath();\r\n    context.lineWidth = strokeWidth;\r\n    context.fillStyle = backgroundColor;\r\n    context.strokeStyle = borderColor;\r\n    switch (figure.toString()) {\r\n    case 'circle':\r\n        context.ellipse(position.width / 2 + start.x, position.height / 2 + start.y, position.width / 2, position.height / 2 , 0, 0, Math.PI*2);\r\n        break;\r\n    case 'triangle':\r\n\r\n        context.moveTo(start.x, start.y + position.height);\r\n        context.lineTo(start.x + position.width, start.y + position.height);\r\n        context.lineTo(start.x + position.width / 2, start.y);\r\n        break;  \r\n    case 'rectangle':\r\n        context.moveTo(start.x, start.y + position.height);\r\n        context.lineTo(start.x + position.width, start.y + position.height);\r\n        context.lineTo(start.x + position.width, start.y);\r\n        context.lineTo(start.x, start.y);\r\n        break;\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.fill();\r\n}\r\n\r\nconst ShapeObject = (props: ShapeObjProps) => {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    const canvasCoords = canvas!.getBoundingClientRect();\r\n    const [isMousePressed, setIsMousePressed] = useState(false);\r\n    const [offset, setOffset] = useState({x: 0, y: 0});\r\n    const [position, setPosition] = useState(() => calculateInitPos(props.editor, canvasCoords));\r\n    let shapebarRef = useRef(null);   \r\n    let canvasRef = useRef(null);\r\n  \r\n    function onChangeSize(x: number, y: number, width: number, height: number) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({x, y, width, height});\r\n        props.onResizeEditorObj({newPoint: {x: x, y: y - canvasCoords.top}, newWidth: width, newHeight: height});\r\n    }\r\n\r\n    function resetFigureCoords() {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        setPosition({\r\n            x: props.editor.canvas.width / 2 - 50,\r\n            y: props.editor.canvas.height / 2 - 50 + canvasCoords.top,\r\n            width: 100,\r\n            height: 100});\r\n    }\r\n\r\n    function onApplyShapeSelectionClicked(event: any) {\r\n        const context = canvas!.getContext(\"2d\")!;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n\r\n        if (isShapeObject(props.editor.selectedObject)) {\r\n            drawFigure(props.figure, context, position, props.editor.selectedObject.borderColor, props.editor.selectedObject.backgroundColor, {x: position.x + strokeWidth / 2, y: position.y - canvasCoords.top + strokeWidth});\r\n            let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n            console.log('dispatch ShapeObject addImage');\r\n            props.onAddImage({newImage: newImgData});\r\n            props.onDeselectArea();\r\n        }\r\n        props.onSetIntention(Intention.SelectArea);\r\n    }\r\n\r\n    const onCancelFigureClicked = () => {\r\n        undoStack.pop();\r\n        props.onDeselectArea();\r\n        props.onSetIntention(Intention.SelectArea);\r\n    }\r\n\r\n    function onChangeBorderColorHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        props.onSetFigureBorderColor({newColor: event.target.value});\r\n    }\r\n\r\n    function onChangeBackgroundColorHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        props.onSetFigureBackgroundColor({newColor: event.target.value});\r\n    }\r\n \r\n    function onMouseDownShapeObjHandler(event: any) {\r\n        if (event.defaultPrevented) return;\r\n        setOffset({x: event.clientX - position.x!, y: event.clientY - position.y!});\r\n        setIsMousePressed(true);\r\n    }\r\n        \r\n    const onMouseMoveShapeObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (isMousePressed) {\r\n            const canvasElem: HTMLTextAreaElement = canvasRef.current!;\r\n            const selCanvasCoords = canvasElem.getBoundingClientRect();\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, selCanvasCoords, canvasCoords);\r\n            setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        }\r\n    }\r\n\r\n    const onMouseUpShapeObjHandler = function (event: any) {\r\n        if (event.defaultPrevented) return;\r\n        if (!isMousePressed) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        const selCanvasElem: HTMLCanvasElement = canvasRef.current!;\r\n        const selCanvasCoords = selCanvasElem.getBoundingClientRect();\r\n        const adjustedCoords = adjustCoords(event.clientX - offset.x, event.clientY - offset.y, selCanvasCoords, canvasCoords);\r\n        setPosition({x: adjustedCoords.left, y: adjustedCoords.top, width: position.width, height: position.height});\r\n        props.onDropShapeObj({where: {x: adjustedCoords.left, y: adjustedCoords.top - canvasCoords.top}});\r\n        setIsMousePressed(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        if (props.showNewFigure) {\r\n            resetFigureCoords();\r\n            props.onShowNewFigure(false);\r\n        }    \r\n        const canvasElem: HTMLCanvasElement = canvasRef.current!;\r\n        const context = canvasElem.getContext(\"2d\")!;\r\n        canvasElem.setAttribute('width', props.editor.selectedObject!.w.toString());\r\n        canvasElem.setAttribute('height', props.editor.selectedObject!.h.toString());\r\n        if (isShapeObject(props.editor.selectedObject)) {\r\n            drawFigure(props.figure, context, {...position}, props.editor.selectedObject.borderColor, props.editor.selectedObject.backgroundColor, {x: 0, y: 0});\r\n        }\r\n        canvasElem.addEventListener('mousedown', onMouseDownShapeObjHandler);\r\n        document.addEventListener('mousemove', onMouseMoveShapeObjHandler);\r\n        document.addEventListener('mouseup', onMouseUpShapeObjHandler);\r\n        return () => {\r\n            canvasElem.removeEventListener('mousedown', onMouseDownShapeObjHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveShapeObjHandler);\r\n            document.removeEventListener('mouseup', onMouseUpShapeObjHandler);\r\n        };\r\n    });  \r\n\r\n    useEffect(() => { \r\n        const canvasCoords: DOMRect = canvas!.getBoundingClientRect();\r\n        setPosition({\r\n            x: props.editor.selectedObject!.position.x,\r\n            y: props.editor.selectedObject!.position.y + canvasCoords.top,\r\n            width: props.editor.selectedObject!.w,\r\n            height: props.editor.selectedObject!.h,\r\n        });\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        const canvasCoords: DOMRect = canvas!.getBoundingClientRect();\r\n        const shapebar: HTMLCanvasElement = shapebarRef.current!;\r\n        shapebar.style.top = canvasCoords.top + 'px';\r\n        shapebar.style.left = canvasCoords.width + 'px';\r\n    })\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"shapeBar\" ref={shapebarRef}>\r\n                <div>\r\n                    <label className=\"shapebar__borderLabel\">Граница</label>\r\n                    <input className=\"shapebar__input\"\r\n                        type='color'\r\n                        onChange={onChangeBorderColorHandler}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label className=\"shapebar__fillLabel\">Фон</label>\r\n                    <input\r\n                        type='color'\r\n                        onChange={onChangeBackgroundColorHandler}\r\n                        className=\"shapebar__input\"\r\n                    ></input>\r\n                </div>\r\n                <div className=\"shapeBar__buttons\">\r\n                    <button \r\n                        className=\"applyBtn\"\r\n                        onClick={onApplyShapeSelectionClicked}\r\n                        title=\"Применить\"\r\n                    >    \r\n                    </button>\r\n                    <button \r\n                        className=\"abolishBtn\"\r\n                        onClick={onCancelFigureClicked}\r\n                        title=\"Отмена\"></button>\r\n                </div>\r\n            </div>    \r\n\r\n            <canvas \r\n                className=\"shapeObjcanvasSel\"\r\n                ref={canvasRef}\r\n                style={{\r\n                    top: `${position.y}px`,\r\n                    left: `${position.x}px`,\r\n                    width: `${position.width}px`,\r\n                    height: `${position.height}px`\r\n                }}\r\n\r\n            ></canvas>\r\n            \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftTop}\r\n                showNewFigure={props.showNewFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightTop}\r\n                showNewFigure={props.showNewFigure}\r\n            />\r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.LeftBottom}\r\n                showNewFigure={props.showNewFigure}\r\n            />  \r\n            <Slider\r\n                pos={position}\r\n                changeSize={onChangeSize}\r\n                type={SliderType.RightBottom}\r\n                showNewFigure={props.showNewFigure}\r\n            /> \r\n        </div>\r\n    ) \r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onResizeEditorObj: (payload: {newPoint: Point, newWidth: number, newHeight: number}) => dispatch(resizeEditorObj(payload)),\r\n      onDropShapeObj: (payload: {where: Point}) => dispatch(dropShapeObj(payload)),\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload)),\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onSetFigureBackgroundColor: (payload: {newColor: string}) => dispatch(setFigureBackgroundColor(payload)),\r\n      onSetFigureBorderColor: (payload: {newColor: string}) => dispatch(setFigureBorderColor(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShapeObject);","import React, { useRef, useEffect}  from 'react';\r\nimport {Editor} from '../../model';\r\nimport './Canvas.css';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface CanvasProps {\r\n    editor: Editor,\r\n    setCanv: (ref: any) => void,\r\n}\r\n\r\nconst Canvas = (props: CanvasProps) => {\r\n    let canvasRef = useRef(null);\r\n    useEffect(() => {\r\n        const canvas: HTMLCanvasElement = canvasRef.current!;\r\n        let context = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        context.putImageData(props.editor.canvas, 0, 0, 0, 0, props.editor.canvas.width, props.editor.canvas.height);\r\n        props.setCanv(canvasRef);\r\n    }); \r\n\r\n    return (\r\n        <div>\r\n            <canvas \r\n                ref={canvasRef}    \r\n                width={props.editor.canvas.width}\r\n                height={props.editor.canvas.height}\r\n                className=\"canvas\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps)(Canvas);","export default function transform(start: {x: number, y: number}, end: {x: number, y: number}, bounds: DOMRect)\r\n{\r\n    let startX = Math.min(start.x, end.x, bounds.width);\r\n    let startY = Math.max(bounds.y, Math.min(bounds.y + bounds.height, end.y, start.y));\r\n    let endX = Math.min(Math.max(end.x, start.x), bounds.width);\r\n    let endY = Math.min(startY + Math.abs(end.y - start.y), bounds.y + bounds.height);\r\n\r\n    return ({\r\n        startX: startX,\r\n        startY: startY,\r\n        endX: endX,\r\n        endY: endY,\r\n        width: endX - startX,\r\n        height: endY - startY,\r\n    })\r\n}","import React, { useState, useRef, useEffect, useContext }  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport { isSelectedArea } from '../../actions';\r\nimport transform from './CoordinateTransformer';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\nimport { connect } from 'react-redux';\r\nimport { selectArea, whitenArea, joinSelectionWithCanvas } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\n\r\ninterface SelectingSAProps {\r\n    editor: Editor,\r\n    onSelectArea: (payload: {startPoint: Point, endPoint: Point}) => void,\r\n    onWhitenArea: () => void,\r\n    onJoinSelectionWithCanvas: () => void,\r\n}\r\n\r\n\r\nconst SelectingSelectedArea = (props: SelectingSAProps) => {\r\n       \r\n    let svgRef = useRef(null);\r\n    \r\n    const [mouseState, setMouseState] = useState({\r\n        down: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        isMousePressed: false,\r\n        current: {\r\n            x: 0,\r\n            y: 0,\r\n        }, \r\n    });\r\n        \r\n    function onMouseDownSVGHandler(event: any) {\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        if (event.clientY < canvasCoords.top) return;\r\n        if (event.defaultPrevented) return;\r\n        if (props.editor.selectedObject && isSelectedArea(props.editor.selectedObject)) {\r\n            props.onJoinSelectionWithCanvas();\r\n        }\r\n        setMouseState({\r\n            ...mouseState,\r\n            down: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n            isMousePressed: true,\r\n            current: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n        })\r\n    }\r\n    \r\n    const onMouseMoveSVGHandler = function (event: any) {\r\n        if (mouseState.isMousePressed) {\r\n            setMouseState({\r\n                ...mouseState,\r\n                current: {\r\n                    x: event.clientX,\r\n                    y: event.clientY,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    \r\n    const onMouseUpSVGHandler = function (event: any) {\r\n        if (!mouseState.isMousePressed) return;\r\n        if ((event.clientX !== mouseState.down.x) && (event.clientY !== mouseState.down.y)) {\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const selectionCoords = transform(\r\n                { x: mouseState.down.x, y: mouseState.down.y },\r\n                { x: event.clientX, y: event.clientY },\r\n                canvasCoords\r\n            );\r\n            const startX = selectionCoords.startX as number;\r\n            const startY = selectionCoords.startY as number;\r\n            const endX = selectionCoords.endX as number;\r\n            const endY = selectionCoords.endY as number;\r\n            addToHistory(props.editor);\r\n            props.onSelectArea({startPoint: {x: startX, y: startY - canvasCoords.top}, endPoint: {x: endX, y: endY - canvasCoords.top}});\r\n            props.onWhitenArea();\r\n\r\n        }\r\n        setMouseState({\r\n            ...mouseState,\r\n            isMousePressed: false,\r\n        });\r\n    }\r\n    \r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);\r\n    \r\n    useEffect(() => {\r\n        if (!canvas) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        document.addEventListener('mousedown', onMouseDownSVGHandler);\r\n        document.addEventListener('mousemove', onMouseMoveSVGHandler);\r\n        document.addEventListener('mouseup', onMouseUpSVGHandler);\r\n        const adjustedSVGcoords = transform(\r\n            { x: mouseState.down.x, y: mouseState.down.y},\r\n            { x: mouseState.current.x, y: mouseState.current.y},\r\n            canvasCoords\r\n        );\r\n    \r\n        const svg: HTMLElement = svgRef.current!;\r\n        svg.style.display = (mouseState.isMousePressed) ? 'block' : 'none';\r\n        svg.style.top = adjustedSVGcoords.startY.toString();\r\n        svg.style.left = adjustedSVGcoords.startX.toString();\r\n        svg.setAttribute('width', adjustedSVGcoords.width.toString());\r\n        svg.setAttribute('height', adjustedSVGcoords.height.toString());\r\n    \r\n        return () => {\r\n            document.removeEventListener('mousedown', onMouseDownSVGHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveSVGHandler);\r\n            document.removeEventListener('mouseup', onMouseUpSVGHandler);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <svg\r\n            ref={svgRef}\r\n            className=\"selection\"\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onSelectArea: (payload: {startPoint: Point, endPoint: Point}) => dispatch(selectArea(payload)),\r\n      onWhitenArea: () => dispatch(whitenArea()),\r\n      onJoinSelectionWithCanvas: () => dispatch(joinSelectionWithCanvas())\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectingSelectedArea);","import React, { useState, useRef, useEffect, useContext }  from 'react';\r\nimport { Editor, Point } from '../../model';\r\nimport { isSelectedArea } from '../../actions';\r\nimport transform from './CoordinateTransformer';\r\nimport {CanvasContext} from '../EditorComponent/EditorComponent';\r\nimport './SelectedObject.css';\r\nimport { connect } from 'react-redux';\r\nimport { deselectArea, joinSelectionWithCanvas, selectTextArea } from '../../store/actions/Actions';\r\nimport { addToHistory } from '../../history';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface TextAreaProps {\r\n    editor: Editor,\r\n    onDeselectArea: () => void,\r\n    onSelectTextArea: (payload: {startPoint: Point, endPoint: Point}) => void,\r\n    onJoinSelectionWithCanvas: () => void,\r\n    onSetIntention: (intent: Intention) => void\r\n}\r\n\r\nconst SelectingTextObject = (props: TextAreaProps) => {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);  \r\n    let svgRef = useRef(null);\r\n\r\n    const [mouseState, setMouseState] = useState({\r\n        down: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        isMousePressed: false,\r\n        current: {\r\n            x: 0,\r\n            y: 0,\r\n        }, \r\n    });\r\n        \r\n    function onMouseDownHandler(event: any) {\r\n        if (props.editor.selectedObject) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        if (event.clientY < canvasCoords.top) return;\r\n        setMouseState({\r\n            ...mouseState,\r\n            down: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n            isMousePressed: true,\r\n            current: {\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n            },\r\n        })\r\n    }\r\n    \r\n    const onMouseMoveHandler = function (event: any) {\r\n        if (mouseState.isMousePressed) {\r\n            setMouseState({\r\n                ...mouseState,\r\n                current: {\r\n                    x: event.clientX,\r\n                    y: event.clientY,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    \r\n    const onMouseUpHandler = function (event: any) {\r\n        if (!mouseState.isMousePressed) return;\r\n        if ((event.clientX !== mouseState.down.x) && (event.clientY !== mouseState.down.y)) {\r\n            const canvasCoords = canvas!.getBoundingClientRect();\r\n            const selectionCoords = transform(\r\n                { x: mouseState.down.x, y: mouseState.down.y },\r\n                { x: event.clientX, y: event.clientY },\r\n                canvasCoords\r\n            );\r\n            const startX = selectionCoords.startX + 2 as number;\r\n            const startY = selectionCoords.startY + 2 as number;\r\n            const endX = selectionCoords.endX + 2 as number;\r\n            const endY = selectionCoords.endY + 2 as number;\r\n            addToHistory(props.editor);\r\n            props.onSelectTextArea({startPoint: {x: startX, y: startY - canvasCoords.top}, endPoint: {x: endX, y: endY - canvasCoords.top}});\r\n        }\r\n        \r\n        setMouseState({\r\n            ...mouseState,\r\n            isMousePressed: false,\r\n        });\r\n        props.onSetIntention(Intention.HandleSelectedObject);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (props.editor.selectedObject && isSelectedArea(props.editor.selectedObject)) {\r\n            console.log('dispatch SelectingTextObject joinSelectionWithCanvas');\r\n            props.onJoinSelectionWithCanvas();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!canvas) return;\r\n        const canvasCoords = canvas!.getBoundingClientRect();\r\n        document.addEventListener('mousedown', onMouseDownHandler);\r\n        document.addEventListener('mousemove', onMouseMoveHandler);\r\n        document.addEventListener('mouseup', onMouseUpHandler);\r\n        const adjustedSVGcoords = transform(\r\n            { x: mouseState.down.x, y: mouseState.down.y},\r\n            { x: mouseState.current.x, y: mouseState.current.y},\r\n            canvasCoords\r\n        );\r\n    \r\n        const svg: HTMLElement = svgRef.current!;\r\n        svg.style.display = (mouseState.isMousePressed) ? 'block' : 'none';\r\n        svg.style.top = adjustedSVGcoords.startY.toString();\r\n        svg.style.left = adjustedSVGcoords.startX.toString();\r\n        svg.setAttribute('width', adjustedSVGcoords.width.toString());\r\n        svg.setAttribute('height', adjustedSVGcoords.height.toString());\r\n        return () => {\r\n            document.removeEventListener('mousedown', onMouseDownHandler);\r\n            document.removeEventListener('mousemove', onMouseMoveHandler);\r\n            document.removeEventListener('mouseup', onMouseUpHandler);\r\n            \r\n        };\r\n    });\r\n\r\n    return (\r\n        <svg\r\n            ref={svgRef}\r\n            className=\"textSelection\"\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onSelectTextArea: (payload: {startPoint: Point, endPoint: Point}) => dispatch(selectTextArea(payload)),\r\n      onJoinSelectionWithCanvas: () => dispatch(joinSelectionWithCanvas())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectingTextObject);","import React, { useContext }  from 'react';\r\nimport {Editor} from '../../model';\r\nimport { CanvasContext } from '../EditorComponent/EditorComponent';\r\nimport { Photo } from 'pexels';\r\nimport './Gallery.css';\r\nimport { addImage } from '../../store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { addToHistory } from '../../history';\r\n\r\ninterface PreviewImgProps {\r\n    editor: Editor,\r\n    key: number,\r\n    photo: Photo,\r\n    mediumSrc: string,\r\n    onAddImage: (payload: {newImage: ImageData}) => void\r\n}\r\n\r\nfunction PreviewImg(props: PreviewImgProps) {\r\n    let canvas: HTMLCanvasElement | null = useContext(CanvasContext);      \r\n    const onPreviewImgClicked = () => {\r\n        console.log('props.mediumSrc', props.mediumSrc);\r\n        const image = new Image();\r\n        image.src = props.mediumSrc;\r\n        image.crossOrigin = \"Anonymous\";\r\n        let context = canvas!.getContext('2d');\r\n        image.onload = () => {\r\n            let imageWidth = image.width;\r\n            let imageHeight = image.height;\r\n            if (imageWidth > props.editor.canvas.width || imageHeight > props.editor.canvas.height) {\r\n                let shouldEnlarge = window.confirm(\"импортируемая фотография больше по размеру холста. Увеличить полотно до размера фотографии?\");\r\n                if (shouldEnlarge) {\r\n                    canvas!.width = imageWidth;\r\n                    canvas!.height = imageHeight;\r\n                    context!.drawImage(image, 0, 0);\r\n                } \r\n            } else\r\n                context!.drawImage(image, 0, 0);\r\n            let newImgData = context!.getImageData(0, 0, canvas!.width, canvas!.height);\r\n            console.log('dispatch PreviewImg addImage');\r\n            addToHistory(props.editor);\r\n            props.onAddImage({newImage: newImgData});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pickImgContainer__preview\" onClick={onPreviewImgClicked}>\r\n            <img src={props.photo.src.tiny} width=\"280\" height=\"200\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onAddImage: (payload: {newImage: ImageData}) => dispatch(addImage(payload))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewImg);","import React, { useState, useEffect }  from 'react';\r\nimport { createClient, PhotosWithTotalResults, ErrorResponse } from 'pexels';\r\nimport './Gallery.css';\r\nimport PreviewImg from './PreviewImg';\r\nimport { Intention } from '../../Intentions';\r\n\r\nconst client = createClient('563492ad6f91700001000001f32c0c635f2c46e4badcbd278b68e104');\r\n\r\ninterface GalleryProps {\r\n    onSetIntention: (intent: Intention) => void,\r\n}\r\n\r\nfunction Gallery(props: GalleryProps) {\r\n\r\n\r\n    enum Format {jpeg, png};\r\n    let f = Format.jpeg;\r\n    const [query, setQuery] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [previewsArr, fillPreviewsArr] = useState([]);\r\n\r\n    let prewievsArray: any;\r\n    function getPhotos(photos: PhotosWithTotalResults | ErrorResponse) {\r\n        if(\"error\" in photos) {\r\n        } else {\r\n            prewievsArray = photos.photos.map((photo, index) => {\r\n                return (\r\n                    <PreviewImg\r\n                        key={index}\r\n                        photo={photo}\r\n                        mediumSrc={photo.src.medium}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        fillPreviewsArr(prewievsArray);\r\n    }\r\n    \r\n    const showMorePreiews = () => {\r\n        setPage(page + 1);\r\n    }\r\n\r\n    const showPreviews = () => {\r\n        if (query == '') return;\r\n        client.photos.search({ query, per_page: 4, page: page}).then(photos => {\r\n            getPhotos(photos);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        showPreviews();\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"pickImgContainer\">\r\n            <input\r\n                placeholder=\"Поиск\"\r\n                onChange={e => {setQuery(e.target.value); setPage(1);}}\r\n            ></input>\r\n            <button onClick={showPreviews} className=\"pickImgContainer__searchButton\">Найти</button>\r\n            <div onClick={e => props.onSetIntention(Intention.SelectArea)} className=\"pickImgContainer__closeButton\" />\r\n            <div className=\"pickImgContainer__previewsContainer\">\r\n                {previewsArr}\r\n            </div>\r\n            <button\r\n                onClick={showMorePreiews}\r\n                className=\"pickImgContainer__morePreviewsButton\"\r\n            >Еще</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React, { useState } from 'react';\r\nimport { Figure, Editor } from '../../model';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport { isSelectedArea, isTextObject, isShapeObject } from '../../actions';\r\nimport Video from '../Video/Video';\r\nimport SelectedArea from '../SelectedObject/SelectedArea';\r\nimport TextObject from '../SelectedObject/TextObject';\r\nimport ShapeObject from '../SelectedObject/ShapeObject';\r\nimport Canvas from '../Canvas/Canvas';\r\nimport './EditorComponent.css';\r\nimport SelectingSelectedArea from '../SelectedObject/SelectingSA';\r\nimport SelectingTextObject from '../SelectedObject/SelectingTextObject';\r\nimport Gallery from '../Gallery/Gallery';\r\nimport { connect } from 'react-redux';\r\nimport { deselectArea, addFigure } from '../../store/actions/Actions';\r\nimport { Intention } from '../../Intentions';\r\n\r\ninterface EditorComponentProps {\r\n    editor: Editor,\r\n    onDeselectArea: () => void,\r\n}\r\n\r\nexport const CanvasContext = React.createContext(null);\r\n\r\nfunction EditorComponent(props: EditorComponentProps) {\r\n    const [figure, setFigure] = useState(Figure.circle);\r\n    const [showNewFigure, setShowNewFigure] = useState(false);\r\n\r\n    const [intention, setIntention] = useState(Intention.SelectArea);\r\n    \r\n    const [canvas, setCanvas] = useState(null);\r\n    const getCanvas = (ref: any) => setCanvas(ref.current!);\r\n\r\n    const onSetIntention = (intent: Intention) => {\r\n        setIntention(intent);\r\n    }\r\n\r\n    function onShowNewFigure(should: boolean) {\r\n        setShowNewFigure(should);\r\n    }\r\n\r\n    function onSetFigure(newFigure: Figure) {\r\n        setFigure(newFigure);\r\n    }\r\n\r\n\r\n    return (\r\n        <CanvasContext.Provider value={canvas}>\r\n            <div>\r\n                {intention != Intention.TakePhoto &&\r\n                <Toolbar \r\n                    onSetFigure={onSetFigure}\r\n                    onSetIntention={onSetIntention}\r\n                />\r\n                }\r\n                \r\n                {(props.editor.selectedObject && isSelectedArea(props.editor.selectedObject)) && \r\n                 <SelectedArea />\r\n                }\r\n\r\n                {(props.editor.selectedObject && isTextObject(props.editor.selectedObject)) &&\r\n                <TextObject onSetIntention={onSetIntention} />\r\n                }\r\n\r\n                {(props.editor.selectedObject && isShapeObject(props.editor.selectedObject)) &&\r\n                <ShapeObject\r\n                    figure={figure}\r\n                    showNewFigure={showNewFigure}\r\n                    onShowNewFigure={onShowNewFigure}\r\n                    onSetIntention={onSetIntention}\r\n                />}\r\n\r\n                {intention == Intention.TakePhoto\r\n                ? <Video onSetIntention={onSetIntention} />\r\n                : <Canvas setCanv={getCanvas} />\r\n                }\r\n\r\n                {(intention == Intention.SelectArea) &&\r\n                <SelectingSelectedArea />\r\n                }       \r\n\r\n                {intention == Intention.SelectTextObj &&\r\n                <SelectingTextObject onSetIntention={onSetIntention}/>\r\n                }\r\n                \r\n                {intention == Intention.BrowseRemoteGallery &&\r\n                <Gallery onSetIntention={onSetIntention} />\r\n                }\r\n               \r\n            </div>\r\n        </CanvasContext.Provider>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        editor: state.editorReducer.editor\r\n    }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n      onDeselectArea: () => dispatch(deselectArea()),\r\n      onAddFigure: (payload: {figureType: Figure}) => dispatch(addFigure(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorComponent);","import React, { useEffect } from 'react';\r\nimport { Editor } from './model'\r\nimport './App.css';\r\nimport EditorComponent from './Components/EditorComponent/EditorComponent';\r\nimport { redo, undo, redoStack, undoStack } from './history';\r\nimport { rollEditor } from './store/actions/Actions';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface AppProps {\r\n  onRoll: (payload: {newEditor: Editor}) => void,\r\n}\r\n\r\nfunction App(props: AppProps) {\r\n  \r\n  const onKeyPressed = (event: any) => {\r\n    if (event.ctrlKey && (event.which == 90 || event.keyCode == 90)) {\r\n      if (undoStack.length) {\r\n        const editor: Editor = undo();\r\n        props.onRoll({newEditor: editor});\r\n      }\r\n    }\r\n    if (event.ctrlKey && (event.which == 89 || event.keyCode == 89)) {\r\n      if (redoStack.length) {\r\n        const editor: Editor = redo()!;\r\n        props.onRoll({newEditor: editor});\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.addEventListener('keydown', event => onKeyPressed(event));\r\n      return () => {\r\n          document.removeEventListener('keydown', onKeyPressed);\r\n      };\r\n  });\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <EditorComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return {\r\n    onRoll: (payload: {newEditor: Editor}) => dispatch(rollEditor(payload)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SELECT_AREA, WHITEN_AREA, JOIN_SA_WITH_CANVAS, DROP_SA, DESELECT_AREA, ADD_FIGURE, APPLY_FILTER, CUT,\r\nCROP, CREATE_CANVAS, ADD_IMAGE, RESIZE_EDITOR_OBJ, DROP_TEXT_OBJ, SELECT_TEXT_AREA, SET_FIGURE_BACKGROUND_COLOR,\r\nSET_FIGURE_BORDER_COLOR, ROLL, RESIZE } from '../actions/actionTypes';\r\nimport { Point, Editor } from '../../model';\r\nimport { selectArea, whitenArea, joinSelectionWithCanvas, dropSelection, cleanCanvas, deSelectArea, addFigure,\r\napplyFilter, cut, crop, createCanvas, addImage, resizeEditorObj, dropTextObj, selectTextArea, setFigureBackgroundColor,\r\nsetFigureBorderColor, rollEditor, resizeCanvas } from '../../actions';\r\n\r\nlet editor: Editor = {\r\n    //canvas: {} as ImageData,\r\n    canvas: cleanCanvas(800, 600),\r\n    selectedObject: null,\r\n}\r\n\r\nlet initialState = {\r\n    editor: {...editor}\r\n}\r\n\r\nexport default function editorReducer (state = initialState, action: any) {\r\n    switch(action.type) {\r\n        case SELECT_AREA:\r\n            return {\r\n                editor: selectArea(state.editor, action.payload)\r\n            }    \r\n        case WHITEN_AREA:\r\n            return {\r\n                editor: whitenArea(state.editor, action.payload)\r\n            }    \r\n        case JOIN_SA_WITH_CANVAS:\r\n            return {\r\n                editor: joinSelectionWithCanvas(state.editor, action.payload)   \r\n            }    \r\n        case DROP_SA:\r\n            return {\r\n                editor: dropSelection(state.editor, action.payload) \r\n            }\r\n        case DESELECT_AREA:\r\n            return {\r\n                editor: deSelectArea(state.editor, action.payload)\r\n            }  \r\n        case ADD_FIGURE:\r\n            return {\r\n                editor: addFigure(state.editor, action.payload)\r\n            }  \r\n        case APPLY_FILTER:\r\n            return {\r\n                editor: applyFilter(state.editor, action.payload)\r\n            } \r\n        case CUT:\r\n            return {\r\n                editor: cut(state.editor, action.payload)\r\n            } \r\n        case CROP:\r\n            return {\r\n                editor: crop(state.editor, action.payload)\r\n            } \r\n        case CREATE_CANVAS:\r\n            return {\r\n                editor: createCanvas(state.editor, action.payload)\r\n            }   \r\n        case ADD_IMAGE:\r\n            return {\r\n                editor: addImage(state.editor, action.payload)\r\n            }   \r\n        case RESIZE_EDITOR_OBJ:\r\n            return {\r\n                editor: resizeEditorObj(state.editor, action.payload)\r\n            }   \r\n        case DROP_TEXT_OBJ:\r\n            return {\r\n                editor: dropTextObj(state.editor, action.payload)\r\n            }   \r\n        case SELECT_TEXT_AREA:\r\n            return {\r\n                editor: selectTextArea(state.editor, action.payload)\r\n            }     \r\n        case SET_FIGURE_BACKGROUND_COLOR:\r\n            return {\r\n                editor: setFigureBackgroundColor(state.editor, action.payload)\r\n            }   \r\n        case SET_FIGURE_BORDER_COLOR:\r\n            return {\r\n                editor: setFigureBorderColor(state.editor, action.payload)\r\n            }   \r\n        case ROLL:\r\n            return {\r\n                editor: rollEditor(state.editor, action.payload)\r\n            }  \r\n        case RESIZE:\r\n            return {\r\n                editor: rollEditor(state.editor, action.payload)\r\n            }                                                                                \r\n        default:\r\n            return state  \r\n    }\r\n    return state;\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport editorReducer from './editorReducer';\r\n\r\nexport default combineReducers({\r\n    editorReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Editor} from './model';\r\nimport {createCanvas} from './actions';\r\nimport {editor} from './reducer';\r\nimport {dispatch} from './reducer';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { addToHistory, undoStack } from './history';\r\n\r\nimport editorReducer from './store/reducers/editorReducer';\r\n\r\nfunction loggerMiddleWare(store: any) {\r\n  return function(next: any) {\r\n    return function(action: any) {\r\n      const result = next(action);\r\n\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(loggerMiddleWare));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n     <App/>\r\n   </React.StrictMode>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}